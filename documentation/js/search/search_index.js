var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddComponent.html",[0,0.448,1,0.988]],["body/components/AddComponent.html",[0,0.574,1,1.511,2,1.281,3,0.097,4,0.097,5,0.909,6,1.008,7,0.909,8,0.909,9,0.088,10,2.524,11,0.953,12,1.648,13,3.14,14,0.796,15,1.518,16,4.575,17,1.518,18,3.802,19,0.228,20,1.018,21,3.327,22,5.741,23,3.545,24,0.677,25,1.834,26,4.603,27,0.862,28,2.524,29,4.237,30,3.545,31,3.946,32,3.327,33,3.495,34,5.242,35,4.237,36,0.985,37,4.357,38,0.654,39,0.013,40,0.916,41,0.549,42,0.572,43,3.164,44,2.892,45,0.653,46,1.491,47,2.892,48,3.327,49,2.892,50,1.572,51,1.417,52,1.325,53,3.006,54,2.892,55,0.344,56,0.277,57,1.364,58,1.122,59,1.642,60,1.562,61,1.956,62,1.281,63,1.956,64,2.892,65,2.892,66,2.281,67,2.892,68,2.892,69,0.097,70,0.182,71,1.66,72,1.716,73,2.1,74,2.892,75,2.892,76,3.545,77,2.439,78,2.892,79,2.892,80,1.364,81,2.892,82,2.281,83,2.281,84,2.281,85,0.676,86,3.807,87,1.562,88,2.892,89,1.835,90,2.524,91,1.835,92,1.835,93,2.281,94,1.49,95,2.281,96,1.835,97,2.281,98,2.281,99,2.524,100,1.956,101,3.164,102,3.437,103,4.357,104,2.946,105,1.754,106,3.802,107,2.474,108,2.765,109,4.357,110,4.357,111,2.765,112,3.802,113,1.894,114,2.61,115,2.281,116,2.524,117,0.698,118,1.37,119,1.37,120,0.796,121,1.834,122,0.909,123,2.557,124,0.796,125,2.262,126,0.909,127,0.77,128,0.796,129,0.823,130,0.796,131,0.909,132,0.796,133,0.909,134,0.909,135,0.77,136,0.77,137,0.796,138,0.909,139,0.796,140,0.909,141,0.796,142,0.909,143,0.77,144,0.77,145,0.796,146,0.909,147,0.796,148,0.909,149,0.77,150,0.796,151,0.909,152,0.77,153,0.796,154,1.37,155,0.909,156,0.796,157,0.909,158,0.796,159,0.909,160,0.909,161,0.77,162,0.77,163,0.85,164,0.823,165,0.909,166,0.007,167,0.007]],["title/components/AddComponent-1.html",[0,0.373,1,0.824,168,1.681]],["body/components/AddComponent-1.html",[0,0.515,1,1.397,2,1.122,3,0.082,4,0.082,5,0.765,6,0.848,7,0.765,8,0.765,9,0.074,11,0.835,12,1.48,13,2.819,14,0.67,15,1.33,16,4.108,17,1.33,18,3.33,19,0.192,20,0.892,21,2.987,23,3.183,24,0.593,25,1.676,26,4.204,27,0.755,29,3.87,30,2.581,31,3.604,32,2.987,33,3.192,36,0.962,38,0.863,39,0.013,40,0.893,41,0.559,42,0.755,43,3.419,45,0.705,46,1.339,48,2.987,50,1.377,51,1.241,52,1.431,53,2.745,55,0.327,56,0.233,57,1.148,58,0.944,59,1.382,60,1.315,61,1.646,62,1.122,69,0.082,70,0.153,71,1.516,72,1.567,73,1.768,82,1.92,83,1.92,84,1.92,85,0.892,86,3.419,87,1.315,89,1.545,90,2.124,91,1.545,92,1.545,93,1.92,94,1.254,95,1.92,96,1.545,97,1.92,98,1.92,99,2.124,100,1.646,101,2.772,104,3.914,105,2.145,106,4.651,107,3.026,108,4.074,111,2.422,112,3.33,113,1.659,114,2.286,115,1.92,116,2.124,117,0.588,118,1.2,119,1.2,120,0.67,121,1.676,122,0.765,123,2.502,124,0.67,125,2.167,126,0.765,127,0.648,128,0.67,129,0.692,130,0.67,131,0.765,132,0.67,133,0.765,134,0.765,135,0.648,136,0.648,137,0.67,138,0.765,139,0.67,140,0.765,141,0.67,142,0.765,143,0.648,144,0.648,145,0.67,146,0.765,147,0.67,148,0.765,149,0.648,150,0.67,151,0.765,152,0.648,153,0.67,154,1.2,155,0.765,156,0.67,157,0.765,158,0.67,159,0.765,160,0.765,161,0.648,162,0.648,163,0.716,164,0.692,165,0.765,166,0.006,167,0.006,168,1.199,169,2.124,170,3.487,171,3.816,172,2.434,173,3.419,174,3.192,175,3.816,176,2.434,177,2.434,178,3.816,179,3.604,180,2.434,181,2.581,182,2.434,183,2.434,184,2.434,185,2.434,186,3.011,187,1.768,188,2.434,189,1.458,190,3.011,191,2.434,192,1.768,193,2.124,194,2.434,195,2.669,196,2.434,197,2.434,198,2.434,199,2.434,200,2.434,201,5.788,202,2.434,203,2.434,204,2.434,205,2.434,206,2.434,207,2.434,208,2.434,209,5.788,210,5.051,211,2.434,212,2.434,213,2.434,214,2.434,215,2.434,216,2.434,217,3.816,218,2.434,219,2.434,220,2.434,221,3.816,222,0.848,223,2.434,224,0.98,225,2.434,226,2.434,227,2.434,228,2.772,229,3.011,230,3.816,231,3.87,232,5.329,233,5.329,234,3.816,235,3.33,236,3.33,237,3.33,238,2.772,239,2.772,240,3.816,241,3.33,242,3.33,243,3.33]],["title/components/AppComponent.html",[0,0.448,124,1.126]],["body/components/AppComponent.html",[0,0.588,1,1.086,2,1.322,3,0.102,4,0.102,5,0.948,6,1.051,7,0.948,8,0.948,9,0.091,11,0.984,12,1.69,14,0.83,15,1.567,17,1.567,19,0.354,20,1.051,24,0.698,25,1.874,27,0.89,36,0.955,38,0.682,39,0.013,40,0.923,41,0.563,42,0.597,45,0.674,46,1.529,50,1.623,51,1.463,52,1.367,55,0.305,56,0.289,62,0.887,69,0.102,70,0.19,71,0.858,72,0.887,87,2.429,113,2.337,117,0.728,118,1.414,119,1.414,120,0.83,121,2.004,122,0.948,123,2.585,124,1.64,125,2.338,126,0.948,127,0.803,128,0.83,129,0.858,130,0.83,131,0.948,132,0.83,133,0.948,134,0.948,135,0.803,136,0.803,137,0.83,138,0.948,139,0.83,140,0.948,141,0.83,142,0.948,143,0.803,144,0.803,145,0.83,146,0.948,147,0.83,148,0.948,149,0.803,150,0.83,151,0.948,152,0.803,153,0.83,154,1.414,155,0.948,156,0.83,157,0.948,158,0.83,159,0.948,160,0.948,161,0.803,162,0.803,163,0.887,164,1.901,165,0.948,166,0.007,167,0.007,168,2.648,224,1.214,244,2.633,245,2.694,246,2.215,247,5.376,248,4.497,249,5.959,250,2.553,251,2.553,252,3.053,253,2.633,254,3.782,255,4.497,256,3.547,257,3.017,258,2.694,259,1.807,260,2.553,261,1.807,262,1.807,263,0.948,264,3.017,265,2.694,266,3.017,267,3.017,268,2.04,269,1.807,270,2.633,271,2.191,272,3.017,273,3.017,274,2.121,275,3.998,276,3.924,277,3.924,278,3.017,279,2.553,280,3.017,281,5.376,282,4.692,283,4.497,284,2.77,285,3.924,286,1.807,287,1.713,288,1.807,289,2.633,290,2.04,291,3.412,292,3.905,293,2.38,294,2.38,295,3.547,296,1.713,297,1.629,298,2.191,299,2.191,300,3.017,301,1.914,302,1.807,303,2.553,304,2.38,305,2.633,306,2.633,307,2.633,308,2.633,309,3.017,310,2.648,311,2.633,312,2.633]],["title/modules/AppModule.html",[313,1.377,314,2.971]],["body/modules/AppModule.html",[3,0.119,4,0.119,9,0.107,33,3.022,39,0.013,55,0.391,56,0.338,60,1.907,69,0.17,70,0.222,85,0.825,87,3.468,117,0.852,124,2.16,125,1.073,166,0.008,167,0.008,195,1.535,313,1.188,314,5.943,315,1.369,316,1.819,317,3.179,318,3.342,319,3.342,320,1.598,321,3.081,322,3.081,323,3.081,324,3.081,325,3.081,326,4.776,327,4.776,328,4.776,329,3.638,330,4.776,331,4.776,332,2.864,333,2.005,334,2.005,335,2.564,336,2.283,337,2.283,338,5.044,339,4.402,340,2.785,341,5.044,342,3.531,343,5.044,344,5.885,345,1.907,346,2.388,347,3.531,348,3.531,349,3.531,350,3.081,351,3.979,352,5.136,353,3.531,354,3.081,355,1.887,356,3.531,357,3.081,358,2.005,359,2.241,360,3.664,361,3.531,362,3.081,363,2.388,364,3.531,365,3.979,366,3.531,367,5.044,368,2.785,369,1.421,370,3.081,371,3.531,372,2.785,373,3.081,374,3.531,375,2.379,376,3.531,377,3.081,378,3.979,379,3.081,380,2.564,381,3.531,382,3.531,383,3.531,384,3.531,385,3.531,386,3.531,387,3.531,388,3.531,389,3.531,390,5.044,391,5.044,392,5.044]],["title/modules/AppRoutingModule.html",[313,1.377,326,2.767]],["body/modules/AppRoutingModule.html",[3,0.173,4,0.173,9,0.155,39,0.013,55,0.31,56,0.491,58,1.989,69,0.173,70,0.322,166,0.01,167,0.01,195,2.229,315,1.989,320,2.32,326,4.387,336,2.32,337,2.936,393,5.128,394,3.468,395,4.117,396,4.041,397,5.33,398,4.712,399,5.169,400,4.712,401,4.712,402,7.479,403,5.128,404,5.128,405,4.475,406,5.128,407,5.128,408,2.769,409,5.128,410,5.128,411,3.468,412,5.128,413,5.128,414,5.128]],["title/classes/AsyncValidators.html",[63,2.767,70,0.257]],["body/classes/AsyncValidators.html",[3,0.173,4,0.173,9,0.156,19,0.405,24,1.009,36,0.77,38,1.162,39,0.013,40,0.611,41,0.539,42,1.018,45,0.77,46,1.462,51,2.113,55,0.341,57,2.425,63,4.394,69,0.173,70,0.323,77,2.717,85,1.665,87,2.776,166,0.01,167,0.01,179,4.394,181,3.476,263,1.616,372,4.055,415,3.476,416,4.486,417,5.175,418,6.498,419,6.498,420,7.125,421,5.141,422,5.141,423,7.125,424,4.486,425,4.124,426,4.124,427,3.224,428,5.141,429,4.486,430,6.498,431,5.141,432,5.141,433,5.141]],["title/components/AuthComponent.html",[0,0.448,127,1.09]],["body/components/AuthComponent.html",[0,0.71,1,1.383,2,1.684,3,0.143,4,0.143,5,1.801,7,1.333,8,1.333,9,0.128,11,1.253,12,2.04,14,1.167,19,0.334,24,0.89,25,2.185,27,1.284,36,0.858,39,0.013,40,0.969,45,0.635,46,1.629,55,0.274,56,0.406,62,1.246,69,0.143,70,0.266,117,1.023,118,1.801,119,1.801,120,1.167,121,2.185,122,1.333,123,2.656,124,1.167,125,2.444,126,1.333,127,1.851,128,1.167,129,1.206,130,1.167,131,1.333,132,1.167,133,1.333,134,1.333,135,1.129,136,1.129,137,1.167,138,1.333,139,1.167,140,1.333,141,1.167,142,1.333,143,1.129,144,1.129,145,1.167,146,1.333,147,1.167,148,1.333,149,1.129,150,1.167,151,1.333,152,1.129,153,1.167,154,1.801,155,1.333,156,1.167,157,1.333,158,1.167,159,1.333,160,1.333,161,1.129,162,1.129,163,1.246,164,1.206,165,1.333,166,0.009,167,0.009,265,3.431,268,2.867,434,3.699,435,4.239,436,4.239,437,3.078]],["title/modules/AuthModule.html",[313,1.377,438,2.971]],["body/modules/AuthModule.html",[3,0.169,4,0.169,9,0.151,39,0.013,55,0.375,56,0.479,69,0.169,70,0.314,117,1.207,127,2.086,149,2.086,166,0.01,167,0.01,313,1.683,315,1.94,316,2.576,317,3.799,318,2.84,319,2.84,320,2.263,329,4.034,332,3.626,333,2.84,334,2.84,336,2.89,337,2.89,346,3.382,405,4.365,438,6.028,439,4.365,440,4.365,441,4.365,442,5.295,443,5.001,444,3.825,445,2.84,446,4.365,447,4.365,448,3.632]],["title/modules/AuthRoutingModule.html",[313,1.377,442,2.767]],["body/modules/AuthRoutingModule.html",[0,0.727,3,0.18,4,0.18,9,0.161,39,0.013,55,0.373,56,0.511,58,2.067,69,0.18,70,0.335,127,1.77,149,1.77,166,0.01,167,0.01,195,2.317,315,2.067,320,2.412,336,2.412,337,3.008,394,3.604,395,4.218,396,4.113,397,4.899,398,3.871,400,3.871,401,3.871,442,4.495,446,4.651,447,4.651,449,5.329,450,4.827,451,3.192,452,4.651,453,3.382,454,5.801,455,3.382,456,3.871]],["title/injectables/AuthService.html",[457,1.331,458,2.971]],["body/injectables/AuthService.html",[3,0.164,4,0.164,9,0.147,19,0.384,24,0.975,27,1.243,36,0.94,38,1.419,39,0.013,40,0.746,41,0.658,42,1.243,45,0.729,55,0.378,56,0.467,69,0.164,70,0.306,71,1.385,72,1.432,85,1.138,166,0.009,167,0.009,246,2.398,263,1.531,345,2.63,358,2.765,359,3.09,425,3.09,426,3.09,427,3.143,454,6.062,457,2.042,458,4.559,459,2.765,460,4.249,461,4.869,462,4.962,463,4.869,464,6.277,465,6.277,466,4.657,467,4.869,468,4.869,469,3.536,470,3.293,471,4.869,472,4.869,473,3.536,474,4.869,475,2.508,476,4.869,477,4.869,478,4.869,479,6.277,480,4.245]],["title/components/ChangePasswordDialogComponent.html",[0,0.448,128,1.126]],["body/components/ChangePasswordDialogComponent.html",[0,0.682,1,1.312,2,1.599,3,0.132,4,0.132,5,1.235,6,1.368,7,1.235,8,1.235,9,0.119,11,1.189,12,1.96,14,1.081,15,1.894,17,1.894,19,0.309,24,0.844,25,2.116,27,1.234,36,0.814,39,0.012,40,0.958,45,0.588,46,1.546,55,0.188,56,0.376,62,1.155,69,0.132,70,0.247,117,0.948,118,1.709,119,1.709,120,1.081,121,2.116,122,1.235,123,2.649,124,1.081,125,2.449,126,1.235,127,1.046,128,1.852,129,2.233,130,2.254,131,1.235,132,1.081,133,1.235,134,1.235,135,1.046,136,1.046,137,1.081,138,1.235,139,1.081,140,1.235,141,1.081,142,1.235,143,1.046,144,1.046,145,1.081,146,1.235,147,1.081,148,1.235,149,1.046,150,1.081,151,1.235,152,1.046,153,1.081,154,1.709,155,1.235,156,1.081,157,1.235,158,1.081,159,1.235,160,1.235,161,1.046,162,1.046,163,1.155,164,1.117,165,1.235,166,0.008,167,0.008,481,5.441,482,4.919,483,3.427,484,6.729,485,6.235,486,5.436,487,3.927,488,3.927,489,5.436]],["title/components/CollapsePanelComponent.html",[0,0.448,132,1.126]],["body/components/CollapsePanelComponent.html",[0,0.595,1,1.1,2,1.34,3,0.104,4,0.104,5,0.966,6,1.07,7,0.966,8,0.966,9,0.093,11,0.997,12,1.708,14,0.845,15,1.588,17,1.588,19,0.242,20,1.065,24,0.708,25,1.89,27,1.076,36,1.043,39,0.013,40,0.918,41,0.57,45,0.814,46,1.827,50,1.645,51,1.482,52,1.386,53,2.348,55,0.147,56,0.294,62,0.903,69,0.104,70,0.193,105,2.708,113,1.335,114,1.84,117,0.741,118,1.433,119,1.433,120,0.845,121,2.115,122,0.966,123,2.589,124,0.845,125,2.346,126,0.966,127,0.818,128,0.845,129,0.874,130,0.845,131,0.966,132,1.655,133,2.297,134,0.966,135,0.818,136,0.818,137,0.845,138,0.966,139,0.845,140,0.966,141,0.845,142,0.966,143,0.818,144,0.818,145,0.845,146,0.966,147,0.845,148,0.966,149,0.818,150,0.845,151,0.966,152,0.818,153,0.845,154,1.433,155,0.966,156,0.845,157,0.966,158,0.845,159,0.966,160,0.966,161,0.818,162,0.818,163,0.903,164,0.874,165,0.966,166,0.007,167,0.007,168,1.513,274,1.449,279,3.085,286,1.84,287,1.744,288,2.73,290,2.077,291,2.892,294,2.423,301,2.892,302,2.73,310,1.513,490,6.243,491,5.643,492,2.68,493,5.434,494,5.434,495,5.434,496,4.557,497,6.012,498,6.012,499,4.743,500,3.082,501,4.287,502,4.557,503,3.071,504,3.071,505,3.071,506,3.071,507,5.434,508,2.68,509,4.557,510,3.071,511,1.834,512,3.071,513,3.082,514,2.68,515,4.557,516,3.071,517,4.557,518,5.434,519,5.434,520,3.977,521,3.071,522,3.071,523,3.977,524,2.231,525,3.071,526,3.595,527,2.68,528,2.68,529,3.071,530,2.423,531,2.68]],["title/classes/CompareValidators.html",[70,0.257,187,2.971]],["body/classes/CompareValidators.html",[3,0.171,4,0.171,9,0.153,19,0.399,24,1,36,0.758,38,1.145,39,0.013,40,0.602,41,0.531,42,1.002,45,0.758,50,1.827,51,1.647,55,0.242,57,2.388,69,0.171,70,0.318,85,1.739,166,0.01,167,0.01,179,5.035,181,3.424,187,4.674,222,2.815,415,3.424,417,5.139,532,4.419,533,7.075,534,6.436,535,7.445,536,2.093,537,5.064,538,6.175,539,4.419,540,3.995,541,5.064,542,5.064,543,5.064,544,5.064,545,5.064,546,5.064]],["title/modules/CoreModule.html",[313,1.377,327,2.767]],["body/modules/CoreModule.html",[3,0.205,4,0.205,9,0.184,39,0.013,55,0.345,56,0.583,69,0.205,70,0.382,166,0.011,167,0.011,315,2.358,317,3.284,327,4.87,336,2.751,337,3.259,444,4.313,445,3.452,547,6.08]],["title/classes/DateValidators.html",[70,0.257,548,3.227]],["body/classes/DateValidators.html",[3,0.19,4,0.19,9,0.171,19,0.444,24,1.069,36,0.845,38,1.275,39,0.013,40,0.671,41,0.591,42,1.117,45,0.845,55,0.27,57,2.661,69,0.19,70,0.354,85,1.736,107,4.504,166,0.01,167,0.01,179,4.655,181,3.814,222,1.965,415,3.814,417,5.396,429,4.923,538,6.484,548,5.43,549,4.923,550,6.884,551,6.884,552,5.641]],["title/directives/DestroyedComponent.html",[120,1.126,164,1.164]],["body/directives/DestroyedComponent.html",[0,0.586,3,0.181,4,0.181,9,0.162,11,1.459,19,0.422,20,1.558,24,1.036,36,0.999,39,0.013,41,0.562,45,0.802,46,1.897,50,1.934,51,1.743,55,0.319,56,0.513,69,0.181,70,0.419,120,1.999,163,1.575,164,1.897,166,0.01,167,0.01,224,2.684,250,4.123,251,4.123,252,4.314,260,4.438,263,1.684,553,4.676,554,7.261,555,5.358,556,5.358,557,5.358,558,4.227,559,5.358,560,5.358,561,5.358,562,5.358]],["title/components/DetailsComponent.html",[0,0.448,135,1.09]],["body/components/DetailsComponent.html",[0,0.514,1,0.919,2,1.119,3,0.082,4,0.082,5,0.763,6,0.845,7,0.763,8,0.763,9,0.073,11,0.832,12,1.477,14,0.668,15,1.326,17,1.326,19,0.191,20,0.889,23,3.176,24,0.591,25,1.672,27,0.753,36,1.113,38,0.548,39,0.013,40,0.883,41,0.696,42,0.93,45,0.865,46,1.744,50,2.213,51,1.994,52,1.157,53,1.96,55,0.334,56,0.232,58,0.941,62,0.713,69,0.082,70,0.152,71,1.083,72,1.119,77,1.014,85,0.889,105,1.532,111,2.415,113,1.054,117,0.586,118,1.196,119,1.196,120,0.668,121,1.672,122,0.763,123,2.501,124,0.668,125,2.165,126,0.763,127,0.646,128,0.668,129,0.69,130,0.668,131,0.763,132,0.668,133,0.763,134,0.763,135,1.417,136,0.646,137,0.668,138,0.763,139,0.668,140,0.763,141,0.668,142,0.763,143,0.646,144,0.646,145,0.668,146,0.763,147,0.668,148,0.763,149,0.646,150,0.668,151,0.763,152,0.646,153,0.668,154,1.196,155,0.763,156,0.668,157,0.763,158,0.668,159,0.763,160,0.763,161,0.646,162,0.646,163,0.713,164,1.744,165,0.763,166,0.006,167,0.006,168,1.194,195,1.654,222,1.636,224,0.976,229,3.002,231,3.411,245,2.279,250,2.161,251,2.161,252,2.666,258,2.279,259,1.453,260,2.161,261,1.453,262,1.453,263,0.763,269,1.453,271,3.411,274,1.144,275,2.055,284,1.249,296,1.377,297,1.31,303,2.161,310,1.194,355,0.907,369,2.141,375,1.144,408,2.872,511,1.532,536,0.789,563,2.117,564,4.696,565,3.805,566,3.186,567,3.976,568,4.196,569,3.481,570,4.696,571,5.319,572,5.319,573,3.375,574,2.425,575,5.319,576,2.215,577,3.805,578,3.805,579,2.425,580,2.425,581,2.425,582,2.425,583,2.425,584,2.425,585,2.425,586,2.425,587,2.425,588,2.425,589,2.055,590,2.425,591,1.913,592,1.64,593,1.64,594,1.453,595,1.64,596,1.761,597,1.64,598,1.64,599,1.64,600,1.377,601,1.64,602,1.761,603,2.425,604,3.805,605,2.425,606,2.425,607,2.536,608,2.117,609,1.913,610,2.425,611,2.425,612,1.913,613,3.805,614,2.425,615,2.425,616,2.425,617,2.425,618,1.64,619,4.696,620,2.425,621,2.425,622,2.425,623,2.425,624,3.805,625,2.425,626,3.805,627,2.425,628,2.425,629,1.761,630,3.805,631,3.321,632,3.805,633,3.805,634,3.002,635,3.805,636,3.805,637,3.805,638,3.805,639,3.805,640,3.805,641,3.805,642,1.913,643,2.425]],["title/components/EditComponent.html",[0,0.448,136,1.09]],["body/components/EditComponent.html",[0,0.692,1,1.337,2,1.629,3,0.136,4,0.136,5,1.269,6,1.406,7,1.269,8,1.269,9,0.122,11,1.212,12,1.989,13,3.789,14,1.111,15,1.93,17,1.93,19,0.318,20,1.294,21,4.015,24,0.86,25,2.141,27,1.252,36,0.947,39,0.013,40,0.962,41,0.423,45,0.605,46,1.576,48,4.015,55,0.303,56,0.387,57,1.904,61,2.73,62,1.629,69,0.136,70,0.254,117,0.974,118,1.742,119,1.742,120,1.111,121,2.141,122,1.269,123,2.645,124,1.111,125,2.423,126,1.269,127,1.075,128,1.111,129,1.148,130,1.111,131,1.269,132,1.111,133,1.269,134,1.269,135,1.075,136,1.813,137,1.111,138,1.269,139,1.111,140,1.269,141,1.111,142,1.269,143,1.075,144,1.075,145,1.111,146,1.269,147,1.111,148,1.269,149,1.075,150,1.111,151,1.269,152,1.075,153,1.111,154,1.742,155,1.269,156,1.111,157,1.269,158,1.111,159,1.269,160,1.269,161,1.075,162,1.075,163,1.187,164,1.148,165,1.269,166,0.008,167,0.008,644,3.523,645,6.326,646,5.54,647,5.54,648,4.036]],["title/pipes/EnumToArrayPipe.html",[649,2.21,650,2.767]],["body/pipes/EnumToArrayPipe.html",[3,0.18,4,0.18,9,0.162,11,1.169,14,1.471,24,0.83,36,0.8,38,1.208,39,0.013,40,0.862,41,0.56,42,1.058,45,0.8,50,1.928,51,2.469,52,2.205,53,3.43,55,0.256,56,0.512,69,0.18,70,0.336,85,1.555,166,0.01,167,0.01,222,1.862,536,2.165,649,3.596,650,4.502,651,3.201,652,5.81,653,4.663,654,6.658,655,3.391,656,5.252,657,7.252,658,5.344,659,4.835,660,5.344,661,6.658,662,6.658,663,6.658,664,5.81]],["title/interceptors/ErrorInterceptor.html",[330,2.767,665,3.227]],["body/interceptors/ErrorInterceptor.html",[3,0.137,4,0.137,9,0.123,11,0.89,19,0.321,24,0.865,27,1.103,32,4.031,33,4.092,36,0.834,38,1.259,39,0.013,40,0.662,41,0.584,42,1.103,45,0.609,50,1.468,55,0.353,56,0.39,59,2.31,60,2.197,69,0.137,70,0.256,71,1.585,72,1.638,85,0.951,89,4.031,91,4.541,92,4.541,94,3.686,96,4.541,100,4.839,166,0.008,167,0.008,238,2.955,239,2.955,263,1.279,330,3.767,345,2.197,355,1.522,369,2.75,425,2.582,427,2.874,457,1.812,536,1.323,576,2.628,664,3.551,666,3.21,667,3.551,668,4.862,669,2.096,670,4.069,671,4.862,672,5.962,673,5.962,674,4.069,675,3.551,676,3.551,677,4.862,678,2.582,679,4.069,680,4.069,681,4.069,682,3.551,683,4.069,684,6.244,685,3.551,686,7.155,687,6.352,688,4.069,689,7.155,690,4.069,691,4.069,692,4.069,693,4.069,694,3.21,695,4.069,696,4.069,697,4.069,698,4.069,699,4.069,700,3.551,701,3.551,702,4.069,703,4.069,704,4.069,705,4.069]],["title/components/FooterComponent.html",[0,0.448,137,1.126]],["body/components/FooterComponent.html",[0,0.691,1,1.334,2,1.625,3,0.135,4,0.135,5,1.264,6,1.401,7,1.264,8,1.264,9,0.122,11,1.209,12,1.985,14,1.107,15,1.925,17,1.925,19,0.317,24,0.858,25,2.137,27,1.25,36,0.828,39,0.013,40,0.962,45,0.602,46,1.572,55,0.192,56,0.385,62,1.182,69,0.135,70,0.253,113,1.748,117,0.971,118,1.737,119,1.737,120,1.107,121,2.137,122,1.264,123,2.654,124,1.107,125,2.458,126,1.264,127,1.071,128,1.107,129,1.144,130,1.107,131,1.264,132,1.107,133,1.264,134,1.264,135,1.071,136,1.071,137,1.871,138,1.264,139,1.107,140,1.264,141,1.107,142,1.264,143,1.071,144,1.071,145,1.107,146,1.264,147,1.107,148,1.264,149,1.071,150,1.107,151,1.264,152,1.071,153,1.107,154,1.737,155,1.264,156,1.107,157,1.264,158,1.107,159,1.264,160,1.264,161,1.071,162,1.071,163,1.182,164,1.144,165,1.264,166,0.008,167,0.008,274,1.896,275,2.171,279,2.283,296,2.283,297,2.171,706,3.509,707,6.313,708,6.313,709,5.525,710,4.02,711,4.02,712,4.02,713,5.525,714,5.525,715,3.506,716,2.552,717,2.408,718,3.509]],["title/components/FormErrorComponent.html",[0,0.448,139,1.126]],["body/components/FormErrorComponent.html",[0,0.575,1,1.054,2,1.284,3,0.098,4,0.098,5,0.912,6,1.011,7,0.912,8,0.912,9,0.088,11,0.955,12,1.651,14,0.798,15,1.521,17,1.521,19,0.228,24,0.678,25,1.837,27,1.04,36,0.875,39,0.013,40,0.907,41,0.304,45,0.434,46,1.242,55,0.209,56,0.278,57,1.368,62,2.068,69,0.098,70,0.182,76,2.953,85,0.678,100,2.953,107,3.318,108,4.463,117,0.7,118,1.373,119,1.373,120,0.798,121,1.837,122,0.912,123,2.574,124,0.798,125,2.32,126,0.912,127,0.772,128,0.798,129,0.825,130,0.798,131,0.912,132,0.798,133,0.912,134,0.912,135,0.772,136,0.772,137,0.798,138,0.912,139,1.608,140,0.912,141,0.798,142,0.912,143,0.772,144,0.772,145,0.798,146,0.912,147,0.798,148,0.912,149,0.772,150,0.798,151,0.912,152,0.772,153,0.798,154,1.373,155,0.912,156,0.798,157,0.912,158,0.798,159,0.912,160,0.912,161,0.772,162,0.772,163,0.853,164,0.825,165,0.912,166,0.007,167,0.007,179,2.953,181,3.551,222,1.011,238,3.171,239,4.244,424,2.531,500,2.953,513,2.953,539,2.531,719,5.469,720,4.944,721,2.531,722,5.251,723,4.366,724,3.444,725,5.251,726,2.9,727,2.9,728,2.9,729,2.9,730,2.9,731,2.9,732,2.9,733,7.331,734,7.331,735,4.366,736,7.544,737,7.032,738,6.398,739,5.843,740,5.843,741,2.9,742,5.843,743,2.9,744,7.331,745,2.9,746,2.9,747,5.843,748,4.366,749,2.9,750,3.811,751,5.195,752,4.366,753,4.366,754,2.9,755,3.811,756,4.366,757,4.366,758,4.366,759,4.366,760,4.366,761,2.9,762,2.9,763,2.9,764,2.9,765,2.9,766,2.9,767,2.9,768,2.9]],["title/guards/FormSubmittedGuard.html",[769,2.767,770,2.767]],["body/guards/FormSubmittedGuard.html",[0,0.635,3,0.146,4,0.146,9,0.131,11,0.945,13,4.194,19,0.34,24,0.901,27,1.148,36,0.869,38,1.312,39,0.013,40,0.69,41,0.608,42,1.148,45,0.647,52,1.764,55,0.349,56,0.414,58,1.676,60,2.333,62,1.27,69,0.146,70,0.271,71,1.229,72,1.27,85,1.355,87,2.333,97,3.408,98,3.408,108,2.742,166,0.009,167,0.009,224,1.739,246,2.127,263,1.358,351,5.524,427,2.964,457,1.887,475,2.225,751,3.408,770,3.923,771,2.742,772,4.757,773,3.77,774,5.762,775,4.32,776,4.32,777,5.063,778,4.32,779,6.55,780,5.085,781,6.55,782,5.58,783,6.55,784,4.32,785,3.77,786,4.213,787,4.757,788,4.32,789,4.32,790,4.32,791,3.77,792,3.77,793,3.77,794,3.408,795,3.77,796,3.77,797,4.32,798,3.137,799,4.32,800,3.77,801,4.32,802,4.32,803,4.32,804,3.77,805,4.32,806,4.32,807,4.32]],["title/interfaces/HasForm.html",[13,2.451,808,1.021]],["body/interfaces/HasForm.html",[3,0.205,4,0.205,9,0.184,13,4.313,19,0.479,20,1.682,21,5.034,39,0.012,41,0.637,48,5.034,55,0.291,57,2.868,61,4.112,69,0.205,166,0.011,167,0.011,808,1.517,809,2.542,810,5.306]],["title/components/HeaderComponent.html",[0,0.448,141,1.126]],["body/components/HeaderComponent.html",[0,0.576,1,1.056,2,1.287,3,0.147,4,0.098,5,0.914,6,1.013,7,0.914,8,0.914,9,0.088,11,0.957,12,1.654,14,0.801,15,1.525,17,1.525,19,0.229,20,1.022,24,0.68,25,1.84,27,0.866,30,3.557,31,3.957,32,3.338,33,3.505,36,0.987,38,0.658,39,0.013,40,0.917,41,0.551,42,0.576,45,0.788,46,1.665,50,1.05,51,0.946,52,1.33,55,0.327,56,0.279,58,1.128,59,1.651,60,1.571,62,0.855,69,0.098,70,0.183,71,1.665,72,1.721,91,1.846,92,1.846,94,1.498,96,1.846,105,1.171,113,1.264,117,0.702,118,1.376,119,1.376,120,0.801,121,2.073,122,0.914,123,2.574,124,0.801,125,2.321,126,0.914,127,0.775,128,0.801,129,0.827,130,0.801,131,0.914,132,0.801,133,0.914,134,0.914,135,0.775,136,0.775,137,0.801,138,0.914,139,0.801,140,0.914,141,1.611,142,0.914,143,0.775,144,0.775,145,0.801,146,0.914,147,0.801,148,0.914,149,0.775,150,0.801,151,0.914,152,0.775,153,0.801,154,1.376,155,0.914,156,0.801,157,0.914,158,0.801,159,0.914,160,0.914,161,0.775,162,0.775,163,0.855,164,1.875,165,0.914,166,0.007,167,0.007,224,1.171,228,3.178,245,2.621,250,2.484,251,2.484,252,2.987,258,2.621,259,1.742,260,2.484,261,1.742,262,1.742,263,0.914,269,1.742,271,2.112,274,1.372,275,1.571,279,1.651,286,1.742,287,3.322,288,1.742,296,1.651,297,1.571,298,2.112,299,2.112,301,1.846,302,2.621,310,1.432,355,1.088,369,2.355,375,1.372,576,2.064,592,1.967,593,1.967,607,1.571,669,1.498,715,1.846,716,1.846,717,1.742,811,2.538,812,3.452,813,3.452,814,5.26,815,5.26,816,4.376,817,4.616,818,5.851,819,4.15,820,4.25,821,4.376,822,2.909,823,2.909,824,2.112,825,2.112,826,2.294,827,2.909,828,2.909,829,2.294,830,2.909,831,2.909,832,2.538,833,2.909,834,3.819,835,4.376,836,4.376,837,2.538,838,2.112,839,3.452,840,4.616,841,3.819,842,3.819,843,3.452,844,2.909,845,2.538,846,2.538,847,2.294,848,2.909,849,2.538]],["title/components/HomeComponent.html",[0,0.448,143,1.09]],["body/components/HomeComponent.html",[0,0.544,1,0.984,2,1.199,3,0.089,4,0.089,5,0.833,6,0.923,7,0.833,8,0.833,9,0.08,11,0.892,12,1.562,14,0.729,15,1.421,17,1.421,19,0.209,24,0.633,25,1.754,27,0.984,36,0.611,39,0.012,40,0.89,45,0.397,46,1.16,55,0.195,56,0.254,62,0.779,63,2.757,69,0.089,70,0.167,80,2.999,105,2.559,108,4.339,113,1.152,114,1.587,115,3.216,117,0.64,118,1.282,119,1.282,120,0.729,121,2.15,122,0.833,123,2.53,124,0.729,125,2.215,126,0.833,127,0.706,128,0.729,129,0.754,130,1.823,131,0.833,132,0.729,133,0.833,134,0.833,135,0.706,136,0.706,137,0.729,138,0.833,139,0.729,140,0.833,141,0.729,142,0.833,143,1.486,144,0.706,145,0.729,146,0.833,147,0.729,148,0.833,149,0.706,150,0.729,151,0.833,152,0.706,153,0.729,154,1.282,155,0.833,156,0.729,157,0.833,158,0.729,159,0.833,160,0.833,161,0.706,162,0.706,163,1.461,164,0.754,165,0.833,166,0.006,167,0.006,186,3.216,228,2.961,238,4.051,239,2.961,265,2.442,268,3.36,274,1.25,284,1.365,286,1.587,287,3.167,288,2.976,291,2.587,292,2.961,297,1.431,301,2.587,302,1.587,310,1.305,315,1.581,368,3.216,437,1.925,523,2.313,651,2.442,666,3.216,685,2.313,694,3.216,738,3.558,751,3.216,755,3.558,771,2.587,794,3.216,800,3.558,834,3.558,838,2.961,840,3.919,841,4.336,842,3.558,850,2.313,851,4.968,852,4.077,853,2.65,854,2.65,855,5.578,856,4.077,857,4.077,858,3.558,859,4.077,860,6.359,861,4.077,862,5.967,863,5.578,864,4.077,865,4.077,866,2.65,867,4.077,868,4.077,869,4.077,870,5.578,871,2.65,872,2.65,873,4.077,874,4.077,875,4.077,876,4.077,877,4.077,878,4.077,879,4.077,880,4.077,881,4.077,882,4.077,883,2.65,884,5.578,885,3.558,886,5.578,887,6.359,888,4.077,889,4.077,890,4.077,891,4.077,892,4.077,893,4.077,894,4.077,895,2.65,896,5.578,897,4.077,898,4.077,899,4.077,900,4.077,901,4.077,902,5.578,903,4.077,904,4.077,905,4.077,906,4.077,907,4.077,908,4.077,909,2.65,910,4.077,911,4.077,912,3.558,913,4.077,914,4.077,915,4.077,916,4.077,917,2.65,918,2.65,919,2.65,920,2.65,921,2.65,922,2.65,923,2.65,924,2.65,925,2.65,926,2.65,927,2.313,928,2.65,929,2.65,930,2.65,931,2.65,932,2.65,933,2.65,934,2.65]],["title/modules/HomeModule.html",[313,1.377,935,2.971]],["body/modules/HomeModule.html",[3,0.174,4,0.174,9,0.156,39,0.013,55,0.37,56,0.495,69,0.174,70,0.325,117,1.247,143,2.103,166,0.01,167,0.01,313,1.739,315,2.004,316,2.662,317,3.857,318,2.934,319,2.934,320,2.338,329,4.068,332,3.701,333,2.934,334,2.934,336,2.95,337,2.95,346,3.494,399,3.752,444,3.905,445,2.934,448,3.752,935,5.988,936,4.509,937,4.509,938,4.509,939,5.34,940,5.167,941,4.509]],["title/modules/HomeRoutingModule.html",[313,1.377,939,2.767]],["body/modules/HomeRoutingModule.html",[0,0.637,3,0.196,4,0.196,9,0.176,39,0.013,55,0.36,56,0.558,58,2.257,69,0.196,70,0.366,143,1.868,166,0.011,167,0.011,195,2.529,315,2.257,320,2.633,336,2.633,337,3.174,394,3.935,395,4.452,396,4.276,397,3.935,456,4.226,939,4.744,941,5.078,942,5.818]],["title/classes/HttpUtils.html",[70,0.257,943,2.971]],["body/classes/HttpUtils.html",[3,0.168,4,0.168,9,0.151,19,0.392,24,0.989,36,0.953,38,1.439,39,0.013,40,0.757,41,0.667,42,1.26,45,0.953,55,0.238,69,0.168,70,0.313,85,1.487,105,2.003,166,0.01,167,0.01,222,1.734,224,2.003,345,2.688,415,3.366,417,5.68,469,5.373,511,2.562,618,3.366,943,4.623,944,4.343,945,6.365,946,6.365,947,6.365,948,4.977,949,6.365,950,6.365,951,7.398,952,4.977,953,4.977,954,5.836,955,6.365,956,4.977,957,4.977,958,5.022,959,7.018,960,6.365,961,4.977,962,3.926]],["title/components/InProgressComponent.html",[0,0.448,145,1.126]],["body/components/InProgressComponent.html",[0,0.652,1,1.238,2,1.508,3,0.122,4,0.122,5,1.136,6,1.259,7,1.136,8,1.136,9,0.109,11,1.122,12,1.874,14,0.994,15,1.787,17,1.787,19,0.285,24,0.796,25,2.04,27,1.18,36,0.768,39,0.013,40,0.945,45,0.541,46,1.459,55,0.173,56,0.346,62,1.062,69,0.122,70,0.227,113,2.229,117,0.872,118,1.612,119,1.612,120,0.994,121,2.154,122,1.136,123,2.63,124,0.994,125,2.416,126,1.136,127,0.962,128,0.994,129,1.028,130,0.994,131,1.136,132,0.994,133,1.136,134,1.136,135,0.962,136,0.962,137,0.994,138,1.136,139,0.994,140,1.136,141,0.994,142,1.136,143,0.962,144,0.962,145,1.786,146,1.136,147,0.994,148,1.136,149,0.962,150,0.994,151,1.136,152,0.962,153,0.994,154,1.612,155,1.136,156,0.994,157,1.136,158,0.994,159,1.136,160,1.136,161,0.962,162,0.962,163,1.062,164,1.028,165,1.136,166,0.008,167,0.008,274,1.704,275,3.219,276,3.153,277,3.153,279,2.911,284,2.641,287,2.051,288,2.164,296,2.051,297,1.951,310,2.525,715,3.783,716,3.254,717,3.071,838,2.624,840,5.118,843,5.118,963,5.202,964,4.702,965,3.153,966,5.127,967,5.96,968,5.127,969,3.613,970,3.613,971,5.127,972,3.613,973,5.127,974,5.127,975,3.613,976,4.475,977,5.127,978,5.96,979,3.153,980,3.613,981,3.153,982,3.613,983,3.153,984,3.613,985,3.613]],["title/components/IndexComponent.html",[0,0.448,144,1.09]],["body/components/IndexComponent.html",[0,0.418,1,0.719,2,0.875,3,0.06,4,0.06,5,0.563,6,0.624,7,0.563,8,0.563,9,0.054,11,0.651,12,1.201,14,0.493,15,1.037,17,1.037,19,0.141,20,0.695,21,2.425,24,0.462,25,1.4,27,0.589,29,3.234,32,2.425,33,2.667,36,1.114,38,1.278,39,0.013,40,0.891,41,0.733,42,1.119,43,2.775,45,0.949,46,1.892,48,2.425,50,2.04,51,1.839,52,0.905,53,2.294,55,0.347,56,0.172,57,0.844,59,1.016,60,0.967,62,0.526,69,0.06,70,0.112,71,1.892,72,1.568,73,1.3,85,0.893,89,1.889,91,1.136,92,1.136,93,1.412,94,0.922,95,1.412,96,1.136,104,2.013,105,1.792,108,1.136,117,0.432,118,0.936,119,0.936,120,0.493,121,1.4,122,0.563,123,2.385,124,0.493,125,1.977,126,0.563,127,0.477,128,0.493,129,0.509,130,0.493,131,0.563,132,0.493,133,0.563,134,0.563,135,0.477,136,0.477,137,0.493,138,0.563,139,0.493,140,0.563,141,0.493,142,0.563,143,0.477,144,1.186,145,0.493,146,0.563,147,0.493,148,0.563,149,0.477,150,0.493,151,0.563,152,0.477,153,0.493,154,0.936,155,0.563,156,0.493,157,0.563,158,0.493,159,0.563,160,0.563,161,0.477,162,0.477,163,0.526,164,1.517,165,0.563,166,0.004,167,0.004,170,3.028,173,2.775,174,2.667,189,1.072,192,1.3,210,2.598,222,1.551,224,0.721,228,2.775,229,3.512,235,2.598,236,2.598,237,2.598,241,2.598,242,2.598,243,2.598,245,1.783,250,1.69,251,1.69,252,2.17,258,1.783,259,1.072,260,1.69,261,1.072,262,1.072,263,0.563,269,1.072,351,3.512,355,0.67,369,1.792,375,0.844,408,2.064,425,1.889,427,2.237,508,2.598,511,1.198,514,1.562,536,1.243,566,1.072,567,1.072,569,3.028,576,1.404,591,1.412,592,1.211,593,1.211,594,1.072,595,1.211,600,1.016,602,1.3,607,1.608,609,1.412,612,2.348,669,0.922,678,1.136,682,1.562,694,1.412,701,1.562,750,2.598,777,3.335,791,1.562,792,1.562,793,3.335,794,3.512,795,1.562,796,1.562,804,1.562,862,1.562,962,3.014,986,1.562,987,3.821,988,3.821,989,2.977,990,3.821,991,3.011,992,3.821,993,3.821,994,3.335,995,2.598,996,2.977,997,4.452,998,2.977,999,2.348,1000,2.977,1001,4.452,1002,2.598,1003,3.821,1004,3.234,1005,2.977,1006,2.977,1007,4.497,1008,1.79,1009,2.977,1010,4.452,1011,1.79,1012,1.79,1013,1.79,1014,2.977,1015,1.79,1016,1.562,1017,2.977,1018,1.79,1019,2.977,1020,1.79,1021,3.335,1022,1.79,1023,2.977,1024,1.79,1025,4.942,1026,2.977,1027,1.79,1028,1.79,1029,2.289,1030,2.584,1031,2.348,1032,2.348,1033,1.889,1034,1.79,1035,1.79,1036,1.79,1037,2.977,1038,1.79,1039,1.79,1040,1.79,1041,1.562,1042,1.412,1043,2.977,1044,1.211,1045,1.412,1046,1.412,1047,1.79,1048,1.79,1049,1.3,1050,1.562,1051,1.79,1052,1.211,1053,1.211,1054,1.79,1055,4.452,1056,1.79,1057,1.79,1058,1.562,1059,2.348,1060,1.79,1061,1.412,1062,1.79,1063,1.79,1064,1.79,1065,2.977,1066,1.79,1067,2.977,1068,1.79,1069,1.79,1070,1.79,1071,1.79,1072,1.79,1073,1.79,1074,1.79,1075,3.821,1076,1.79,1077,1.79,1078,1.79,1079,1.79,1080,1.79,1081,1.79,1082,1.79,1083,1.79,1084,1.79,1085,1.79,1086,2.977,1087,1.79,1088,1.79,1089,1.79,1090,1.79,1091,1.79,1092,1.79,1093,2.977,1094,2.977,1095,1.889,1096,1.889,1097,2.977,1098,2.977,1099,2.977,1100,2.977,1101,2.977,1102,2.977,1103,2.977,1104,2.977]],["title/injectables/InscriptionService.html",[457,1.331,1004,2.971]],["body/injectables/InscriptionService.html",[3,0.164,4,0.164,9,0.147,19,0.383,24,0.973,27,1.241,36,1.039,38,1.569,39,0.013,40,0.825,41,0.727,42,1.374,45,0.939,55,0.351,56,0.465,69,0.164,70,0.305,71,1.382,72,1.428,77,3.065,85,1.464,166,0.009,167,0.009,222,1.693,246,2.392,263,1.527,345,2.623,358,2.758,359,3.083,427,3.434,457,2.038,459,2.758,462,4.958,475,2.502,536,2.527,999,4.944,1002,5.469,1004,4.552,1105,4.239,1106,3.528,1107,4.858,1108,4.552,1109,6.267,1110,4.858,1111,6.267,1112,4.858,1113,3.832,1114,6.267,1115,4.239]],["title/guards/IsAdminGuard.html",[769,2.767,1116,2.767]],["body/guards/IsAdminGuard.html",[3,0.159,4,0.159,9,0.143,11,1.03,19,0.371,24,0.954,27,1.216,36,0.92,38,1.389,39,0.013,40,0.731,41,0.644,42,1.216,45,0.706,52,1.868,55,0.369,56,0.451,58,1.827,69,0.159,70,0.296,71,1.34,72,1.385,85,1.101,166,0.009,167,0.009,246,2.32,263,1.481,355,1.762,369,2.917,375,2.222,426,2.99,427,3.094,451,4.095,455,4.77,457,1.998,475,2.427,567,2.822,576,2.898,607,2.544,608,4.111,669,2.427,771,2.99,780,5.262,782,5.262,786,4.462,787,4.966,1061,3.716,1116,4.155,1117,4.111,1118,4.711,1119,3.716,1120,4.339,1121,4.711,1122,4.847,1123,3.716,1124,3.421,1125,4.711,1126,4.711]],["title/guards/IsLoggedGuard.html",[769,2.767,1127,2.971]],["body/guards/IsLoggedGuard.html",[3,0.163,4,0.163,9,0.146,11,1.057,19,0.381,24,0.97,27,1.237,36,0.936,38,1.412,39,0.013,40,0.743,41,0.655,42,1.237,45,0.724,52,1.9,55,0.363,56,0.463,58,1.875,69,0.163,70,0.304,71,1.375,72,1.422,85,1.129,166,0.009,167,0.009,246,2.381,263,1.52,355,1.808,369,2.946,375,2.28,427,3.133,451,4.146,455,4.809,457,2.032,475,2.49,576,2.947,607,2.611,669,2.49,771,3.068,780,5.315,782,5.315,786,4.538,787,5.028,826,3.814,1119,3.814,1120,4.393,1122,4.929,1124,3.511,1127,4.538,1128,3.814,1129,4.834,1130,4.834]],["title/guards/IsNotLoggedGuard.html",[450,2.971,769,2.767]],["body/guards/IsNotLoggedGuard.html",[3,0.163,4,0.163,9,0.146,11,1.057,19,0.381,24,0.97,27,1.237,36,0.936,38,1.412,39,0.013,40,0.743,41,0.655,42,1.237,45,0.724,52,1.9,55,0.363,56,0.463,58,1.875,69,0.163,70,0.304,71,1.375,72,1.422,85,1.129,166,0.009,167,0.009,246,2.381,263,1.52,355,1.808,369,2.946,375,2.28,427,3.133,450,4.538,451,4.146,455,4.809,457,2.032,475,2.49,576,2.947,607,2.611,669,2.49,771,3.068,780,5.315,782,5.315,786,4.538,787,5.028,826,3.814,1119,3.814,1120,4.393,1122,4.929,1124,3.511,1128,3.814,1131,4.834,1132,4.834]],["title/modules/LayoutModule.html",[313,1.377,328,2.767]],["body/modules/LayoutModule.html",[3,0.146,4,0.146,9,0.131,39,0.013,55,0.379,56,0.414,58,1.676,69,0.146,70,0.271,117,1.043,137,2.236,141,2.236,153,2.07,156,2.236,158,2.07,166,0.009,167,0.009,313,1.454,315,1.676,316,2.225,317,3.538,318,2.453,319,2.453,320,2.964,328,5.66,329,3.874,332,3.294,333,2.453,334,2.453,336,2.625,337,2.625,350,3.77,395,3.682,444,3.475,445,2.453,1133,3.77,1134,3.77,1135,3.77,1136,4.32,1137,4.32,1138,4.32,1139,4.32,1140,4.32,1141,5.801,1142,3.408,1143,4.32,1144,3.408,1145,4.32]],["title/components/LoaderComponent.html",[0,0.448,147,1.126]],["body/components/LoaderComponent.html",[0,0.592,1,1.095,2,1.334,3,0.103,4,0.103,5,0.96,6,1.064,7,0.96,8,0.96,9,0.092,11,0.992,12,1.702,14,0.84,15,1.581,17,1.581,19,0.357,20,1.06,23,3.662,24,0.705,25,1.885,27,0.898,36,0.959,38,0.69,39,0.013,40,0.925,41,0.567,42,0.604,45,0.68,46,1.54,50,1.637,51,1.476,52,0.928,53,2.337,55,0.287,56,0.293,62,0.898,69,0.103,70,0.192,71,0.868,72,0.898,86,2.217,105,2.179,113,2.354,114,2.718,117,0.737,118,1.426,119,1.426,120,0.84,121,1.885,122,0.96,123,2.588,124,0.84,125,2.343,126,0.96,127,0.813,128,0.84,129,0.868,130,0.84,131,0.96,132,0.84,133,0.96,134,0.96,135,0.813,136,0.813,137,0.84,138,0.96,139,0.84,140,0.96,141,0.84,142,0.96,143,0.813,144,0.813,145,0.84,146,0.96,147,1.65,148,0.96,149,0.813,150,0.84,151,0.96,152,0.813,153,0.84,154,1.426,155,0.96,156,0.84,157,0.96,158,0.84,159,0.96,160,0.96,161,0.813,162,0.813,163,0.898,164,1.91,165,0.96,166,0.007,167,0.007,224,1.229,245,2.718,250,2.576,251,2.576,252,3.074,258,2.718,259,1.829,260,2.576,261,1.829,262,1.829,263,0.96,269,1.829,274,1.44,275,1.649,279,3.074,284,2.789,286,1.829,287,2.576,291,1.937,292,2.217,296,1.733,297,2.45,303,1.733,310,2.666,311,2.664,312,2.664,355,1.142,369,2.413,500,3.068,513,3.068,524,2.217,526,4.271,527,2.664,528,2.664,530,2.408,576,2.14,607,1.649,655,2.879,669,1.573,715,2.879,716,1.937,717,1.829,927,3.96,1059,2.408,1146,2.664,1147,5.414,1148,5.414,1149,4.537,1150,4.537,1151,3.053,1152,3.053,1153,3.053,1154,3.053,1155,3.053,1156,3.053,1157,5.414,1158,5.414,1159,5.414,1160,3.053,1161,3.053,1162,3.053,1163,2.217,1164,3.053,1165,3.053,1166,4.537,1167,2.664,1168,3.053,1169,5.414,1170,4.537,1171,3.053,1172,3.053,1173,2.664,1174,3.053]],["title/components/LoginComponent.html",[0,0.448,149,1.09]],["body/components/LoginComponent.html",[0,0.595,1,1.101,2,1.342,3,0.154,4,0.104,5,0.967,6,1.072,7,0.967,8,0.967,9,0.093,11,0.998,12,1.71,14,0.847,15,1.59,17,1.59,19,0.242,20,1.066,21,3.452,23,3.678,24,0.709,25,1.892,26,4.746,27,0.903,28,2.685,29,4.369,30,3.678,31,4.069,32,3.452,33,3.604,36,0.962,38,0.695,39,0.013,40,0.926,41,0.57,42,0.609,43,3.314,45,0.683,46,1.547,48,3.452,50,1.11,51,1,52,1.387,53,3.099,55,0.333,56,0.295,57,1.451,58,1.193,59,1.747,60,1.661,62,0.905,69,0.104,70,0.193,71,1.828,72,1.89,73,2.234,80,2.565,82,2.427,83,2.427,84,2.427,85,0.719,86,3.95,87,1.661,89,1.952,91,2.896,92,2.896,94,2.35,96,2.896,100,3.085,117,0.743,118,1.435,119,1.435,120,0.847,121,1.892,122,0.967,123,2.575,124,0.847,125,2.294,126,0.967,127,0.819,128,0.847,129,0.875,130,1.656,131,0.967,132,0.847,133,0.967,134,0.967,135,0.819,136,0.819,137,0.847,138,0.967,139,0.847,140,0.967,141,0.847,142,0.967,143,0.819,144,0.819,145,0.847,146,0.967,147,0.847,148,0.967,149,1.602,150,0.847,151,0.967,152,0.819,153,0.847,154,1.435,155,0.967,156,0.847,157,0.967,158,0.847,159,0.967,160,0.967,161,0.819,162,0.819,163,0.905,164,0.875,165,0.967,166,0.007,167,0.007,186,2.427,193,2.685,222,1.59,355,1.15,369,2.422,458,4.369,576,2.565,592,2.08,700,3.982,832,2.685,1021,2.685,1175,2.685,1176,5.439,1177,4.563,1178,5.439,1179,4.563,1180,3.076,1181,3.076,1182,3.076,1183,2.234,1184,3.076,1185,3.982,1186,3.076,1187,3.076,1188,3.076,1189,3.076,1190,3.076,1191,3.076,1192,3.076,1193,3.076,1194,3.076]],["title/interfaces/LoginModel.html",[466,2.596,808,1.021]],["body/interfaces/LoginModel.html",[3,0.203,4,0.203,9,0.183,19,0.475,20,1.673,39,0.012,41,0.751,69,0.203,80,3.731,130,2.177,166,0.011,167,0.011,466,4.546,536,2.665,808,1.503,809,2.519,1195,5.259]],["title/interfaces/LoginModel-1.html",[168,1.681,466,2.166,808,0.851]],["body/interfaces/LoginModel-1.html",[3,0.203,4,0.203,9,0.183,19,0.475,20,1.673,39,0.012,41,0.751,69,0.203,80,3.731,130,2.177,166,0.011,167,0.011,466,4.546,536,2.665,808,1.503,809,2.519,1196,5.259]],["title/components/MatchComponent.html",[0,0.448,150,1.126]],["body/components/MatchComponent.html",[0,0.597,1,1.106,2,1.348,3,0.104,4,0.104,5,0.973,6,1.078,7,0.973,8,0.973,9,0.094,11,1.003,12,1.716,14,0.852,15,1.597,17,1.597,19,0.244,20,1.071,24,0.712,25,1.897,27,0.907,36,1.097,38,1.234,39,0.013,40,0.941,41,0.707,42,1.081,45,0.818,46,1.717,50,1.117,51,1.007,52,1.393,55,0.308,56,0.297,62,0.91,69,0.104,70,0.194,71,1.717,72,0.91,85,0.723,113,1.992,114,1.854,117,0.747,118,1.441,119,1.441,120,0.852,121,1.897,122,0.973,123,2.591,124,0.852,125,2.349,126,0.973,127,0.824,128,0.852,129,0.88,130,0.852,131,0.973,132,0.852,133,0.973,134,0.973,135,0.824,136,0.824,137,0.852,138,0.973,139,0.852,140,0.973,141,0.852,142,0.973,143,0.824,144,0.824,145,0.852,146,0.973,147,0.852,148,0.973,149,0.824,150,1.661,151,0.973,152,0.824,153,0.852,154,1.441,155,0.973,156,0.852,157,0.973,158,0.852,159,0.973,160,0.973,161,0.824,162,0.824,163,0.91,164,0.88,165,0.973,166,0.007,167,0.007,274,1.46,275,1.671,284,2.361,296,1.757,297,1.671,298,2.248,299,2.248,310,2.257,355,1.158,369,2.429,500,3.099,513,3.691,576,2.162,600,1.757,602,2.248,631,4,669,1.594,724,3.616,1197,2.701,1198,6.501,1199,5.458,1200,4.583,1201,5.458,1202,4.281,1203,4.583,1204,5.458,1205,4.583,1206,3.095,1207,4.081,1208,4.583,1209,3.095,1210,4.583,1211,3.095,1212,3.095,1213,3.095,1214,3.095,1215,3.095,1216,3.095,1217,3.095,1218,2.093,1219,2.248,1220,2.093,1221,3.095,1222,3.095,1223,4.583,1224,3.095,1225,4.583,1226,4.583,1227,4.583]],["title/interfaces/MatchModel.html",[808,1.021,1207,2.21]],["body/interfaces/MatchModel.html",[3,0.173,4,0.173,9,0.155,19,0.404,20,1.516,39,0.013,41,0.849,55,0.245,69,0.173,77,3.127,166,0.01,167,0.01,511,3.172,536,2.74,808,1.279,809,2.144,1202,4.747,1207,3.504,1218,3.468,1228,4.475,1229,7.479,1230,7.479,1231,5.058,1232,5.058,1233,7.479,1234,7.479,1235,7.479]],["title/injectables/MatchService.html",[457,1.331,1236,2.767]],["body/injectables/MatchService.html",[3,0.172,4,0.172,9,0.155,19,0.403,24,1.006,27,1.282,36,0.97,38,1.464,39,0.013,40,0.77,41,0.679,42,1.282,45,0.766,55,0.358,56,0.49,69,0.172,70,0.321,71,1.455,72,1.504,77,2.708,85,1.195,166,0.01,167,0.01,246,2.519,345,2.762,358,2.904,359,3.246,457,2.107,459,2.904,462,5.053,475,2.635,511,2.861,1106,3.715,1108,4.704,1198,4.464,1202,4.742,1218,3.459,1231,5.214,1236,4.38,1237,4.464,1238,6.477,1239,5.115,1240,6.477,1241,5.115,1242,4.464]],["title/components/MemberComponent.html",[0,0.448,152,1.09]],["body/components/MemberComponent.html",[0,0.71,1,1.383,2,1.684,3,0.143,4,0.143,5,1.801,7,1.333,8,1.333,9,0.128,11,1.253,12,2.04,14,1.167,19,0.334,24,0.89,25,2.185,27,1.284,36,0.858,39,0.013,40,0.969,45,0.635,46,1.629,55,0.274,56,0.406,62,1.246,69,0.143,70,0.266,117,1.023,118,1.801,119,1.801,120,1.167,121,2.185,122,1.333,123,2.656,124,1.167,125,2.444,126,1.333,127,1.129,128,1.167,129,1.206,130,1.167,131,1.333,132,1.167,133,1.333,134,1.333,135,1.129,136,1.129,137,1.167,138,1.333,139,1.167,140,1.333,141,1.167,142,1.333,143,1.129,144,1.129,145,1.167,146,1.333,147,1.167,148,1.333,149,1.129,150,1.167,151,1.333,152,1.851,153,1.167,154,1.801,155,1.333,156,1.167,157,1.333,158,1.167,159,1.333,160,1.333,161,1.129,162,1.129,163,1.246,164,1.206,165,1.333,166,0.009,167,0.009,265,3.431,268,2.867,437,3.078,1243,3.699,1244,4.239,1245,4.239]],["title/modules/MemberModule.html",[313,1.377,1246,2.971]],["body/modules/MemberModule.html",[1,1.855,3,0.157,4,0.157,9,0.141,39,0.013,55,0.38,56,0.446,69,0.157,70,0.293,117,1.124,128,2.114,130,1.678,152,2.046,161,2.046,166,0.009,167,0.009,313,1.567,315,1.806,316,2.399,317,3.672,318,2.644,319,2.644,320,2.107,329,3.957,332,3.462,333,2.644,334,2.644,336,2.759,337,2.759,346,3.149,411,3.149,444,3.652,445,2.644,448,3.382,482,3.674,1246,6.072,1247,4.064,1248,4.064,1249,4.064,1250,5.195,1251,4.657,1252,4.064,1253,3.382,1254,4.064,1255,4.657,1256,4.657]],["title/modules/MemberRoutingModule.html",[313,1.377,1250,2.767]],["body/modules/MemberRoutingModule.html",[0,0.764,1,1.525,3,0.166,4,0.166,9,0.149,39,0.013,55,0.384,56,0.471,58,1.907,69,0.166,70,0.309,152,1.682,161,1.682,166,0.01,167,0.01,195,2.137,315,1.907,320,2.225,336,2.225,337,2.858,394,3.325,395,4.008,396,3.962,397,4.98,398,3.571,400,3.571,401,3.571,451,3.783,452,4.291,453,3.12,455,4.008,456,3.571,770,4.271,772,3.571,774,3.878,1116,4.271,1127,5.068,1250,4.271,1252,4.291,1253,3.571,1254,4.291,1257,4.916,1258,4.291,1259,4.291,1260,6.316,1261,3.325]],["title/injectables/MemberService.html",[35,2.971,457,1.331]],["body/injectables/MemberService.html",[3,0.14,4,0.14,9,0.126,19,0.327,24,0.877,27,1.118,35,4.102,36,1.032,38,1.557,39,0.013,40,0.819,41,0.722,42,1.364,45,0.961,55,0.33,56,0.398,62,1.661,69,0.14,70,0.261,71,1.181,72,1.221,76,3.82,77,3.236,80,2.664,85,1.5,166,0.009,167,0.009,222,2.4,224,2.273,246,2.045,263,1.305,345,2.242,358,2.358,359,2.635,411,2.808,427,3.442,457,1.837,459,2.358,462,4.659,469,4.662,475,2.139,536,2.581,540,4.456,954,6.106,999,4.456,1106,3.015,1108,4.102,1113,3.275,1262,3.624,1263,5.648,1264,5.648,1265,4.152,1266,5.648,1267,4.152,1268,5.648,1269,4.152,1270,5.648,1271,4.152,1272,4.152,1273,5.648,1274,5.648,1275,5.648,1276,4.152,1277,4.152,1278,4.152]],["title/components/MenuButtonComponent.html",[0,0.448,153,1.126]],["body/components/MenuButtonComponent.html",[0,0.574,1,1.052,2,1.281,3,0.097,4,0.097,5,0.909,6,1.008,7,0.909,8,0.909,9,0.088,11,0.953,12,1.648,14,0.796,15,1.518,17,1.518,19,0.228,20,1.018,24,0.677,25,1.834,27,0.862,36,0.985,38,0.654,39,0.013,40,0.916,41,0.549,42,0.572,45,0.785,46,1.66,50,1.044,51,0.941,52,1.325,55,0.279,56,0.277,62,0.85,69,0.097,70,0.182,71,1.239,72,1.281,105,1.164,113,1.257,117,0.698,118,1.37,119,1.37,120,0.796,121,1.968,122,0.909,123,2.573,124,0.796,125,2.318,126,0.909,127,0.77,128,0.796,129,0.823,130,0.796,131,0.909,132,0.796,133,0.909,134,0.909,135,0.77,136,0.77,137,0.796,138,0.909,139,0.796,140,0.909,141,0.796,142,0.909,143,0.77,144,0.77,145,0.796,146,0.909,147,0.796,148,0.909,149,0.77,150,0.796,151,0.909,152,0.77,153,1.606,154,2.303,155,0.909,156,0.796,157,0.909,158,0.796,159,0.909,160,0.909,161,0.77,162,0.77,163,0.85,164,1.871,165,0.909,166,0.007,167,0.007,224,1.164,231,2.1,245,2.61,250,2.474,251,2.474,252,2.976,253,2.524,254,3.703,256,3.437,258,2.61,259,1.732,260,2.474,261,1.732,262,1.732,263,0.909,269,1.732,270,2.524,271,2.1,274,1.364,275,1.562,279,2.474,284,2.244,286,2.61,287,2.474,288,1.732,290,2.946,293,3.437,295,2.281,302,1.732,303,2.474,304,2.281,310,2.146,501,4.603,520,2.524,593,1.956,655,4.175,715,1.835,716,1.835,717,1.732,812,3.437,813,3.437,819,4.135,820,4.237,824,2.1,829,2.281,839,2.281,843,4.135,976,3.802,979,3.802,981,2.524,983,3.802,1142,4.938,1163,2.1,1173,3.802,1279,4.938,1280,2.524,1281,6.259,1282,5.242,1283,4.357,1284,5.835,1285,4.357,1286,2.892,1287,2.892,1288,2.524,1289,2.892,1290,2.892,1291,2.892,1292,2.892,1293,4.357,1294,6.259,1295,4.357,1296,2.892,1297,2.892,1298,4.357,1299,2.892,1300,2.281,1301,2.892,1302,2.892]],["title/components/MenuComponent.html",[0,0.448,156,1.126]],["body/components/MenuComponent.html",[0,0.557,1,1.014,2,1.235,3,0.093,4,0.093,5,0.866,6,0.96,7,0.866,8,0.866,9,0.083,11,0.919,12,1.6,14,0.758,15,1.463,17,1.463,19,0.448,20,0.981,24,0.652,25,1.789,27,0.831,30,3.441,31,3.849,36,0.918,38,0.623,39,0.013,40,0.907,41,0.533,42,0.545,45,0.629,46,1.448,50,0.994,51,0.896,55,0.346,56,0.264,58,1.068,59,1.564,60,1.488,62,0.81,69,0.093,70,0.173,71,1.448,72,1.496,85,0.644,94,3.156,101,3.05,102,2.173,105,1.69,113,1.197,114,1.65,117,0.665,118,1.32,119,1.32,120,0.758,121,1.789,122,0.866,123,2.559,124,0.758,125,2.295,126,0.866,127,0.734,128,0.758,129,0.784,130,0.758,131,0.866,132,0.758,133,0.866,134,0.866,135,0.734,136,0.734,137,0.758,138,0.866,139,0.758,140,0.866,141,0.758,142,0.866,143,0.734,144,0.734,145,0.758,146,0.866,147,0.758,148,0.866,149,0.734,150,0.758,151,0.866,152,0.734,153,0.758,154,1.789,155,0.866,156,1.567,157,0.866,158,0.758,159,0.866,160,0.866,161,0.734,162,0.734,163,0.81,164,1.837,165,0.866,166,0.006,167,0.006,195,1.825,224,1.109,245,2.515,250,2.384,251,2.384,252,2.889,254,3.612,256,4.014,258,2.515,259,1.65,260,2.384,261,1.65,262,1.65,263,0.866,269,1.65,274,1.981,284,2.621,285,2.404,291,1.748,301,1.748,305,2.404,306,2.404,307,2.404,308,2.404,310,1.357,355,1.03,369,2.291,375,1.299,399,3.05,408,2.748,411,1.863,453,1.748,566,1.65,567,1.65,576,1.981,591,2.173,592,1.863,593,1.863,607,1.488,609,2.173,612,2.173,669,1.419,717,3.048,820,2.001,824,2.001,847,2.173,958,2.173,1016,2.404,1058,2.404,1059,3.313,1061,2.173,1261,2.84,1288,2.404,1303,2.173,1304,5.089,1305,4.199,1306,4.199,1307,2.755,1308,3.888,1309,4.199,1310,2.755,1311,2.755,1312,2.404,1313,3.313,1314,4.876,1315,3.665,1316,4.689,1317,3.665,1318,3.665,1319,2.404,1320,3.313,1321,2.404,1322,2.404,1323,2.755,1324,2.755,1325,2.755,1326,2.755,1327,2.755,1328,2.755,1329,2.755,1330,2.755,1331,2.404,1332,2.173]],["title/interfaces/MenuItem.html",[808,1.021,1308,2.596]],["body/interfaces/MenuItem.html",[3,0.182,4,0.182,9,0.163,19,0.424,20,1.563,39,0.013,41,0.82,42,1.619,52,2.213,69,0.182,94,3.922,166,0.01,167,0.01,453,4.831,536,2.699,808,1.344,809,2.252,1308,4.968,1314,5.529,1316,5.529,1333,4.701,1334,4.701,1335,6.006,1336,5.386]],["title/components/MenuLinkComponent.html",[0,0.448,158,1.126]],["body/components/MenuLinkComponent.html",[0,0.568,1,1.04,2,1.266,3,0.096,4,0.096,5,0.895,6,0.992,7,0.895,8,0.895,9,0.086,11,0.942,12,1.633,14,0.784,15,1.5,17,1.5,19,0.224,24,0.669,25,1.82,27,0.852,36,0.867,38,0.973,39,0.013,40,0.921,41,0.544,42,0.852,45,0.645,46,1.477,55,0.206,56,0.273,62,0.837,69,0.096,70,0.179,71,0.81,72,0.837,94,1.467,105,2.632,113,2.257,117,0.687,118,1.354,119,1.354,120,0.784,121,2.199,122,0.895,123,2.568,124,0.784,125,2.254,126,0.895,127,0.758,128,0.784,129,0.81,130,0.784,131,0.895,132,0.784,133,0.895,134,0.895,135,0.758,136,0.758,137,0.784,138,0.895,139,0.784,140,0.895,141,0.784,142,0.895,143,0.758,144,0.758,145,0.784,146,0.895,147,0.784,148,0.895,149,0.758,150,0.784,151,0.895,152,0.758,153,0.784,154,2.251,155,0.895,156,0.784,157,0.895,158,1.593,159,1.633,160,0.895,161,0.758,162,0.758,163,0.837,164,0.81,165,0.895,166,0.006,167,0.006,168,2.121,274,1.343,275,3.126,279,4.064,282,2.485,284,2.218,286,3.11,287,3.713,288,2.579,289,2.485,290,1.926,291,1.807,292,3.127,293,2.246,294,2.246,296,2.445,297,2.805,298,2.068,299,2.068,301,2.733,302,1.705,303,2.445,304,2.246,310,1.402,499,3.397,500,2.912,513,2.912,524,2.068,526,4.097,530,2.246,531,2.485,715,2.733,716,1.807,717,1.705,718,2.485,812,3.397,813,3.397,819,3.397,820,4.204,824,2.068,829,2.246,837,2.485,838,3.127,839,2.246,845,2.485,846,2.485,847,3.397,849,2.485,958,4.905,1144,4.905,1163,2.068,1167,2.485,1279,4.905,1300,3.397,1308,3.674,1312,2.485,1314,2.068,1316,5.52,1331,2.485,1332,4.097,1335,2.246,1337,2.485,1338,5.193,1339,4.306,1340,2.847,1341,4.306,1342,2.847,1343,4.306,1344,2.847,1345,2.847,1346,4.306,1347,4.306,1348,2.847,1349,2.847,1350,2.847,1351,2.847,1352,2.847,1353,2.847,1354,2.847,1355,4.306,1356,2.847,1357,2.847]],["title/injectables/MenuService.html",[254,2.596,457,1.331]],["body/injectables/MenuService.html",[3,0.162,4,0.162,9,0.145,19,0.378,20,1.453,24,0.966,27,1.366,36,1.181,39,0.013,41,0.503,45,1.033,46,1.963,50,1.732,51,1.561,52,1.459,55,0.298,56,0.46,69,0.162,70,0.302,71,1.963,85,1.453,166,0.009,167,0.009,224,2.503,246,2.364,254,3.947,263,1.509,427,2.814,457,2.023,459,2.725,475,2.473,499,5.757,501,6.11,724,4.906,1335,5.757,1358,4.189,1359,6.899,1360,7.298,1361,4.8,1362,4.8,1363,4.8,1364,4.8,1365,6.899,1366,6.219,1367,4.8,1368,6.219,1369,4.8,1370,4.8,1371,4.8,1372,4.8,1373,4.8,1374,4.8,1375,4.8]],["title/interfaces/PlayerScoreModel.html",[808,1.021,1376,2.971]],["body/interfaces/PlayerScoreModel.html",[3,0.148,4,0.148,9,0.133,19,0.347,20,1.373,39,0.013,40,0.524,41,0.822,42,1.613,52,2.145,55,0.316,69,0.198,77,3.074,80,3.329,166,0.009,167,0.009,170,3.337,189,2.638,303,4.007,511,3.399,536,2.61,569,3.337,589,2.379,594,2.638,618,2.978,634,5.567,808,1.466,809,1.841,1095,2.795,1096,2.795,1207,3.174,1376,4.804,1377,2.978,1378,3.474,1379,4.772,1380,4.772,1381,4.772,1382,4.772,1383,3.844,1384,2.978,1385,2.978,1386,2.978,1387,4.268,1388,2.978,1389,3.844,1390,2.978,1391,3.474,1392,3.474,1393,3.474,1394,3.474,1395,3.844,1396,2.978,1397,2.978,1398,3.474]],["title/components/ProfileComponent.html",[0,0.448,161,1.09]],["body/components/ProfileComponent.html",[0,0.711,1,1.385,2,1.687,3,0.143,4,0.143,5,1.335,6,1.48,7,1.335,8,1.335,9,0.129,11,1.255,12,2.042,14,1.169,15,1.999,17,1.999,19,0.335,24,0.891,25,2.186,27,1.286,36,0.859,39,0.013,40,0.97,45,0.636,46,1.632,55,0.203,56,0.407,62,1.249,69,0.143,70,0.267,117,1.025,118,1.803,119,1.803,120,1.169,121,2.186,122,1.335,123,2.657,124,1.169,125,2.445,126,1.335,127,1.131,128,1.169,129,1.208,130,1.169,131,1.335,132,1.169,133,1.335,134,1.335,135,1.131,136,1.131,137,1.169,138,1.335,139,1.169,140,1.335,141,1.169,142,1.335,143,1.131,144,1.131,145,1.169,146,1.335,147,1.169,148,1.335,149,1.131,150,1.169,151,1.335,152,1.131,153,1.169,154,1.803,155,1.335,156,1.169,157,1.335,158,1.169,159,1.335,160,1.335,161,1.852,162,1.131,163,1.249,164,1.208,165,1.335,166,0.009,167,0.009,1399,3.707,1400,6.494,1401,5.736,1402,4.248,1403,4.248]],["title/pipes/RoundFilterPipe.html",[649,2.21,1404,2.767]],["body/pipes/RoundFilterPipe.html",[3,0.184,4,0.184,9,0.166,11,1.197,14,1.506,24,0.85,36,0.82,38,1.237,39,0.013,40,0.872,41,0.574,42,1.083,45,0.82,55,0.323,56,0.524,69,0.184,70,0.344,85,1.279,166,0.01,167,0.01,511,2.951,649,3.65,651,3.278,655,3.474,659,4.908,1207,4.326,1219,3.975,1232,5.177,1398,4.318,1404,4.57,1405,5.897,1406,4.777,1407,6.758,1408,6.758,1409,5.473,1410,5.473,1411,3.975]],["title/interfaces/SessionState.html",[375,1.93,808,1.021]],["body/interfaces/SessionState.html",[3,0.156,4,0.156,9,0.14,19,0.364,20,1.416,39,0.013,41,0.782,42,1.569,52,2.058,53,2.377,55,0.344,69,0.242,77,3.204,80,2.859,87,2.492,166,0.009,167,0.009,195,3.125,355,1.726,360,3.351,375,2.859,470,3.121,480,5.182,536,2.607,566,4.59,567,4.306,573,2.929,808,1.151,809,1.929,817,6.045,825,3.351,1123,3.64,1183,3.351,1412,3.64,1413,7.188,1414,3.64,1415,4.402,1416,4.402,1417,4.615,1418,4.027,1419,4.615,1420,5.29,1421,4.027,1422,4.577,1423,4.027,1424,4.027]],["title/modules/SharedModule.html",[313,1.377,329,2.108]],["body/modules/SharedModule.html",[2,0.942,3,0.108,4,0.108,9,0.097,39,0.013,55,0.397,56,0.307,57,1.51,69,0.108,70,0.201,117,0.773,132,2.12,139,2.12,145,2.12,147,2.12,163,0.942,166,0.007,167,0.007,313,1.078,315,1.823,316,1.65,317,3.007,318,1.818,319,1.818,320,2.52,329,4.212,332,2.669,333,1.818,334,1.818,336,1.449,337,2.127,444,2.815,445,1.818,491,2.526,650,5.208,651,1.918,720,2.526,964,2.526,1041,2.795,1418,2.795,1425,2.795,1426,2.795,1427,2.795,1428,5.208,1429,3.202,1430,5.568,1431,5.568,1432,5.568,1433,3.202,1434,5.568,1435,3.202,1436,5.568,1437,5.568,1438,3.202,1439,5.568,1440,3.202,1441,5.568,1442,3.202,1443,5.568,1444,3.202,1445,5.568,1446,3.202,1447,5.568,1448,3.202,1449,5.568,1450,3.202,1451,3.202,1452,3.202,1453,3.202,1454,5.568,1455,3.202,1456,3.202,1457,3.202,1458,5.568,1459,5.568,1460,3.202,1461,5.568,1462,3.202,1463,5.568,1464,3.202,1465,5.568,1466,3.202,1467,5.568,1468,3.202,1469,5.568,1470,3.202,1471,3.202,1472,3.202,1473,3.202,1474,3.202,1475,3.202,1476,3.202]],["title/pipes/StatusToStringPipe.html",[649,2.21,1477,2.767]],["body/pipes/StatusToStringPipe.html",[3,0.182,4,0.182,9,0.164,11,1.181,14,1.486,24,0.839,36,0.809,38,1.221,39,0.013,40,0.867,41,0.566,42,1.069,45,0.809,51,1.756,55,0.321,56,0.518,69,0.182,70,0.339,85,1.702,166,0.01,167,0.01,536,2.18,569,4.327,594,3.235,649,3.619,651,3.235,655,3.427,656,5.287,659,4.867,684,6.36,858,5.849,1477,4.532,1478,5.849,1479,4.713,1480,6.702,1481,5.4,1482,5.4,1483,5.4,1484,5.4,1485,5.4,1486,5.4,1487,5.4,1488,5.4]],["title/pipes/ToDatePipe.html",[649,2.21,1428,2.767]],["body/pipes/ToDatePipe.html",[3,0.189,4,0.189,9,0.169,11,1.224,14,1.54,24,0.869,36,0.838,38,1.265,39,0.013,40,0.88,41,0.586,42,1.107,45,0.838,51,1.819,55,0.268,56,0.536,69,0.189,70,0.351,85,1.6,107,3.176,166,0.01,167,0.01,222,2.386,224,2.252,536,2.408,649,3.699,651,3.351,655,3.55,656,5.403,659,4.974,785,4.882,1428,4.632,1489,5.977,1490,4.882,1491,6.849,1492,5.594,1493,5.594,1494,5.594,1495,5.594]],["title/interceptors/TokenInterceptor.html",[331,2.767,665,3.227]],["body/interceptors/TokenInterceptor.html",[3,0.161,4,0.161,9,0.145,11,1.047,19,0.377,24,0.964,27,1.229,36,0.93,38,1.404,39,0.013,40,0.738,41,0.651,42,1.229,45,0.717,55,0.361,56,0.459,69,0.161,70,0.301,71,1.362,72,1.408,85,1.61,89,4.373,166,0.009,167,0.009,195,2.082,263,1.506,331,4.199,345,2.586,355,1.791,369,2.935,375,2.259,427,3.118,457,2.02,480,3.238,576,2.929,607,2.586,666,3.778,668,5.419,669,2.467,671,5.419,672,6.363,673,6.363,675,4.179,676,4.179,677,5.419,1124,3.478,1496,4.179,1497,4.789,1498,4.789,1499,4.789,1500,4.789,1501,4.789,1502,4.789,1503,4.789,1504,4.789,1505,4.789,1506,4.789,1507,4.789,1508,4.789,1509,4.789]],["title/interfaces/TokenModel.html",[470,2.767,808,1.021]],["body/interfaces/TokenModel.html",[3,0.19,4,0.19,9,0.171,19,0.444,20,1.608,39,0.013,41,0.811,55,0.27,69,0.19,77,3.234,80,3.649,166,0.01,167,0.01,470,4.655,480,5.232,536,2.702,566,4.634,567,4.634,808,1.407,809,2.358,1123,4.45,1510,4.923]],["title/components/TournamentComponent.html",[0,0.448,162,1.09]],["body/components/TournamentComponent.html",[0,0.71,1,1.383,2,1.684,3,0.143,4,0.143,5,1.801,7,1.333,8,1.333,9,0.128,11,1.253,12,2.04,14,1.167,19,0.334,24,0.89,25,2.185,27,1.284,36,0.858,39,0.013,40,0.969,45,0.635,46,1.629,55,0.274,56,0.406,62,1.246,69,0.143,70,0.266,117,1.023,118,1.801,119,1.801,120,1.167,121,2.185,122,1.333,123,2.656,124,1.167,125,2.444,126,1.333,127,1.129,128,1.167,129,1.206,130,1.167,131,1.333,132,1.167,133,1.333,134,1.333,135,1.129,136,1.129,137,1.167,138,1.333,139,1.167,140,1.333,141,1.167,142,1.333,143,1.129,144,1.129,145,1.167,146,1.333,147,1.167,148,1.333,149,1.129,150,1.167,151,1.333,152,1.129,153,1.167,154,1.801,155,1.333,156,1.167,157,1.333,158,1.167,159,1.333,160,1.333,161,1.129,162,1.851,163,1.246,164,1.206,165,1.333,166,0.009,167,0.009,265,3.431,268,2.867,437,3.078,1511,3.699,1512,4.239,1513,4.239]],["title/interfaces/TournamentDetailsModel.html",[589,2.21,808,1.021]],["body/interfaces/TournamentDetailsModel.html",[3,0.128,4,0.128,9,0.115,19,0.3,20,1.242,39,0.013,40,0.789,41,0.865,52,2.453,55,0.293,69,0.179,77,2.92,80,1.793,166,0.008,167,0.008,170,3.768,189,2.277,222,2.312,303,2.159,511,3.353,536,2.624,569,3.768,589,2.871,594,2.277,618,4.488,634,2.999,808,1.326,809,1.59,1033,3.889,1095,4.211,1096,4.211,1207,3.584,1376,4.819,1377,2.571,1378,2.999,1379,2.571,1380,2.571,1381,2.571,1382,2.571,1383,3.318,1384,4.488,1385,4.488,1386,4.488,1387,3.86,1388,4.488,1389,3.318,1390,4.488,1391,5.235,1392,5.235,1393,5.235,1394,5.235,1395,5.791,1396,4.488,1397,4.488,1398,5.235]],["title/injectables/TournamentEffects.html",[457,1.331,1514,2.767]],["body/injectables/TournamentEffects.html",[3,0.079,4,0.079,9,0.071,19,0.362,20,0.865,27,0.733,36,0.851,38,0.529,39,0.013,40,0.44,41,0.245,42,0.464,50,1.882,51,1.697,55,0.337,56,0.224,69,0.238,70,0.147,71,1.306,72,1.35,85,0.547,105,2.287,111,1.486,129,1.484,166,0.006,167,0.006,168,3.23,173,3.334,174,3.124,192,1.701,195,3.066,222,0.816,263,0.736,355,0.876,363,1.583,369,0.943,408,3.068,425,2.913,426,4.014,457,1.204,459,1.329,511,1.49,558,3.621,568,3.788,573,1.486,589,2.479,595,2.503,596,1.701,597,1.583,598,3.527,599,3.527,600,1.329,601,2.503,629,3.334,642,4.115,678,1.486,798,1.701,808,0.584,991,3.104,1029,2.217,1030,3.527,1042,1.847,1044,1.583,1045,1.847,1049,1.701,1052,1.583,1053,1.583,1120,4.162,1202,1.486,1207,1.265,1218,1.583,1219,1.701,1220,3.527,1231,1.583,1232,1.583,1236,3.527,1379,1.583,1380,1.583,1381,1.583,1382,1.583,1396,1.583,1397,1.583,1411,4.126,1414,1.847,1415,2.688,1416,4.903,1422,2.503,1514,2.503,1515,1.701,1516,4.006,1517,2.341,1518,4.006,1519,2.341,1520,3.23,1521,5.892,1522,5.723,1523,3.23,1524,3.23,1525,3.23,1526,3.23,1527,5.271,1528,3.23,1529,2.341,1530,3.23,1531,5.271,1532,3.23,1533,3.23,1534,3.23,1535,3.23,1536,3.23,1537,2.341,1538,3.23,1539,3.23,1540,2.341,1541,3.23,1542,3.23,1543,2.341,1544,2.043,1545,2.043,1546,2.043,1547,2.043,1548,4.115,1549,4.115,1550,5.173,1551,1.847,1552,1.701,1553,1.847,1554,1.847,1555,1.583,1556,1.847,1557,2.92,1558,1.847,1559,1.847,1560,1.847,1561,1.847,1562,1.847,1563,1.847,1564,1.847,1565,1.701,1566,1.847,1567,1.847,1568,4.765,1569,1.847,1570,1.847,1571,4.115,1572,4.115,1573,4.482,1574,2.92,1575,4.115,1576,2.92,1577,2.92,1578,2.92,1579,4.115,1580,4.482,1581,1.847,1582,1.847,1583,1.847,1584,1.847,1585,1.847,1586,3.621,1587,1.847,1588,1.847,1589,2.92,1590,1.847,1591,1.847,1592,1.847,1593,2.92,1594,1.847,1595,1.847]],["title/interfaces/TournamentFormModel.html",[808,1.021,1596,2.971]],["body/interfaces/TournamentFormModel.html",[3,0.165,4,0.165,9,0.149,19,0.386,20,1.473,39,0.013,40,0.875,41,0.85,52,2.119,55,0.235,69,0.165,107,3.958,166,0.009,167,0.009,170,4.178,189,2.938,222,2.564,511,3.291,536,2.534,808,1.223,809,2.051,1033,4.669,1095,4.669,1096,4.669,1377,3.317,1384,4.976,1385,4.976,1386,4.976,1387,4.58,1388,4.976,1390,4.976,1596,4.58,1597,4.28]],["title/interfaces/TournamentModel.html",[808,1.021,1007,2.767]],["body/interfaces/TournamentModel.html",[3,0.145,4,0.145,9,0.13,19,0.339,20,1.351,39,0.013,40,0.831,41,0.865,52,2.403,55,0.277,69,0.145,77,2.923,166,0.009,167,0.009,170,3.969,189,2.577,222,2.436,511,3.335,536,2.64,569,3.969,594,2.577,618,4.727,808,1.073,809,1.799,1007,3.912,1033,4.436,1095,4.436,1096,4.436,1384,4.727,1385,4.727,1386,4.727,1387,4.201,1388,4.727,1390,4.727,1391,5.514,1392,5.514,1393,5.514,1394,5.514,1598,3.754]],["title/modules/TournamentModule.html",[313,1.377,1599,2.971]],["body/modules/TournamentModule.html",[1,1.341,3,0.137,4,0.137,9,0.123,39,0.013,55,0.392,56,0.388,69,0.137,70,0.255,117,0.978,135,1.966,136,1.966,144,1.966,150,2.031,162,1.966,166,0.008,167,0.008,313,1.364,315,1.572,316,2.088,317,3.423,318,2.301,319,2.301,320,1.834,329,3.802,332,3.154,333,2.301,334,2.301,336,2.514,337,2.514,346,2.741,354,3.537,355,1.516,362,3.537,363,2.741,408,2.189,444,3.328,445,2.301,448,2.943,600,2.301,602,2.943,1253,2.943,1404,4.991,1477,4.991,1514,2.741,1555,3.757,1599,6.086,1600,3.537,1601,3.537,1602,3.537,1603,4.991,1604,4.053,1605,3.537,1606,3.537,1607,3.537,1608,4.053,1609,4.053,1610,3.537,1611,4.053,1612,4.053,1613,4.053,1614,4.053,1615,4.053]],["title/interfaces/TournamentSearchModel.html",[808,1.021,1029,2.451]],["body/interfaces/TournamentSearchModel.html",[3,0.179,4,0.179,9,0.161,19,0.418,20,1.548,39,0.013,40,0.9,41,0.817,52,2.197,55,0.317,69,0.179,166,0.01,167,0.01,170,4.103,189,3.176,222,2.638,511,2.909,536,2.155,540,4.182,569,4.298,594,3.176,808,1.322,809,2.217,1029,3.968,1030,5.119,1031,5.972,1032,5.972,1033,4.804,1377,3.585,1616,4.627,1617,5.302]],["title/injectables/TournamentService.html",[174,2.451,457,1.331]],["body/injectables/TournamentService.html",[3,0.119,4,0.119,9,0.107,19,0.279,24,0.785,27,1.001,36,1.09,38,1.645,39,0.013,40,0.866,41,0.763,42,1.441,45,1.059,55,0.362,56,0.34,69,0.119,70,0.223,71,1.008,72,1.042,77,3.111,85,1.652,166,0.01,167,0.008,174,3.029,195,1.54,222,1.762,246,1.745,263,1.114,345,1.914,358,2.012,359,2.249,408,4.019,426,2.249,427,3.584,457,1.645,459,2.012,462,4.349,469,2.573,475,1.825,536,2.554,573,3.742,589,1.914,595,3.988,596,2.573,943,2.573,954,2.795,962,3.989,991,3.42,994,3.092,995,4.413,1007,2.396,1029,3.852,1049,2.573,1050,3.092,1106,2.573,1108,3.673,1113,2.795,1115,3.092,1242,4.413,1261,3.42,1596,4.67,1618,3.092,1619,5.057,1620,5.897,1621,3.543,1622,5.057,1623,3.543,1624,5.057,1625,3.543,1626,5.057,1627,3.543,1628,5.057,1629,3.543,1630,5.057,1631,3.543,1632,5.057,1633,3.543,1634,3.543,1635,3.543,1636,3.543,1637,5.057,1638,3.543,1639,3.543]],["title/interfaces/TournamentState.html",[600,2.323,808,1.021]],["body/interfaces/TournamentState.html",[3,0.087,4,0.087,9,0.078,19,0.385,20,0.935,27,0.512,39,0.013,40,0.308,41,0.513,55,0.346,56,0.248,69,0.244,70,0.162,71,1.392,72,1.439,85,0.604,105,2.397,111,1.641,129,1.566,166,0.006,167,0.006,168,3.34,173,1.878,174,2.396,192,1.878,195,3.148,222,0.901,263,0.813,355,0.967,363,1.749,369,1.041,408,3.216,425,2.539,426,3.494,457,1.301,511,2.216,558,3.156,568,4.768,573,1.641,589,3.216,595,2.705,596,1.878,597,1.749,598,2.705,599,2.705,600,2.271,601,2.705,629,3.553,642,3.156,678,1.641,798,1.878,808,0.645,809,1.081,991,3.309,1029,3.298,1030,3.724,1042,2.04,1044,1.749,1045,2.04,1049,1.878,1052,1.749,1053,1.749,1120,4.305,1202,1.641,1207,1.397,1218,1.749,1219,1.878,1220,2.705,1231,1.749,1232,1.749,1236,2.705,1379,1.749,1380,1.749,1381,1.749,1382,1.749,1396,1.749,1397,1.749,1411,4.324,1414,2.04,1415,2.905,1416,5.056,1422,2.705,1514,1.749,1515,1.878,1516,2.257,1518,2.257,1520,2.257,1521,5.197,1522,4.805,1523,2.257,1524,2.257,1525,2.257,1526,2.257,1527,4.27,1528,2.257,1530,2.257,1531,4.27,1532,2.257,1533,2.257,1534,2.257,1535,2.257,1536,2.257,1538,2.257,1539,2.257,1541,2.257,1542,2.257,1544,2.257,1545,2.257,1546,2.257,1547,2.257,1548,5.179,1549,5.179,1550,5.351,1551,2.04,1552,1.878,1553,2.04,1554,2.04,1555,1.749,1556,2.04,1557,3.156,1558,2.04,1559,2.04,1560,2.04,1561,2.04,1562,2.04,1563,2.04,1564,2.04,1565,1.878,1566,2.04,1567,2.04,1568,4.967,1569,2.04,1570,2.04,1571,4.344,1572,4.344,1573,4.697,1574,3.156,1575,4.344,1576,3.156,1577,3.156,1578,3.156,1579,4.344,1580,4.697,1581,2.04,1582,2.04,1583,2.04,1584,2.04,1585,2.04,1586,3.86,1587,2.04,1588,2.04,1589,3.156,1590,2.04,1591,2.04,1592,2.04,1593,3.156,1594,2.04,1595,2.04]],["title/modules/TournamentsRoutingModule.html",[313,1.377,1603,2.767]],["body/modules/TournamentsRoutingModule.html",[0,0.822,1,1.481,3,0.158,4,0.158,9,0.142,19,0.483,39,0.013,55,0.385,56,0.45,58,1.823,69,0.158,70,0.295,135,1.634,136,1.634,144,1.634,162,1.634,166,0.009,167,0.009,195,2.043,315,1.823,320,2.127,336,2.127,337,2.776,394,3.178,395,3.893,396,3.878,397,5.208,398,3.413,400,3.413,401,3.413,451,2.815,453,2.983,455,3.893,456,3.413,770,4.618,772,3.413,774,4.839,1116,4.618,1253,3.413,1258,4.102,1259,4.102,1261,3.178,1603,4.149,1605,4.102,1606,4.102,1607,4.102,1610,4.102,1640,4.7,1641,4.7,1642,4.7]],["title/interfaces/UserModel.html",[473,2.971,808,1.021]],["body/interfaces/UserModel.html",[3,0.179,4,0.179,9,0.161,19,0.419,20,1.55,39,0.013,41,0.846,69,0.179,76,5.124,77,3.168,80,3.574,104,5.124,107,4.108,166,0.01,167,0.01,473,4.819,511,2.912,536,2.75,566,4.539,808,1.326,809,2.222,1643,4.639,1644,6.613,1645,6.613]],["title/coverage.html",[1646,4.88]],["body/coverage.html",[0,0.861,1,0.885,9,0.07,10,2.02,13,1.387,35,1.681,39,0.013,41,0.243,61,1.565,63,1.565,66,1.826,70,0.326,105,3.445,120,0.637,124,0.637,127,0.617,128,0.637,130,1.01,132,0.637,135,0.617,136,0.617,137,0.637,139,0.637,141,0.637,143,0.617,144,0.617,145,0.637,147,0.637,149,0.617,150,0.637,152,0.617,153,0.637,156,0.637,158,0.637,161,0.617,162,0.617,164,0.658,166,0.006,167,0.006,169,2.02,174,1.387,187,1.681,190,1.826,224,0.932,244,2.02,254,1.469,265,1.387,330,1.565,331,1.565,335,2.664,358,2.083,360,1.681,365,1.826,372,1.826,375,1.092,378,1.826,380,1.681,416,2.02,434,2.02,450,1.681,451,2.729,457,2.048,458,1.681,460,2.02,466,2.328,470,1.565,473,1.681,481,2.02,482,1.826,483,2.02,490,2.02,491,1.826,492,2.02,532,2.02,548,1.826,549,2.02,553,2.02,563,2.02,589,1.25,597,1.565,598,1.565,599,1.565,600,1.314,601,1.565,644,2.02,649,2.799,650,1.565,652,2.02,653,2.02,665,2.894,667,2.02,678,1.469,706,2.02,719,2.02,720,1.826,721,2.02,769,3.505,770,1.565,772,1.681,773,2.02,808,1.834,810,2.02,811,2.02,825,1.681,850,2.02,943,1.681,944,2.02,963,2.02,964,1.826,965,2.02,986,2.02,1004,1.681,1007,1.565,1029,1.387,1044,1.565,1046,1.826,1052,1.565,1053,1.565,1105,2.02,1116,1.565,1117,2.02,1127,1.681,1128,2.894,1142,1.826,1144,1.826,1146,2.02,1175,2.02,1183,1.681,1195,2.02,1196,2.02,1197,2.02,1207,1.25,1220,1.565,1228,2.02,1236,1.565,1237,2.02,1243,2.02,1262,2.02,1279,2.894,1280,2.02,1303,3.594,1308,1.469,1313,1.826,1320,1.826,1333,2.02,1334,2.02,1337,2.02,1358,2.02,1376,1.681,1377,3.505,1378,2.894,1399,2.02,1404,1.565,1405,2.02,1406,2.02,1412,4.457,1422,2.48,1428,1.565,1477,1.565,1478,2.02,1479,2.02,1489,2.02,1490,2.02,1496,2.02,1510,2.02,1511,2.02,1514,1.565,1515,5.271,1552,1.681,1555,1.565,1565,1.681,1596,1.681,1597,2.02,1598,2.02,1616,2.02,1618,2.02,1643,2.02,1646,2.02,1647,2.315,1648,2.315,1649,2.315,1650,6.726,1651,8.154,1652,8.048,1653,7.74,1654,5.183,1655,4.556,1656,3.976,1657,5.649,1658,2.02,1659,4.556,1660,2.02,1661,2.02,1662,2.02,1663,3.668,1664,2.315,1665,2.315,1666,2.315,1667,2.315,1668,5.183,1669,2.315,1670,3.976,1671,2.02,1672,2.02,1673,2.02,1674,2.02,1675,2.315,1676,2.315]],["title/dependencies.html",[316,2.536,1677,2.978]],["body/dependencies.html",[39,0.013,56,0.532,57,2.617,58,2.152,59,3.15,166,0.01,167,0.01,263,1.744,316,2.858,339,5.947,340,5.376,355,2.549,357,4.842,363,3.752,368,4.377,369,2.233,370,4.842,445,3.15,912,4.842,1678,5.548,1679,8.222,1680,5.548,1681,5.548,1682,7.375,1683,6.814,1684,5.548,1685,5.548,1686,5.548,1687,5.548,1688,5.548,1689,5.548,1690,5.548,1691,5.548]],["title/miscellaneous/enumerations.html",[1692,2.166,1693,4.296]],["body/miscellaneous/enumerations.html",[19,0.414,22,5.754,39,0.013,51,2.747,166,0.01,167,0.01,170,3.743,295,5.201,567,3.949,569,3.743,885,5.754,1202,4.184,1692,3.338,1693,4.591,1694,5.26,1695,5.26,1696,5.26,1697,5.26,1698,5.26,1699,5.26,1700,6.593,1701,6.593,1702,6.593,1703,5.26,1704,6.593,1705,6.593,1706,5.26,1707,5.26,1708,5.26,1709,5.26,1710,5.26,1711,5.26,1712,5.26,1713,6.593,1714,5.26,1715,6.593,1716,5.26,1717,5.26,1718,5.26,1719,5.26,1720,5.26]],["title/miscellaneous/functions.html",[1692,2.166,1721,4.296]],["body/miscellaneous/functions.html",[19,0.494,38,1.417,39,0.012,40,0.745,41,0.657,42,1.241,45,0.939,166,0.011,167,0.011,335,4.552,352,6.782,373,5.47,377,5.47,380,5.324,1692,3.978,1721,5.47,1722,5.47]],["title/index.html",[19,0.269,1723,3.413,1724,3.413]],["body/index.html",[39,0.011,166,0.011,167,0.011]],["title/modules.html",[315,2.169]],["body/modules.html",[39,0.01,166,0.01,167,0.01,314,4.04,315,2.158,326,3.762,327,3.762,328,3.762,329,2.866,340,6.426,438,4.04,442,3.762,935,4.04,939,3.762,1246,4.04,1250,3.762,1599,4.04,1603,3.762,1725,8.146,1726,8.146,1727,8.448,1728,8.042,1729,8.042]],["title/overview.html",[1730,4.88]],["body/overview.html",[1,1.308,2,0.899,39,0.013,117,0.738,120,0.842,124,1.914,127,1.443,128,1.492,132,1.914,135,1.443,136,1.443,137,1.914,139,1.914,141,1.914,143,1.443,144,1.443,145,1.914,147,1.914,149,1.443,150,1.492,152,1.443,153,1.492,156,1.914,158,1.492,161,1.443,162,1.443,166,0.007,167,0.007,168,1.506,313,1.029,314,5.772,315,1.186,316,1.575,317,1.651,318,1.736,319,1.736,320,1.384,321,2.668,322,2.668,323,2.668,324,2.668,325,2.668,326,3.665,327,3.665,328,5.404,329,4.241,330,3.665,331,3.665,332,2.579,333,1.736,334,1.736,396,1.736,415,2.068,438,5.394,439,2.668,440,2.668,441,2.668,442,3.665,459,1.736,650,4.703,651,1.831,771,1.94,809,1.278,935,5.188,936,2.668,937,2.668,938,2.668,939,3.665,1133,2.668,1134,2.668,1135,2.668,1246,5.651,1247,2.668,1248,2.668,1249,2.668,1250,3.665,1404,3.665,1425,2.668,1426,2.668,1427,2.668,1428,4.703,1477,3.665,1599,5.859,1600,2.668,1601,2.668,1602,2.668,1603,3.665,1730,2.668,1731,3.057,1732,3.057,1733,3.057,1734,5.419,1735,3.057,1736,3.057]],["title/properties.html",[20,1.15,1677,2.978]],["body/properties.html",[20,1.535,39,0.012,166,0.011,167,0.011,1737,6.572,1738,6.572]],["title/routes.html",[396,3.175]],["body/routes.html",[39,0.011,166,0.011,167,0.011,396,3.768]],["title/miscellaneous/variables.html",[1692,2.166,1739,4.296]],["body/miscellaneous/variables.html",[19,0.441,39,0.013,40,0.487,41,0.687,42,0.81,50,2.846,51,2.565,53,2.685,66,2.546,76,1.335,77,1.349,80,1.931,85,0.461,87,3.021,94,2.685,101,2.344,102,1.558,104,1.335,105,2.251,107,1.833,111,1.253,129,1.345,166,0.005,167,0.005,168,3.138,190,2.546,222,2.339,224,0.795,231,2.344,265,1.933,284,1.017,290,1.335,302,1.183,303,1.121,335,1.434,358,2.684,360,2.344,365,2.546,378,2.546,379,1.723,380,1.434,399,2.344,408,3.326,411,1.335,453,1.253,480,2.183,511,0.795,524,1.434,566,1.933,568,2.973,573,2.598,589,1.067,597,2.183,598,2.183,599,2.183,601,2.768,629,2.973,678,2.048,798,1.434,817,2.546,825,2.344,991,2.768,1030,3.197,1031,1.558,1032,1.558,1033,2.048,1044,2.183,1046,2.546,1052,2.183,1053,2.183,1095,1.253,1096,1.253,1120,3.908,1163,1.434,1183,2.344,1185,5.561,1220,2.183,1231,1.335,1232,1.335,1261,2.183,1300,2.546,1303,1.558,1308,2.048,1313,2.546,1314,4.287,1315,2.817,1316,4.062,1317,2.817,1318,2.817,1319,1.723,1320,2.546,1321,1.723,1322,1.723,1332,2.546,1379,1.335,1380,1.335,1381,1.335,1382,1.335,1384,1.335,1385,1.335,1386,1.335,1388,1.335,1390,1.335,1396,1.335,1397,1.335,1411,3.785,1412,1.558,1415,2.973,1416,4.628,1420,2.817,1421,2.817,1422,3.992,1423,1.723,1424,1.723,1515,1.434,1548,3.229,1549,3.229,1550,4.858,1551,1.558,1552,2.344,1553,1.558,1554,1.558,1555,2.183,1556,1.558,1557,2.546,1558,1.558,1559,1.558,1560,1.558,1561,1.558,1562,1.558,1563,1.558,1564,1.558,1565,2.344,1566,1.558,1567,1.558,1568,4.413,1569,1.558,1570,1.558,1571,3.729,1572,3.729,1573,4.111,1574,2.546,1575,3.729,1576,2.546,1577,2.546,1578,2.546,1579,3.729,1580,4.111,1581,1.558,1582,1.558,1583,1.558,1584,1.558,1585,1.558,1586,3.229,1587,1.558,1588,1.558,1589,2.546,1590,1.558,1591,1.558,1592,1.558,1593,2.546,1594,1.558,1595,1.558,1644,1.723,1645,1.723,1656,1.723,1658,1.723,1660,1.723,1661,2.817,1662,1.723,1670,1.723,1671,3.572,1672,3.572,1673,1.723,1674,1.723,1692,1.253,1722,1.723,1739,1.723,1740,3.228,1741,6.711,1742,4.093,1743,1.975,1744,1.975,1745,4.727,1746,4.093,1747,1.975,1748,1.975,1749,1.975,1750,5.902,1751,1.975,1752,3.228,1753,3.228,1754,1.975,1755,1.975,1756,1.975,1757,3.228,1758,1.975,1759,3.228,1760,3.228,1761,1.975,1762,1.975,1763,1.975,1764,1.975,1765,3.228,1766,4.093,1767,1.975,1768,4.093,1769,4.093,1770,1.975,1771,3.228,1772,3.228]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":105,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1738,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1586,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["0.5em",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":168,"title":{"components/AddComponent-1.html":{},"interfaces/LoginModel-1.html":{}},"body":{"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.2s",{"_index":1172,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1.5rem",{"_index":975,"title":{},"body":{"components/InProgressComponent.html":{}}}],["10",{"_index":1055,"title":{},"body":{"components/IndexComponent.html":{}}}],["100",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["1000",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{}}}],["100vh",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":523,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/HomeComponent.html":{}}}],["110px",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{}}}],["1234",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["13",{"_index":1731,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1735,"title":{},"body":{"overview.html":{}}}],["14.0.0",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["14.0.2",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":848,"title":{},"body":{"components/HeaderComponent.html":{}}}],["16",{"_index":232,"title":{},"body":{"components/AddComponent-1.html":{}}}],["1]?.position",{"_index":1595,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["1]?.score",{"_index":1594,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["1px",{"_index":529,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["2",{"_index":231,"title":{},"body":{"components/AddComponent-1.html":{},"components/DetailsComponent.html":{},"components/MenuButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":713,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["23",{"_index":1732,"title":{},"body":{"overview.html":{}}}],["25",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["250px",{"_index":977,"title":{},"body":{"components/InProgressComponent.html":{}}}],["2px",{"_index":1348,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["3.2.1",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":531,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/MenuLinkComponent.html":{}}}],["3000",{"_index":106,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["300px",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["34",{"_index":1736,"title":{},"body":{"overview.html":{}}}],["3s",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["4",{"_index":1734,"title":{},"body":{"overview.html":{}}}],["400",{"_index":685,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{}}}],["401",{"_index":690,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":691,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["404",{"_index":692,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["40px",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["418",{"_index":697,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["45deg",{"_index":1302,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["5.0.0",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1168,"title":{},"body":{"components/LoaderComponent.html":{}}}],["50px",{"_index":718,"title":{},"body":{"components/FooterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["5px",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["5rem",{"_index":982,"title":{},"body":{"components/InProgressComponent.html":{}}}],["5s",{"_index":525,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["600",{"_index":838,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/MenuLinkComponent.html":{}}}],["64px",{"_index":1166,"title":{},"body":{"components/LoaderComponent.html":{}}}],["6px",{"_index":528,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/LoaderComponent.html":{}}}],["7",{"_index":1733,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":844,"title":{},"body":{"components/HeaderComponent.html":{}}}],["768",{"_index":1327,"title":{},"body":{"components/MenuComponent.html":{}}}],["768px",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["7rem",{"_index":984,"title":{},"body":{"components/InProgressComponent.html":{}}}],["80px",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{},"components/LoaderComponent.html":{}}}],["86400000",{"_index":226,"title":{},"body":{"components/AddComponent-1.html":{}}}],["8px",{"_index":1167,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["900",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/MenuLinkComponent.html":{}}}],["9rem",{"_index":980,"title":{},"body":{"components/InProgressComponent.html":{}}}],["_actions",{"_index":1520,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["_authservice",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["_cd",{"_index":819,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["_confirmationservice",{"_index":777,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["_fb",{"_index":43,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["_http",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["_httpclient",{"_index":1108,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["_inscriptionservice",{"_index":1003,"title":{},"body":{"components/IndexComponent.html":{}}}],["_isopen",{"_index":1359,"title":{},"body":{"injectables/MenuService.html":{}}}],["_match",{"_index":1201,"title":{},"body":{"components/MatchComponent.html":{}}}],["_matchservice",{"_index":1518,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["_memberservice",{"_index":34,"title":{},"body":{"components/AddComponent.html":{}}}],["_menuservice",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["_messageservice",{"_index":32,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["_route",{"_index":578,"title":{},"body":{"components/DetailsComponent.html":{}}}],["_router",{"_index":30,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["_store",{"_index":576,"title":{},"body":{"components/DetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["_tournamentservice",{"_index":173,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["absolute",{"_index":1163,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["abstract",{"_index":560,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["abstractcontrol",{"_index":179,"title":{},"body":{"components/AddComponent-1.html":{},"classes/AsyncValidators.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/FormErrorComponent.html":{}}}],["abstractcontroloptions",{"_index":185,"title":{},"body":{"components/AddComponent-1.html":{}}}],["abstractcontrol|null",{"_index":539,"title":{},"body":{"classes/CompareValidators.html":{},"components/FormErrorComponent.html":{}}}],["accept",{"_index":804,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["accessibles",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{}}}],["accessors",{"_index":724,"title":{},"body":{"components/FormErrorComponent.html":{},"components/MatchComponent.html":{},"injectables/MenuService.html":{}}}],["accueil",{"_index":1315,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["actions",{"_index":642,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["activatedroute",{"_index":575,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":780,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["active::after",{"_index":1352,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["actual_component",{"_index":165,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["add",{"_index":1261,"title":{},"body":{"modules/MemberRoutingModule.html":{},"components/MenuComponent.html":{},"injectables/TournamentService.html":{},"modules/TournamentsRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["add(tournament",{"_index":1622,"title":{},"body":{"injectables/TournamentService.html":{}}}],["add.component.html",{"_index":18,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["add.component.scss",{"_index":16,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["addcomponent",{"_index":1,"title":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["admin",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin.guard",{"_index":1259,"title":{},"body":{"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["admin.guard.ts",{"_index":1117,"title":{},"body":{"guards/IsAdminGuard.html":{},"coverage.html":{}}}],["admin.guard.ts:11",{"_index":1118,"title":{},"body":{"guards/IsAdminGuard.html":{}}}],["admin.guard.ts:17",{"_index":1121,"title":{},"body":{"guards/IsAdminGuard.html":{}}}],["adminmenu",{"_index":1320,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adresse",{"_index":756,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["aftercontentinit",{"_index":512,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["afterviewchecked",{"_index":987,"title":{},"body":{"components/IndexComponent.html":{}}}],["afterviewinit",{"_index":493,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["align",{"_index":716,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["angular",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular/animations",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":445,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/HttpUtils.html":{},"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentService.html":{}}}],["angular/compiler",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":56,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"modules/CoreModule.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":57,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"classes/AsyncValidators.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/EditComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/HasForm.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":58,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/DetailsComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MemberRoutingModule.html":{},"components/MenuComponent.html":{},"modules/TournamentsRoutingModule.html":{},"dependencies.html":{}}}],["animate('0.3s",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":1171,"title":{},"body":{"components/LoaderComponent.html":{}}}],["animations",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/MemberComponent.html":{},"components/TournamentComponent.html":{}}}],["any,id",{"_index":421,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["apibaseurl",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":125,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["app.component",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":314,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":326,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["array(count).keys()].map(item",{"_index":621,"title":{},"body":{"components/DetailsComponent.html":{}}}],["array.pipe",{"_index":1474,"title":{},"body":{"modules/SharedModule.html":{}}}],["array.pipe.ts",{"_index":653,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"coverage.html":{}}}],["array.pipe.ts:8",{"_index":658,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["asyncvalidatorfn",{"_index":423,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["asyncvalidators",{"_index":63,"title":{"classes/AsyncValidators.html":{}},"body":{"components/AddComponent.html":{},"classes/AsyncValidators.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["attente",{"_index":1484,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["au",{"_index":701,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/IndexComponent.html":{}}}],["auth",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{}}}],["auth.component",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["authcomponent",{"_index":127,"title":{"components/AuthComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":438,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":1506,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authroutingmodule",{"_index":442,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":458,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["autopause",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["aux",{"_index":242,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["available",{"_index":1729,"title":{},"body":{"modules.html":{}}}],["avant",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["avec",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoir",{"_index":737,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["backdrop",{"_index":1162,"title":{},"body":{"components/LoaderComponent.html":{}}}],["background",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["basemenu",{"_index":1313,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":1507,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["behaviorsubject",{"_index":1365,"title":{},"body":{"injectables/MenuService.html":{}}}],["behaviorsubject(false",{"_index":1366,"title":{},"body":{"injectables/MenuService.html":{}}}],["between",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuLinkComponent.html":{}}}],["bibliothèque",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["bien",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{}}}],["bientôt",{"_index":833,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bienvenue",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["birthdate",{"_index":1644,"title":{},"body":{"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["black_win",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blackid",{"_index":1229,"title":{},"body":{"interfaces/MatchModel.html":{}}}],["blackname",{"_index":1230,"title":{},"body":{"interfaces/MatchModel.html":{}}}],["blackwin",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["block",{"_index":114,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/CollapsePanelComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuComponent.html":{}}}],["bloder",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":837,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["bluegray",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["body",{"_index":497,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["bolder",{"_index":842,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{}}}],["bootstrap",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["border",{"_index":526,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/LoaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["bottom",{"_index":522,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["bottompaginator",{"_index":990,"title":{},"body":{"components/IndexComponent.html":{}}}],["break",{"_index":689,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["browse",{"_index":1727,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["bstorm",{"_index":714,"title":{},"body":{"components/FooterComponent.html":{}}}],["button",{"_index":1281,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["button'},{'name",{"_index":155,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["button.component",{"_index":1143,"title":{},"body":{"modules/LayoutModule.html":{}}}],["button.component.html",{"_index":1283,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["button.component.scss",{"_index":1282,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["button.component.ts",{"_index":1280,"title":{},"body":{"components/MenuButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:14",{"_index":1285,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["button.component.ts:21",{"_index":1286,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1287,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["button/menu",{"_index":1142,"title":{},"body":{"modules/LayoutModule.html":{},"components/MenuButtonComponent.html":{},"coverage.html":{}}}],["buttonmodule",{"_index":1434,"title":{},"body":{"modules/SharedModule.html":{}}}],["calc(#{$button",{"_index":1292,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["calc(100",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculatetournamentscore",{"_index":1565,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatetournamentscore(tab",{"_index":1563,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["calculatetournamentscore(tournament.currentround",{"_index":1561,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["calendarmodule",{"_index":1463,"title":{},"body":{"modules/SharedModule.html":{}}}],["canactivate",{"_index":455,"title":{},"body":{"modules/AuthRoutingModule.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["canactivate(route",{"_index":1119,"title":{},"body":{"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["candeactivate",{"_index":774,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["candeactivate(component",{"_index":778,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["canregister",{"_index":1393,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{}}}],["canstart",{"_index":1395,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{}}}],["canvalidateround",{"_index":1396,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["cardmodule",{"_index":1432,"title":{},"body":{"modules/SharedModule.html":{}}}],["case",{"_index":684,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"pipes/StatusToStringPipe.html":{}}}],["catcherror",{"_index":425,"title":{},"body":{"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["catcherror(xhr",{"_index":681,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["categories",{"_index":1096,"title":{},"body":{"components/IndexComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":1031,"title":{},"body":{"components/IndexComponent.html":{},"interfaces/TournamentSearchModel.html":{},"miscellaneous/variables.html":{}}}],["categoryenum",{"_index":170,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"miscellaneous/enumerations.html":{}}}],["categoryenum|null",{"_index":1617,"title":{},"body":{"interfaces/TournamentSearchModel.html":{}}}],["catégorie",{"_index":1093,"title":{},"body":{"components/IndexComponent.html":{}}}],["catégories",{"_index":234,"title":{},"body":{"components/AddComponent-1.html":{}}}],["cb",{"_index":420,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["cb(control.value",{"_index":431,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["ce",{"_index":733,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["center",{"_index":715,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["certaines",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{}}}],["cet",{"_index":1073,"title":{},"body":{"components/IndexComponent.html":{}}}],["cette",{"_index":751,"title":{},"body":{"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HomeComponent.html":{}}}],["champs",{"_index":734,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["change",{"_index":129,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["changecriteria",{"_index":1052,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changedetection",{"_index":812,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["changedetectionstrategy",{"_index":824,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":813,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["changedetectorref",{"_index":820,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["changepage",{"_index":1053,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changepassworddialogcomponent",{"_index":128,"title":{"components/ChangePasswordDialogComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changeresult",{"_index":1220,"title":{},"body":{"components/MatchComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changetab",{"_index":597,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkemail",{"_index":1263,"title":{},"body":{"injectables/MemberService.html":{}}}],["checkemail(email",{"_index":1266,"title":{},"body":{"injectables/MemberService.html":{}}}],["checkmate",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["checkusername",{"_index":1264,"title":{},"body":{"injectables/MemberService.html":{}}}],["checkusername(username",{"_index":1268,"title":{},"body":{"injectables/MemberService.html":{}}}],["child(1",{"_index":979,"title":{},"body":{"components/InProgressComponent.html":{},"components/MenuButtonComponent.html":{}}}],["child(2",{"_index":981,"title":{},"body":{"components/InProgressComponent.html":{},"components/MenuButtonComponent.html":{}}}],["child(3",{"_index":983,"title":{},"body":{"components/InProgressComponent.html":{},"components/MenuButtonComponent.html":{}}}],["children",{"_index":453,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"modules/TournamentsRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["chipmodule",{"_index":1454,"title":{},"body":{"modules/SharedModule.html":{}}}],["chou",{"_index":703,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["class",{"_index":70,"title":{"classes/AsyncValidators.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"classes/HttpUtils.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{}}}],["classes",{"_index":415,"title":{},"body":{"classes/AsyncValidators.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"classes/HttpUtils.html":{},"overview.html":{}}}],["clear",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{}}}],["client",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["clone",{"_index":1504,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["close",{"_index":1360,"title":{},"body":{"injectables/MenuService.html":{}}}],["closed",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":936,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":937,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":938,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodule",{"_index":1133,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declarations",{"_index":1134,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_exports",{"_index":1135,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_imports",{"_index":1136,"title":{},"body":{"modules/LayoutModule.html":{}}}],["cluster_membermodule",{"_index":1247,"title":{},"body":{"modules/MemberModule.html":{},"overview.html":{}}}],["cluster_membermodule_declarations",{"_index":1248,"title":{},"body":{"modules/MemberModule.html":{},"overview.html":{}}}],["cluster_membermodule_imports",{"_index":1249,"title":{},"body":{"modules/MemberModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1425,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1427,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1426,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":1600,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":1601,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":1602,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["code",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{}}}],["collapse",{"_index":133,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["collapsepanelcomponent",{"_index":132,"title":{"components/CollapsePanelComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["column",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/InProgressComponent.html":{}}}],["commande",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{}}}],["comparevalidators",{"_index":187,"title":{"classes/CompareValidators.html":{}},"body":{"components/AddComponent-1.html":{},"classes/CompareValidators.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberRoutingModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":122,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{},"overview.html":{}}}],["components/change",{"_index":1255,"title":{},"body":{"modules/MemberModule.html":{}}}],["components/collapse",{"_index":1475,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/footer/footer.component",{"_index":1139,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/form",{"_index":1451,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/header/header.component",{"_index":1138,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/in",{"_index":1471,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/loader/loader.component",{"_index":1453,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/match/match.component",{"_index":1611,"title":{},"body":{"modules/TournamentModule.html":{}}}],["components/menu",{"_index":1141,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/menu/menu.component",{"_index":1140,"title":{},"body":{"modules/LayoutModule.html":{}}}],["composants",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{}}}],["compte",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{}}}],["confirmationservice",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["confirmdialogmodule",{"_index":1447,"title":{},"body":{"modules/SharedModule.html":{}}}],["connect",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{}}}],["connectedusername",{"_index":1413,"title":{},"body":{"interfaces/SessionState.html":{}}}],["connecter",{"_index":836,"title":{},"body":{"components/HeaderComponent.html":{}}}],["connection",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{}}}],["connexion",{"_index":700,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"components/AddComponent-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/HomeRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"components/MenuComponent.html":{},"interfaces/SessionState.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["constructor(_actions",{"_index":1517,"title":{},"body":{"injectables/TournamentEffects.html":{}}}],["constructor(_cd",{"_index":1340,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["constructor(_confirmationservice",{"_index":775,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["constructor(_fb",{"_index":28,"title":{},"body":{"components/AddComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(_http",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(_httpclient",{"_index":1106,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["constructor(_menuservice",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{}}}],["constructor(_route",{"_index":574,"title":{},"body":{"components/DetailsComponent.html":{}}}],["constructor(_router",{"_index":172,"title":{},"body":{"components/AddComponent-1.html":{}}}],["constructor(_store",{"_index":669,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["container",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuLinkComponent.html":{}}}],["control",{"_index":181,"title":{},"body":{"components/AddComponent-1.html":{},"classes/AsyncValidators.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/FormErrorComponent.html":{}}}],["control?.value",{"_index":542,"title":{},"body":{"classes/CompareValidators.html":{}}}],["copy",{"_index":712,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/core.module",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/error.interceptor",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/token.interceptor",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["core/states/loading.reducer",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["core/states/session.reducer",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":327,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correction",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{}}}],["count",{"_index":618,"title":{},"body":{"components/DetailsComponent.html":{},"classes/HttpUtils.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{}}}],["cours",{"_index":1486,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["coverage",{"_index":1646,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":1414,"title":{},"body":{"interfaces/SessionState.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["createaction('[loading",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[session",{"_index":1420,"title":{},"body":{"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["createaction('[tournament",{"_index":1550,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["createeffect",{"_index":1521,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["createhttpparams",{"_index":945,"title":{},"body":{"classes/HttpUtils.html":{}}}],["createhttpparams(obj",{"_index":947,"title":{},"body":{"classes/HttpUtils.html":{}}}],["createreducer",{"_index":1415,"title":{},"body":{"interfaces/SessionState.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["criteria",{"_index":991,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["créer",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{}}}],["current",{"_index":1580,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["current.draws",{"_index":1591,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["current.position",{"_index":1592,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["current.score",{"_index":1589,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["current.wins",{"_index":1590,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["currentround",{"_index":1391,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{}}}],["currentroute",{"_index":779,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["currentstate",{"_index":781,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["cursor",{"_index":1350,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["d",{"_index":632,"title":{},"body":{"components/DetailsComponent.html":{}}}],["d'autres",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{}}}],["d'exécuter",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["d\\'autres",{"_index":933,"title":{},"body":{"components/HomeComponent.html":{}}}],["d\\'exécuter",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{}}}],["date",{"_index":107,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"classes/DateValidators.html":{},"components/FormErrorComponent.html":{},"pipes/ToDatePipe.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["date().gettime",{"_index":225,"title":{},"body":{"components/AddComponent-1.html":{}}}],["date(value",{"_index":1495,"title":{},"body":{"pipes/ToDatePipe.html":{}}}],["date.pipe",{"_index":1457,"title":{},"body":{"modules/SharedModule.html":{}}}],["date.pipe.ts",{"_index":1490,"title":{},"body":{"pipes/ToDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:8",{"_index":1492,"title":{},"body":{"pipes/ToDatePipe.html":{}}}],["datecontrol",{"_index":215,"title":{},"body":{"components/AddComponent-1.html":{}}}],["datecontrol.value",{"_index":220,"title":{},"body":{"components/AddComponent-1.html":{}}}],["datevalidators",{"_index":548,"title":{"classes/DateValidators.html":{}},"body":{"classes/DateValidators.html":{},"coverage.html":{}}}],["datevalidators.notbefore(new",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date|null",{"_index":1493,"title":{},"body":{"pipes/ToDatePipe.html":{}}}],["dd",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{}}}],["dd/mm/yyyy",{"_index":750,"title":{},"body":{"components/FormErrorComponent.html":{},"components/IndexComponent.html":{}}}],["de",{"_index":108,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["declarations",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["decoration",{"_index":846,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["decorator",{"_index":559,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["decorators",{"_index":508,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/IndexComponent.html":{}}}],["deep",{"_index":116,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"injectables/TournamentEffects.html":{},"miscellaneous/variables.html":{}}}],["defeats",{"_index":1379,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{}}}],["delete",{"_index":995,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentService.html":{}}}],["delete(id",{"_index":1624,"title":{},"body":{"injectables/TournamentService.html":{}}}],["delete(tournament",{"_index":1006,"title":{},"body":{"components/IndexComponent.html":{}}}],["dependencies",{"_index":316,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":236,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["destroyed",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["destroyed.component",{"_index":1152,"title":{},"body":{"components/LoaderComponent.html":{}}}],["destroyedcomponent",{"_index":164,"title":{"directives/DestroyedComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["destroyedcomponent:10",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["destroyedcomponent:8",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["detail",{"_index":96,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["details.component.html",{"_index":565,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":564,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.model",{"_index":596,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["details.model.ts",{"_index":1378,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"coverage.html":{}}}],["details/:id",{"_index":1642,"title":{},"body":{"modules/TournamentsRoutingModule.html":{}}}],["detailscomponent",{"_index":135,"title":{"components/DetailsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["devtools",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":484,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{}}}],["dialog'},{'name",{"_index":131,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["dialog.component",{"_index":1256,"title":{},"body":{"modules/MemberModule.html":{}}}],["dialog.component.html",{"_index":486,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{}}}],["dialog.component.scss",{"_index":485,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{}}}],["dialog.component.ts",{"_index":483,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:12",{"_index":488,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{}}}],["dialog.component.ts:8",{"_index":487,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{}}}],["dialog/change",{"_index":482,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{},"modules/MemberModule.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":1445,"title":{},"body":{"modules/SharedModule.html":{}}}],["direction",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/InProgressComponent.html":{}}}],["directive",{"_index":120,"title":{"directives/DestroyedComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":163,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{}}}],["disabled",{"_index":1204,"title":{},"body":{"components/MatchComponent.html":{}}}],["display",{"_index":113,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["div",{"_index":976,"title":{},"body":{"components/InProgressComponent.html":{},"components/MenuButtonComponent.html":{}}}],["documentation",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":972,"title":{},"body":{"components/InProgressComponent.html":{}}}],["doesn\\'t",{"_index":985,"title":{},"body":{"components/InProgressComponent.html":{}}}],["doit",{"_index":736,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["données",{"_index":97,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"guards/FormSubmittedGuard.html":{}}}],["draw",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["draws",{"_index":1380,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["dropdownmodule",{"_index":1459,"title":{},"body":{"modules/SharedModule.html":{}}}],["dt",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{}}}],["dt::after",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{}}}],["du",{"_index":694,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["dual",{"_index":1158,"title":{},"body":{"components/LoaderComponent.html":{}}}],["dynamic",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["déj",{"_index":752,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["désinscrit",{"_index":1082,"title":{},"body":{"components/IndexComponent.html":{}}}],["ease",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/MenuLinkComponent.html":{}}}],["edit.component.html",{"_index":646,"title":{},"body":{"components/EditComponent.html":{}}}],["edit.component.scss",{"_index":645,"title":{},"body":{"components/EditComponent.html":{}}}],["edit/:id",{"_index":1641,"title":{},"body":{"modules/TournamentsRoutingModule.html":{}}}],["editcomponent",{"_index":136,"title":{"components/EditComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["effectsmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/TournamentModule.html":{}}}],["effectsmodule.forfeature([tournamenteffects",{"_index":1615,"title":{},"body":{"modules/TournamentModule.html":{}}}],["effectsmodule.forroot",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":119,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["elementref",{"_index":507,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["elo",{"_index":104,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["elomax",{"_index":1388,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["elomaxcontrol",{"_index":198,"title":{},"body":{"components/AddComponent-1.html":{}}}],["elomaxcontrol?.addvalidators(comparevalidators.greaterorequalthan(elomincontrol",{"_index":200,"title":{},"body":{"components/AddComponent-1.html":{}}}],["elomaxcontrol?.updatevalueandvalidity",{"_index":203,"title":{},"body":{"components/AddComponent-1.html":{}}}],["elomin",{"_index":1386,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["elomincontrol",{"_index":196,"title":{},"body":{"components/AddComponent-1.html":{}}}],["elomincontrol?.valuechanges.subscribe",{"_index":202,"title":{},"body":{"components/AddComponent-1.html":{}}}],["email",{"_index":76,"title":{},"body":{"components/AddComponent.html":{},"components/FormErrorComponent.html":{},"injectables/MemberService.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":558,"title":{},"body":{"directives/DestroyedComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["emptyline",{"_index":657,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["en",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{},"pipes/StatusToStringPipe.html":{}}}],["end",{"_index":643,"title":{},"body":{"components/DetailsComponent.html":{}}}],["endofregistrationdate",{"_index":1390,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["endstate",{"_index":1671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["endwith",{"_index":1545,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["endwith(loadingstop",{"_index":1536,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["enumerations",{"_index":1693,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/category.enum",{"_index":189,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{}}}],["enums/gender.enum",{"_index":65,"title":{},"body":{"components/AddComponent.html":{}}}],["enums/result.enum",{"_index":1218,"title":{},"body":{"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["enums/role.enum",{"_index":1123,"title":{},"body":{"guards/IsAdminGuard.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{}}}],["enums/status.enum",{"_index":594,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"interfaces/PlayerScoreModel.html":{},"pipes/StatusToStringPipe.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{}}}],["enumtoarray",{"_index":654,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["enumtoarraypipe",{"_index":650,"title":{"pipes/EnumToArrayPipe.html":{}},"body":{"pipes/EnumToArrayPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["environment",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":100,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormErrorComponent.html":{},"components/LoginComponent.html":{}}}],["error'},{'name",{"_index":140,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["error.component",{"_index":1452,"title":{},"body":{"modules/SharedModule.html":{}}}],["error.component.html",{"_index":723,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.scss",{"_index":722,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts",{"_index":721,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:12",{"_index":727,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts:14",{"_index":730,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts:16",{"_index":726,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts:20",{"_index":728,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error/form",{"_index":720,"title":{},"body":{"components/FormErrorComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["errorinterceptor",{"_index":330,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":725,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors['greaterorequalthan'].smallprop",{"_index":761,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors['max'].max",{"_index":746,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors['maxlength'].requiredlength",{"_index":743,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors['min'].min",{"_index":745,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors['minlength'].requiredlength",{"_index":741,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors['notbefore'].requireddate",{"_index":749,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors[\\'greaterorequalthan\\'].smallprop",{"_index":768,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors[\\'max\\'].max",{"_index":765,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors[\\'maxlength\\'].requiredlength",{"_index":763,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors[\\'min\\'].min",{"_index":764,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors[\\'minlength\\'].requiredlength",{"_index":762,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors[\\'notbefore\\'].requireddate",{"_index":766,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["est",{"_index":239,"title":{},"body":{"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormErrorComponent.html":{},"components/HomeComponent.html":{}}}],["et",{"_index":1077,"title":{},"body":{"components/IndexComponent.html":{}}}],["event",{"_index":1016,"title":{},"body":{"components/IndexComponent.html":{},"components/MenuComponent.html":{}}}],["event.page",{"_index":1071,"title":{},"body":{"components/IndexComponent.html":{}}}],["exhaustmap",{"_index":1499,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["exhaustmap(token",{"_index":1502,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["exist",{"_index":973,"title":{},"body":{"components/InProgressComponent.html":{}}}],["export",{"_index":69,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{}}}],["exports",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["fadeanimation",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/MemberComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":53,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":971,"title":{},"body":{"components/InProgressComponent.html":{}}}],["female",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fff",{"_index":1169,"title":{},"body":{"components/LoaderComponent.html":{}}}],["fg",{"_index":21,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/EditComponent.html":{},"interfaces/HasForm.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["filles",{"_index":243,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["filter",{"_index":1310,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter(event",{"_index":1324,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter(m",{"_index":1572,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["filter.pipe",{"_index":1613,"title":{},"body":{"modules/TournamentModule.html":{}}}],["filter.pipe.ts",{"_index":1406,"title":{},"body":{"pipes/RoundFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:9",{"_index":1409,"title":{},"body":{"pipes/RoundFilterPipe.html":{}}}],["fin",{"_index":235,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["first",{"_index":1500,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["fixed",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["float",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["fois",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{}}}],["fonctionnalités",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{}}}],["font",{"_index":840,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{}}}],["footer",{"_index":707,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":138,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["footer.component.html",{"_index":709,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":708,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":137,"title":{"components/FooterComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":955,"title":{},"body":{"classes/HttpUtils.html":{}}}],["form",{"_index":62,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["form.model",{"_index":1635,"title":{},"body":{"injectables/TournamentService.html":{}}}],["form.model.ts",{"_index":1597,"title":{},"body":{"interfaces/TournamentFormModel.html":{},"coverage.html":{}}}],["form.ts",{"_index":810,"title":{},"body":{"interfaces/HasForm.html":{},"coverage.html":{}}}],["formbuilder",{"_index":29,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["formerrorcomponent",{"_index":139,"title":{"components/FormErrorComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formgroup",{"_index":48,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/EditComponent.html":{},"interfaces/HasForm.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["forms/register.form",{"_index":67,"title":{},"body":{"components/AddComponent.html":{}}}],["forms/tournament",{"_index":1047,"title":{},"body":{"components/IndexComponent.html":{}}}],["forms/tournament.form",{"_index":191,"title":{},"body":{"components/AddComponent-1.html":{}}}],["formsmodule",{"_index":1430,"title":{},"body":{"modules/SharedModule.html":{}}}],["formsubmittedguard",{"_index":770,"title":{"guards/FormSubmittedGuard.html":{}},"body":{"guards/FormSubmittedGuard.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{}}}],["formulaires",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{}}}],["full",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["function",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"classes/AsyncValidators.html":{},"coverage.html":{}}}],["functions",{"_index":1721,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gale",{"_index":760,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["gender",{"_index":1645,"title":{},"body":{"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["genderenum",{"_index":22,"title":{},"body":{"components/AddComponent.html":{},"miscellaneous/enumerations.html":{}}}],["genre",{"_index":110,"title":{},"body":{"components/AddComponent.html":{}}}],["gestion",{"_index":834,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["get(criteria",{"_index":1626,"title":{},"body":{"injectables/TournamentService.html":{}}}],["getdetails",{"_index":1619,"title":{},"body":{"injectables/TournamentService.html":{}}}],["getdetails(id",{"_index":1628,"title":{},"body":{"injectables/TournamentService.html":{}}}],["geterrors",{"_index":729,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["getisopen",{"_index":1368,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmatch",{"_index":1213,"title":{},"body":{"components/MatchComponent.html":{}}}],["getting",{"_index":1723,"title":{"index.html":{}},"body":{}}],["gettotal",{"_index":946,"title":{},"body":{"classes/HttpUtils.html":{}}}],["gettotal(headers",{"_index":950,"title":{},"body":{"classes/HttpUtils.html":{}}}],["graph",{"_index":1728,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1349,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["greaterorequalthan",{"_index":533,"title":{},"body":{"classes/CompareValidators.html":{}}}],["greaterorequalthan(other",{"_index":534,"title":{},"body":{"classes/CompareValidators.html":{}}}],["green",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["grow",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/MenuLinkComponent.html":{}}}],["guard",{"_index":769,"title":{"guards/FormSubmittedGuard.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":771,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/HomeComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"overview.html":{}}}],["handlethenrefresh",{"_index":996,"title":{},"body":{"components/IndexComponent.html":{}}}],["handlethenrefresh(observable",{"_index":1009,"title":{},"body":{"components/IndexComponent.html":{}}}],["hasform",{"_index":13,"title":{"interfaces/HasForm.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/EditComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"coverage.html":{}}}],["header",{"_index":814,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":142,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["header.component.html",{"_index":816,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":815,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":141,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":953,"title":{},"body":{"classes/HttpUtils.html":{}}}],["height",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["hidden",{"_index":1357,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["home",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["home.component",{"_index":941,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["home.component.html",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":143,"title":{"components/HomeComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":935,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":939,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["hover",{"_index":849,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["hover>div",{"_index":1291,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["html",{"_index":118,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["http://khun.somee.com/api",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["httpclientmodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":676,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":673,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":951,"title":{},"body":{"classes/HttpUtils.html":{}}}],["httpinterceptor",{"_index":677,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpparams",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpUtils.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["httprequest",{"_index":672,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["https://khun.somee.com/api",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httputils",{"_index":943,"title":{"classes/HttpUtils.html":{}},"body":{"classes/HttpUtils.html":{},"injectables/TournamentService.html":{},"coverage.html":{}}}],["httputils.createhttpparams(criteria",{"_index":1636,"title":{},"body":{"injectables/TournamentService.html":{}}}],["i\\'m",{"_index":698,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["icon",{"_index":94,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":77,"title":{},"body":{"components/AddComponent.html":{},"classes/AsyncValidators.html":{},"components/DetailsComponent.html":{},"injectables/InscriptionService.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{},"injectables/TournamentService.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["id).pipe",{"_index":432,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["identifier",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["if(!control",{"_index":541,"title":{},"body":{"classes/CompareValidators.html":{}}}],["if(!control.value",{"_index":429,"title":{},"body":{"classes/AsyncValidators.html":{},"classes/DateValidators.html":{}}}],["if(!datecontrol",{"_index":219,"title":{},"body":{"components/AddComponent-1.html":{}}}],["if(!this.isopen",{"_index":517,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["if(!this.tournament",{"_index":624,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(!value",{"_index":1494,"title":{},"body":{"pipes/ToDatePipe.html":{}}}],["if($event.page",{"_index":1068,"title":{},"body":{"components/IndexComponent.html":{}}}],["if(array.isarray(obj[key",{"_index":957,"title":{},"body":{"classes/HttpUtils.html":{}}}],["if(component.fg?.dirty",{"_index":789,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["if(control.value",{"_index":544,"title":{},"body":{"classes/CompareValidators.html":{}}}],["if(datecontrol.value.gettime",{"_index":227,"title":{},"body":{"components/AddComponent-1.html":{}}}],["if(emptyline",{"_index":660,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["if(id",{"_index":1273,"title":{},"body":{"injectables/MemberService.html":{}}}],["if(item.children",{"_index":1345,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["if(this.fg.invalid",{"_index":84,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/LoginComponent.html":{}}}],["if(token",{"_index":1503,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["if(tournament.count",{"_index":617,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(window.innerwidth",{"_index":1326,"title":{},"body":{"components/MenuComponent.html":{}}}],["il",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{}}}],["import",{"_index":55,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{}}}],["import('./features/auth/auth.module').then(m",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./features/home/home.module').then(m",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./features/member/member.module').then(m",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./features/tournament/tournament.module').then(m",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["impossible",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["in_progress",{"_index":1719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"interfaces/SessionState.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.component.html",{"_index":989,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.scss",{"_index":988,"title":{},"body":{"components/IndexComponent.html":{}}}],["indexcomponent",{"_index":144,"title":{"components/IndexComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["infinite",{"_index":1174,"title":{},"body":{"components/LoaderComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{}}}],["inférieure",{"_index":748,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["inherited",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["initialstate",{"_index":1422,"title":{},"body":{"interfaces/SessionState.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":457,"title":{"injectables/AuthService.html":{},"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/MenuService.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/MenuService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["injectables",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/MenuService.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"overview.html":{}}}],["inline",{"_index":1165,"title":{},"body":{"components/LoaderComponent.html":{}}}],["inprogress",{"_index":1720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inprogresscomponent",{"_index":145,"title":{"components/InProgressComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":513,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/FormErrorComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuLinkComponent.html":{}}}],["inputnumber",{"_index":112,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["inputnumbermodule",{"_index":1439,"title":{},"body":{"modules/SharedModule.html":{}}}],["inputs",{"_index":500,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/FormErrorComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuLinkComponent.html":{}}}],["inputswitchmodule",{"_index":1443,"title":{},"body":{"modules/SharedModule.html":{}}}],["inputtextareamodule",{"_index":1441,"title":{},"body":{"modules/SharedModule.html":{}}}],["inputtextmodule",{"_index":1437,"title":{},"body":{"modules/SharedModule.html":{}}}],["inscriptions",{"_index":237,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["inscriptionservice",{"_index":1004,"title":{"injectables/InscriptionService.html":{}},"body":{"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"coverage.html":{}}}],["inscrit",{"_index":1080,"title":{},"body":{"components/IndexComponent.html":{}}}],["install",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{}}}],["installer",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{}}}],["instanceof",{"_index":1325,"title":{},"body":{"components/MenuComponent.html":{}}}],["intercept",{"_index":668,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":671,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":665,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":666,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":808,"title":{"interfaces/HasForm.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"interfaces/MatchModel.html":{},"interfaces/MenuItem.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"interfaces/TournamentState.html":{},"interfaces/UserModel.html":{}},"body":{"interfaces/HasForm.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"interfaces/MatchModel.html":{},"interfaces/MenuItem.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"interfaces/TournamentState.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":809,"title":{},"body":{"interfaces/HasForm.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"interfaces/MatchModel.html":{},"interfaces/MenuItem.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"interfaces/TournamentState.html":{},"interfaces/UserModel.html":{},"overview.html":{}}}],["interfaces/has",{"_index":788,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["interfaces/menu",{"_index":1312,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["introuvable",{"_index":696,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["invalide",{"_index":240,"title":{},"body":{"components/AddComponent-1.html":{}}}],["invalidendofregistrationdate",{"_index":182,"title":{},"body":{"components/AddComponent-1.html":{}}}],["isadmin",{"_index":992,"title":{},"body":{"components/IndexComponent.html":{}}}],["isadminguard",{"_index":1116,"title":{"guards/IsAdminGuard.html":{}},"body":{"guards/IsAdminGuard.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{}}}],["isloading",{"_index":23,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{}}}],["isloading:boolean",{"_index":1153,"title":{},"body":{"components/LoaderComponent.html":{}}}],["islogged",{"_index":817,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["isloggedguard",{"_index":1127,"title":{"guards/IsLoggedGuard.html":{}},"body":{"guards/IsLoggedGuard.html":{},"modules/MemberRoutingModule.html":{},"coverage.html":{}}}],["isnotloggedguard",{"_index":450,"title":{"guards/IsNotLoggedGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/IsNotLoggedGuard.html":{},"coverage.html":{}}}],["isopen",{"_index":501,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/MenuButtonComponent.html":{},"injectables/MenuService.html":{}}}],["isregistered",{"_index":1394,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{}}}],["item",{"_index":958,"title":{},"body":{"classes/HttpUtils.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["item+1",{"_index":623,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.count}}/{{item.maxplayers",{"_index":1104,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.defeats",{"_index":639,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.draws",{"_index":640,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.elomax??3000",{"_index":1101,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.elomin??0",{"_index":1100,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.endofregistrationdate|todate|date",{"_index":1103,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.location",{"_index":1099,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.matchplayed",{"_index":637,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.name",{"_index":1098,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.open",{"_index":1346,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["item.position",{"_index":635,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.score",{"_index":641,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.status|statustostring",{"_index":1102,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.title",{"_index":1347,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["item.ts",{"_index":1334,"title":{},"body":{"interfaces/MenuItem.html":{},"coverage.html":{}}}],["item.username",{"_index":636,"title":{},"body":{"components/DetailsComponent.html":{}}}],["item.wins",{"_index":638,"title":{},"body":{"components/DetailsComponent.html":{}}}],["items",{"_index":717,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["j'ai",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{}}}],["j\\'ai",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{}}}],["john",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["joueurs",{"_index":210,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["junior",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["justify",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuLinkComponent.html":{}}}],["key",{"_index":956,"title":{},"body":{"classes/HttpUtils.html":{}}}],["keyframes",{"_index":1156,"title":{},"body":{"components/LoaderComponent.html":{}}}],["keyof",{"_index":663,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["keys",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["l'api",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{}}}],["l'on",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{}}}],["l\\'adresse",{"_index":693,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["l\\'api",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{}}}],["l\\'on",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{}}}],["la",{"_index":238,"title":{},"body":{"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormErrorComponent.html":{},"components/HomeComponent.html":{}}}],["label",{"_index":604,"title":{},"body":{"components/DetailsComponent.html":{}}}],["labo",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["lancer",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout/layout.module",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/services/menu.service",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["layoutmodule",{"_index":328,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["lds",{"_index":1157,"title":{},"body":{"components/LoaderComponent.html":{}}}],["le",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["left",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["legend",{"_index":117,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["les",{"_index":800,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/HomeComponent.html":{}}}],["li",{"_index":1355,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["li[app",{"_index":159,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["lieu",{"_index":230,"title":{},"body":{"components/AddComponent-1.html":{}}}],["linear",{"_index":1173,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{}}}],["link",{"_index":1316,"title":{},"body":{"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["link.component",{"_index":1145,"title":{},"body":{"modules/LayoutModule.html":{}}}],["link.component.html",{"_index":1339,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.scss",{"_index":1338,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts",{"_index":1337,"title":{},"body":{"components/MenuLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:13",{"_index":1341,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:19",{"_index":1342,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:22",{"_index":1344,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link/menu",{"_index":1144,"title":{},"body":{"modules/LayoutModule.html":{},"components/MenuLinkComponent.html":{},"coverage.html":{}}}],["link]'},{'name",{"_index":160,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["list",{"_index":1331,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["literal",{"_index":587,"title":{},"body":{"components/DetailsComponent.html":{}}}],["load",{"_index":1553,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1147,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":148,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["loader.component.html",{"_index":1149,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1148,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":147,"title":{"components/LoaderComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingreducer",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadingstart",{"_index":1044,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadingstate",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["loadingstop",{"_index":678,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadselectedtournament",{"_index":1552,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadselectedtournament({tournament",{"_index":1534,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["localstorage",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["localstoragesyncreducer",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localstoragesyncreducer(reducer",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["location",{"_index":1095,"title":{},"body":{"components/IndexComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["logged.guard",{"_index":452,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/MemberRoutingModule.html":{}}}],["logged.guard.ts",{"_index":1128,"title":{},"body":{"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"coverage.html":{}}}],["logged.guard.ts:10",{"_index":1131,"title":{},"body":{"guards/IsNotLoggedGuard.html":{}}}],["logged.guard.ts:11",{"_index":1129,"title":{},"body":{"guards/IsLoggedGuard.html":{}}}],["logged.guard.ts:15",{"_index":1132,"title":{},"body":{"guards/IsNotLoggedGuard.html":{}}}],["logged.guard.ts:17",{"_index":1130,"title":{},"body":{"guards/IsLoggedGuard.html":{}}}],["login",{"_index":454,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{}}}],["login(model",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":149,"title":{"components/LoginComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginmodel",{"_index":466,"title":{"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"coverage.html":{}}}],["logonly",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":818,"title":{},"body":{"components/HeaderComponent.html":{}}}],["longeur",{"_index":739,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["lorsque",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{}}}],["lément",{"_index":1074,"title":{},"body":{"components/IndexComponent.html":{}}}],["m.authmodule",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.blackid",{"_index":1574,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["m.homemodule",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.membermodule",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.result",{"_index":1568,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["m.round",{"_index":1411,"title":{},"body":{"pipes/RoundFilterPipe.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["m.tournamentmodule",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.whiteid",{"_index":1577,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["male",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["map",{"_index":426,"title":{},"body":{"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"guards/IsAdminGuard.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["map(({token",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(({total",{"_index":1639,"title":{},"body":{"injectables/TournamentService.html":{}}}],["map(tournament",{"_index":1533,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["margin",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["match",{"_index":1198,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{}}}],["match'},{'name",{"_index":151,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["match(v",{"_index":1222,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.blackname",{"_index":1227,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1200,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.scss",{"_index":1199,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.model",{"_index":1383,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{}}}],["match.result).pipe",{"_index":1526,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["match.tournamentid",{"_index":1528,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["match.whitename",{"_index":1225,"title":{},"body":{"components/MatchComponent.html":{}}}],["matchcomponent",{"_index":150,"title":{"components/MatchComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{},"overview.html":{}}}],["matches",{"_index":1398,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/TournamentDetailsModel.html":{}}}],["matches?.filter(m",{"_index":1410,"title":{},"body":{"pipes/RoundFilterPipe.html":{}}}],["matching",{"_index":167,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchmodel",{"_index":1207,"title":{"interfaces/MatchModel.html":{}},"body":{"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"interfaces/PlayerScoreModel.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["matchplayed",{"_index":1381,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["matchservice",{"_index":1236,"title":{"injectables/MatchService.html":{}},"body":{"injectables/MatchService.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["max",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["maxage",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["maximale",{"_index":742,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["maximum",{"_index":233,"title":{},"body":{"components/AddComponent-1.html":{}}}],["maxplayercontrol",{"_index":206,"title":{},"body":{"components/AddComponent-1.html":{}}}],["maxplayercontrol?.addvalidators(comparevalidators.greaterorequalthan(minplayercontrol",{"_index":208,"title":{},"body":{"components/AddComponent-1.html":{}}}],["maxplayercontrol?.updatevalueandvalidity",{"_index":213,"title":{},"body":{"components/AddComponent-1.html":{}}}],["maxplayers",{"_index":1385,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["member",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MemberModule.html":{},"injectables/MemberService.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["member.component",{"_index":1252,"title":{},"body":{"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{}}}],["member/existsemail",{"_index":1278,"title":{},"body":{"injectables/MemberService.html":{}}}],["member/existsusername",{"_index":1276,"title":{},"body":{"injectables/MemberService.html":{}}}],["membercomponent",{"_index":152,"title":{"components/MemberComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["membermodule",{"_index":1246,"title":{"modules/MemberModule.html":{}},"body":{"modules/MemberModule.html":{},"modules.html":{},"overview.html":{}}}],["memberroutingmodule",{"_index":1250,"title":{"modules/MemberRoutingModule.html":{}},"body":{"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["members",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{}}}],["memberservice",{"_index":35,"title":{"injectables/MemberService.html":{}},"body":{"components/AddComponent.html":{},"injectables/MemberService.html":{},"coverage.html":{}}}],["membre",{"_index":102,"title":{},"body":{"components/AddComponent.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":154,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["menu'},{'name",{"_index":157,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["menu.component.html",{"_index":1305,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1304,"title":{},"body":{"components/MenuComponent.html":{}}}],["menubuttoncomponent",{"_index":153,"title":{"components/MenuButtonComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menucomponent",{"_index":156,"title":{"components/MenuComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuitem",{"_index":1308,"title":{"interfaces/MenuItem.html":{}},"body":{"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menulinkcomponent",{"_index":158,"title":{"components/MenuLinkComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuopen",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["menuservice",{"_index":254,"title":{"injectables/MenuService.html":{}},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["mergemap",{"_index":1043,"title":{},"body":{"components/IndexComponent.html":{}}}],["message",{"_index":792,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["messageservice",{"_index":33,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"components/TournamentComponent.html":{}}}],["metareducer",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["metareducers",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"injectables/TournamentService.html":{}}}],["min",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["minimale",{"_index":740,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["minimum",{"_index":201,"title":{},"body":{"components/AddComponent-1.html":{}}}],["minimums",{"_index":211,"title":{},"body":{"components/AddComponent-1.html":{}}}],["minplayercontrol",{"_index":204,"title":{},"body":{"components/AddComponent-1.html":{}}}],["minplayercontrol?.valuechanges.subscribe",{"_index":212,"title":{},"body":{"components/AddComponent-1.html":{}}}],["minplayers",{"_index":1384,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"miscellaneous/variables.html":{}}}],["minplayerscontrol",{"_index":217,"title":{},"body":{"components/AddComponent-1.html":{}}}],["minplayerscontrol.value",{"_index":221,"title":{},"body":{"components/AddComponent-1.html":{}}}],["miscellaneous",{"_index":1692,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["moche",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{}}}],["model",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["model).pipe",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/login.model",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/match.model",{"_index":1219,"title":{},"body":{"components/MatchComponent.html":{},"pipes/RoundFilterPipe.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["models/token.model",{"_index":1419,"title":{},"body":{"interfaces/SessionState.html":{}}}],["models/tournament",{"_index":595,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["models/tournament.model",{"_index":1050,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentService.html":{}}}],["models/user.model",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":313,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":315,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moins",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["mr",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["multi",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["multiselectmodule",{"_index":1461,"title":{},"body":{"modules/SharedModule.html":{}}}],["n",{"_index":633,"title":{},"body":{"components/DetailsComponent.html":{}}}],["n'est",{"_index":754,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["n'oubliez",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{}}}],["n\\'est",{"_index":767,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["n\\'oubliez",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{}}}],["naissance",{"_index":109,"title":{},"body":{"components/AddComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":1309,"title":{},"body":{"components/MenuComponent.html":{}}}],["ne",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["need",{"_index":223,"title":{},"body":{"components/AddComponent-1.html":{}}}],["new",{"_index":224,"title":{},"body":{"components/AddComponent-1.html":{},"components/AppComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"pipes/ToDatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":89,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(clone",{"_index":1508,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":1509,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":680,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextround",{"_index":1620,"title":{},"body":{"injectables/TournamentService.html":{}}}],["nextround(id",{"_index":1630,"title":{},"body":{"injectables/TournamentService.html":{}}}],["nextstate",{"_index":783,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["ng",{"_index":115,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/HomeComponent.html":{}}}],["ngafterviewchecked",{"_index":997,"title":{},"body":{"components/IndexComponent.html":{}}}],["ngafterviewinit",{"_index":498,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["ngmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["ngondestroy",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["ngrx",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/DetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuComponent.html":{},"interfaces/SessionState.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentState.html":{},"dependencies.html":{}}}],["nom",{"_index":229,"title":{},"body":{"components/AddComponent-1.html":{},"components/DetailsComponent.html":{},"components/IndexComponent.html":{}}}],["nombre",{"_index":209,"title":{},"body":{"components/AddComponent-1.html":{}}}],["non",{"_index":801,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["none",{"_index":847,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["not_played",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notbefore",{"_index":550,"title":{},"body":{"classes/DateValidators.html":{}}}],["notbefore(date",{"_index":551,"title":{},"body":{"classes/DateValidators.html":{}}}],["notplayed",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nouveau",{"_index":101,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["nth",{"_index":1294,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["null",{"_index":222,"title":{},"body":{"components/AddComponent-1.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"components/FormErrorComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"components/LoginComponent.html":{},"injectables/MemberService.html":{},"pipes/ToDatePipe.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":511,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"interfaces/PlayerScoreModel.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"interfaces/TournamentState.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["number|null",{"_index":1387,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{}}}],["o",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{}}}],["obj",{"_index":949,"title":{},"body":{"classes/HttpUtils.html":{}}}],["obj[key",{"_index":959,"title":{},"body":{"classes/HttpUtils.html":{}}}],["object",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this.fg.controls).foreach((key",{"_index":82,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/LoginComponent.html":{}}}],["object.keys(value).map(v",{"_index":661,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["object.values(xhr.error.errors).join",{"_index":688,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":427,"title":{},"body":{"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"injectables/MemberService.html":{},"injectables/MenuService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentService.html":{}}}],["observable.pipe",{"_index":1085,"title":{},"body":{"components/IndexComponent.html":{}}}],["observables",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{}}}],["of(null",{"_index":430,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["offset",{"_index":1030,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentSearchModel.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["oftype",{"_index":1544,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["oftype(changeresult",{"_index":1523,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["oftype(selecttournament",{"_index":1530,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["oftype(starttournament",{"_index":1538,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["oftype(validateroundresults",{"_index":1541,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["on(changecriteria",{"_index":1556,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["on(changepage",{"_index":1558,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["on(changetab",{"_index":1562,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["on(loadingstart",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadingstop",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadselectedtournament",{"_index":1559,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["on(sessionstart",{"_index":1423,"title":{},"body":{"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["on(sessionstop",{"_index":1424,"title":{},"body":{"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":1216,"title":{},"body":{"components/MatchComponent.html":{}}}],["onclick",{"_index":1284,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["ondestroy",{"_index":554,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["onsubmit",{"_index":26,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/LoginComponent.html":{}}}],["ontabchange",{"_index":571,"title":{},"body":{"components/DetailsComponent.html":{}}}],["opacity",{"_index":1300,"title":{},"body":{"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1335,"title":{},"body":{"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"interfaces/PlayerScoreModel.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["other.value",{"_index":545,"title":{},"body":{"classes/CompareValidators.html":{}}}],["other?.value",{"_index":543,"title":{},"body":{"classes/CompareValidators.html":{}}}],["ou",{"_index":759,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["out",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["overflow",{"_index":1356,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["overview",{"_index":1730,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":111,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["p.id",{"_index":1575,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["p1.draws",{"_index":1588,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["p1.wins",{"_index":1587,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["p2",{"_index":1583,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["p2.draws",{"_index":1585,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["p2.wins",{"_index":1584,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1677,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{}}}],["page",{"_index":798,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["pages/add/add.component",{"_index":1253,"title":{},"body":{"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["pages/details/details.component",{"_index":1610,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["pages/edit/edit.component",{"_index":1607,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["pages/index/index.component",{"_index":1606,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["pages/login/login.component",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/profile/profile.component",{"_index":1254,"title":{},"body":{"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{}}}],["paginate",{"_index":998,"title":{},"body":{"components/IndexComponent.html":{}}}],["paginate($event",{"_index":1014,"title":{},"body":{"components/IndexComponent.html":{}}}],["paginator",{"_index":1025,"title":{},"body":{"components/IndexComponent.html":{}}}],["paginatormodule",{"_index":1458,"title":{},"body":{"modules/SharedModule.html":{}}}],["panel",{"_index":494,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel'},{'name",{"_index":134,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["panel.component",{"_index":1476,"title":{},"body":{"modules/SharedModule.html":{}}}],["panel.component.html",{"_index":496,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.scss",{"_index":495,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.ts",{"_index":492,"title":{},"body":{"components/CollapsePanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:11",{"_index":503,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.ts:14",{"_index":510,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":502,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.ts:20",{"_index":504,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.ts:28",{"_index":505,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":506,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["panel/collapse",{"_index":491,"title":{},"body":{"components/CollapsePanelComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":954,"title":{},"body":{"classes/HttpUtils.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["params.append('email",{"_index":1277,"title":{},"body":{"injectables/MemberService.html":{}}}],["params.append('id",{"_index":1274,"title":{},"body":{"injectables/MemberService.html":{}}}],["params.append('username",{"_index":1272,"title":{},"body":{"injectables/MemberService.html":{}}}],["params.append(key",{"_index":960,"title":{},"body":{"classes/HttpUtils.html":{}}}],["params}).pipe",{"_index":1638,"title":{},"body":{"injectables/TournamentService.html":{}}}],["parent",{"_index":557,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["parseint(headers.get('x",{"_index":961,"title":{},"body":{"classes/HttpUtils.html":{}}}],["pas",{"_index":755,"title":{},"body":{"components/FormErrorComponent.html":{},"components/HomeComponent.html":{}}}],["password",{"_index":130,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["path",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["pathmatch",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["perdues",{"_index":803,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["pi:nth",{"_index":978,"title":{},"body":{"components/InProgressComponent.html":{}}}],["pipe",{"_index":649,"title":{"pipes/EnumToArrayPipe.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{}},"body":{"pipes/EnumToArrayPipe.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"coverage.html":{}}}],["pipe(map(r",{"_index":1125,"title":{},"body":{"guards/IsAdminGuard.html":{}}}],["pipe(takeuntil(this.destroyed",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{}}}],["pipes",{"_index":651,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"components/HomeComponent.html":{},"pipes/RoundFilterPipe.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"overview.html":{}}}],["pipes/enum",{"_index":1473,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/round",{"_index":1612,"title":{},"body":{"modules/TournamentModule.html":{}}}],["pipes/status",{"_index":1608,"title":{},"body":{"modules/TournamentModule.html":{}}}],["pipes/to",{"_index":1456,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":659,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{}}}],["player",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["players",{"_index":1397,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["playerscoremodel",{"_index":1376,"title":{"interfaces/PlayerScoreModel.html":{}},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"coverage.html":{}}}],["pointer",{"_index":1351,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["points",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{}}}],["position",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"miscellaneous/variables.html":{}}}],["pour",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["pouvez",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["prev",{"_index":1573,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["prev[prev.length",{"_index":1593,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["primeflex",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":59,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["primeicons.calendar",{"_index":1321,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["primeicons.check_circle",{"_index":95,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["primeicons.exclamation_triangle",{"_index":686,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["primeicons.home",{"_index":1317,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["primeicons.info_circle",{"_index":832,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["primeicons.list",{"_index":1319,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["primeicons.times_circle",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["primeicons.user_plus",{"_index":1322,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["primeng",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["primeng/api",{"_index":60,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["primeng/button",{"_index":1435,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/calendar",{"_index":1464,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/card",{"_index":1433,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/chip",{"_index":1455,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/confirmdialog",{"_index":1448,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/dialog",{"_index":1446,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/dropdown",{"_index":1460,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/inputnumber",{"_index":1440,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/inputswitch",{"_index":1444,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/inputtext",{"_index":1438,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/inputtextarea",{"_index":1442,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/multiselect",{"_index":1462,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/paginator",{"_index":1041,"title":{},"body":{"components/IndexComponent.html":{},"modules/SharedModule.html":{}}}],["primeng/slider",{"_index":1466,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/steps",{"_index":1470,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/table",{"_index":1418,"title":{},"body":{"interfaces/SessionState.html":{},"modules/SharedModule.html":{}}}],["primeng/toast",{"_index":1450,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/tooltip",{"_index":1468,"title":{},"body":{"modules/SharedModule.html":{}}}],["private",{"_index":71,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["production",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1260,"title":{},"body":{"modules/MemberRoutingModule.html":{}}}],["profile.component.html",{"_index":1401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1400,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":161,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["progress",{"_index":966,"title":{},"body":{"components/InProgressComponent.html":{}}}],["progress'},{'name",{"_index":146,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["progress.component",{"_index":1472,"title":{},"body":{"modules/SharedModule.html":{}}}],["progress.component.html",{"_index":968,"title":{},"body":{"components/InProgressComponent.html":{}}}],["progress.component.scss",{"_index":967,"title":{},"body":{"components/InProgressComponent.html":{}}}],["progress.component.ts",{"_index":965,"title":{},"body":{"components/InProgressComponent.html":{},"coverage.html":{}}}],["progress.component.ts:12",{"_index":970,"title":{},"body":{"components/InProgressComponent.html":{}}}],["progress.component.ts:8",{"_index":969,"title":{},"body":{"components/InProgressComponent.html":{}}}],["progress/in",{"_index":964,"title":{},"body":{"components/InProgressComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["projet",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["promise",{"_index":786,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["promise(resolve",{"_index":790,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"interfaces/TournamentState.html":{},"interfaces/UserModel.html":{},"properties.html":{}}}],["propname",{"_index":535,"title":{},"body":{"classes/CompareValidators.html":{}}}],["props",{"_index":1416,"title":{},"body":{"interfaces/SessionState.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["provide",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"guards/FormSubmittedGuard.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/MenuService.html":{},"injectables/TournamentService.html":{}}}],["providers",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["pseudo",{"_index":103,"title":{},"body":{"components/AddComponent.html":{}}}],["px",{"_index":521,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["que",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["query(':enter",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query(':leave",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quitter",{"_index":797,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["r",{"_index":1126,"title":{},"body":{"guards/IsAdminGuard.html":{}}}],["radius",{"_index":527,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/LoaderComponent.html":{}}}],["reactiveformsmodule",{"_index":1431,"title":{},"body":{"modules/SharedModule.html":{}}}],["readonly",{"_index":72,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["redirectto",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["reduce((prev",{"_index":1579,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["reducer",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["register",{"_index":999,"title":{},"body":{"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"injectables/MemberService.html":{}}}],["register(form",{"_index":1270,"title":{},"body":{"injectables/MemberService.html":{}}}],["register(id",{"_index":1109,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["register(tournament",{"_index":1017,"title":{},"body":{"components/IndexComponent.html":{}}}],["registerform",{"_index":66,"title":{},"body":{"components/AddComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rehydrate",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":806,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["relative",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["reload",{"_index":1000,"title":{},"body":{"components/IndexComponent.html":{}}}],["reload(response",{"_index":1019,"title":{},"body":{"components/IndexComponent.html":{}}}],["rendre",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["reprend",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["request",{"_index":675,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["request.clone({setheaders",{"_index":1505,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requis",{"_index":735,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["reset",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resolve(false",{"_index":807,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["resolve(true",{"_index":805,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["resolvers",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["response",{"_index":1021,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["response.criteria",{"_index":1092,"title":{},"body":{"components/IndexComponent.html":{}}}],["response.total",{"_index":1090,"title":{},"body":{"components/IndexComponent.html":{}}}],["response.tournaments",{"_index":1088,"title":{},"body":{"components/IndexComponent.html":{}}}],["response.username",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{}}}],["result",{"_index":1231,"title":{},"body":{"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["resultenum",{"_index":1202,"title":{},"body":{"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/enumerations.html":{}}}],["resultenum.black_win",{"_index":1576,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["resultenum.draw",{"_index":1581,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["resultenum.not_played",{"_index":1569,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["resultenum.white_win",{"_index":1578,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":166,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":85,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"modules/AppModule.html":{},"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"components/TournamentComponent.html":{},"injectables/TournamentService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0,0,0,.5",{"_index":1164,"title":{},"body":{"components/LoaderComponent.html":{}}}],["right",{"_index":1353,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["ring",{"_index":1159,"title":{},"body":{"components/LoaderComponent.html":{}}}],["role",{"_index":566,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MenuComponent.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["roleenum",{"_index":567,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"components/MenuComponent.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"miscellaneous/enumerations.html":{}}}],["roleenum.admin",{"_index":1061,"title":{},"body":{"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"components/MenuComponent.html":{}}}],["root",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"guards/FormSubmittedGuard.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/MenuService.html":{},"injectables/TournamentService.html":{}}}],["root'},{'name",{"_index":126,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["rotate",{"_index":1301,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["rotate(0deg",{"_index":1160,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rotate(180deg",{"_index":1297,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["rotate(360deg",{"_index":1161,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rotate(45deg",{"_index":1299,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["round",{"_index":1232,"title":{},"body":{"interfaces/MatchModel.html":{},"pipes/RoundFilterPipe.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["round).every(m",{"_index":1567,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["roundfilter",{"_index":1407,"title":{},"body":{"pipes/RoundFilterPipe.html":{}}}],["roundfilterpipe",{"_index":1404,"title":{"pipes/RoundFilterPipe.html":{}},"body":{"pipes/RoundFilterPipe.html":{},"modules/TournamentModule.html":{},"coverage.html":{},"overview.html":{}}}],["route",{"_index":1122,"title":{},"body":{"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["routermodule",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":456,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":782,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["routes",{"_index":396,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing.module",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/MemberModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["rowtoggler",{"_index":1417,"title":{},"body":{"interfaces/SessionState.html":{}}}],["rxjs",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"guards/FormSubmittedGuard.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":428,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["réserv",{"_index":241,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["sarah",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["sauvegardées",{"_index":98,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"guards/FormSubmittedGuard.html":{}}}],["save",{"_index":572,"title":{},"body":{"components/DetailsComponent.html":{}}}],["score",{"_index":634,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{}}}],["screen",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["se",{"_index":835,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":1001,"title":{},"body":{"components/IndexComponent.html":{}}}],["search.form",{"_index":1048,"title":{},"body":{"components/IndexComponent.html":{}}}],["search.form.ts",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.model",{"_index":1049,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{}}}],["search.model.ts",{"_index":1616,"title":{},"body":{"interfaces/TournamentSearchModel.html":{},"coverage.html":{}}}],["searchcriteria",{"_index":1548,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":1551,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1554,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["selectedtab",{"_index":568,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["selectedtournament",{"_index":1549,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":123,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["selecttournament",{"_index":598,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttournament({id",{"_index":1527,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["senior",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seront",{"_index":802,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["serve",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{}}}],["serveur",{"_index":702,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["services",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/auth.service",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/inscription.service",{"_index":1051,"title":{},"body":{"components/IndexComponent.html":{}}}],["services/match.service",{"_index":1547,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["services/member.service",{"_index":68,"title":{},"body":{"components/AddComponent.html":{}}}],["services/menu.service",{"_index":1288,"title":{},"body":{"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["services/tournament.service",{"_index":192,"title":{},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["sessionreducer",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SessionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionstart",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/SessionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionstate",{"_index":375,"title":{"interfaces/SessionState.html":{}},"body":{"modules/AppModule.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/MenuComponent.html":{},"interfaces/SessionState.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["sessionstop",{"_index":825,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/SessionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1221,"title":{},"body":{"components/MatchComponent.html":{}}}],["setmatch(v",{"_index":1215,"title":{},"body":{"components/MatchComponent.html":{}}}],["severity",{"_index":92,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["shared/animations/fade.animation",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/destroyed.component",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/shared.module",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["sharedmodule",{"_index":329,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["simplechanges",{"_index":1217,"title":{},"body":{"components/MatchComponent.html":{}}}],["size",{"_index":843,"title":{},"body":{"components/HeaderComponent.html":{},"components/InProgressComponent.html":{},"components/MenuButtonComponent.html":{}}}],["size}/5",{"_index":1293,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["size}/5*2",{"_index":1296,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["slidermodule",{"_index":1465,"title":{},"body":{"modules/SharedModule.html":{}}}],["smallprop",{"_index":546,"title":{},"body":{"classes/CompareValidators.html":{}}}],["solid",{"_index":530,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/LoaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["sont",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{}}}],["sort((p1",{"_index":1582,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"modules/CoreModule.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"classes/HttpUtils.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/LayoutModule.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"components/MemberComponent.html":{},"modules/MemberModule.html":{},"modules/MemberRoutingModule.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"components/ProfileComponent.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"modules/SharedModule.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"components/TournamentComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"modules/TournamentsRoutingModule.html":{},"interfaces/UserModel.html":{}}}],["space",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuLinkComponent.html":{}}}],["src/.../app.module.ts",{"_index":1722,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../category.enum.ts",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fade.animation.ts",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.enum.ts",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../loading.reducer.ts",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.component.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.form.ts",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../result.enum.ts",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.enum.ts",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../session.reducer.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tournament",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.form.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.reducers.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":547,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/enums/role.enum",{"_index":591,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MenuComponent.html":{}}}],["src/app/core/enums/role.enum.ts",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/guards/form",{"_index":772,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{}}}],["src/app/core/guards/is",{"_index":451,"title":{},"body":{"modules/AuthRoutingModule.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":667,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:14",{"_index":670,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:21",{"_index":674,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/token.interceptor.ts",{"_index":1496,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/token.interceptor.ts:13",{"_index":1497,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/core/interceptors/token.interceptor.ts:19",{"_index":1498,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/core/interfaces/has",{"_index":61,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/EditComponent.html":{},"interfaces/HasForm.html":{},"coverage.html":{}}}],["src/app/core/models/login.model.ts",{"_index":1195,"title":{},"body":{"interfaces/LoginModel.html":{},"coverage.html":{}}}],["src/app/core/models/token.model",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/models/token.model.ts",{"_index":1510,"title":{},"body":{"interfaces/TokenModel.html":{},"coverage.html":{}}}],["src/app/core/states/loading.reducer",{"_index":1045,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["src/app/core/states/loading.reducer.ts",{"_index":1656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/states/session.reducer",{"_index":592,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["src/app/core/states/session.reducer.ts",{"_index":1412,"title":{},"body":{"interfaces/SessionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/http.utils",{"_index":1634,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/core/utils/http.utils.ts",{"_index":944,"title":{},"body":{"classes/HttpUtils.html":{},"coverage.html":{}}}],["src/app/core/utils/http.utils.ts:18",{"_index":952,"title":{},"body":{"classes/HttpUtils.html":{}}}],["src/app/core/utils/http.utils.ts:4",{"_index":948,"title":{},"body":{"classes/HttpUtils.html":{}}}],["src/app/core/validators/async.validators",{"_index":64,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/core/validators/async.validators.ts",{"_index":416,"title":{},"body":{"classes/AsyncValidators.html":{},"coverage.html":{}}}],["src/app/core/validators/async.validators.ts:6",{"_index":422,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["src/app/core/validators/compare.validators",{"_index":188,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/core/validators/compare.validators.ts",{"_index":532,"title":{},"body":{"classes/CompareValidators.html":{},"coverage.html":{}}}],["src/app/core/validators/compare.validators.ts:4",{"_index":537,"title":{},"body":{"classes/CompareValidators.html":{}}}],["src/app/core/validators/date.validators.ts",{"_index":549,"title":{},"body":{"classes/DateValidators.html":{},"coverage.html":{}}}],["src/app/core/validators/date.validators.ts:4",{"_index":552,"title":{},"body":{"classes/DateValidators.html":{}}}],["src/app/features/auth/auth",{"_index":449,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":434,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/auth.component.ts:10",{"_index":435,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/auth.component.ts:14",{"_index":436,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/auth.module.ts",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/features/auth/models/login.model.ts",{"_index":1196,"title":{},"body":{"interfaces/LoginModel-1.html":{},"coverage.html":{}}}],["src/app/features/auth/models/user.model.ts",{"_index":1643,"title":{},"body":{"interfaces/UserModel.html":{},"coverage.html":{}}}],["src/app/features/auth/pages/login/login.component.ts",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/pages/login/login.component.ts:15",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/pages/login/login.component.ts:16",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/pages/login/login.component.ts:26",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/pages/login/login.component.ts:33",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/services/auth.service.ts",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/features/auth/services/auth.service.ts:12",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:18",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/home/home",{"_index":942,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/features/home/home.component.ts",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:13",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:9",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.module.ts",{"_index":940,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/features/member/components/change",{"_index":481,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{},"coverage.html":{}}}],["src/app/features/member/enums/gender.enum.ts",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/features/member/forms/register.form.ts",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/member/member",{"_index":1257,"title":{},"body":{"modules/MemberRoutingModule.html":{}}}],["src/app/features/member/member.component.ts",{"_index":1243,"title":{},"body":{"components/MemberComponent.html":{},"coverage.html":{}}}],["src/app/features/member/member.component.ts:10",{"_index":1244,"title":{},"body":{"components/MemberComponent.html":{}}}],["src/app/features/member/member.component.ts:14",{"_index":1245,"title":{},"body":{"components/MemberComponent.html":{}}}],["src/app/features/member/member.module.ts",{"_index":1251,"title":{},"body":{"modules/MemberModule.html":{}}}],["src/app/features/member/pages/add/add.component.ts",{"_index":10,"title":{},"body":{"components/AddComponent.html":{},"coverage.html":{}}}],["src/app/features/member/pages/add/add.component.ts:17",{"_index":49,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/features/member/pages/add/add.component.ts:18",{"_index":54,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/features/member/pages/add/add.component.ts:19",{"_index":37,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/features/member/pages/add/add.component.ts:28",{"_index":44,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/features/member/pages/add/add.component.ts:35",{"_index":47,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/features/member/pages/profile/profile.component.ts",{"_index":1399,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/features/member/pages/profile/profile.component.ts:11",{"_index":1403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/member/pages/profile/profile.component.ts:7",{"_index":1402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/member/services/member.service.ts",{"_index":1262,"title":{},"body":{"injectables/MemberService.html":{},"coverage.html":{}}}],["src/app/features/member/services/member.service.ts:15",{"_index":1269,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/features/member/services/member.service.ts:24",{"_index":1267,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/features/member/services/member.service.ts:33",{"_index":1271,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/features/member/services/member.service.ts:9",{"_index":1265,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/features/tournament/components/match/match.component.ts",{"_index":1197,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:14",{"_index":1212,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:17",{"_index":1208,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:21",{"_index":1214,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:26",{"_index":1206,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:28",{"_index":1205,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:34",{"_index":1209,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/components/match/match.component.ts:38",{"_index":1211,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/features/tournament/enums/category.enum.ts",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/features/tournament/enums/result.enum.ts",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/features/tournament/enums/status.enum.ts",{"_index":1716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/features/tournament/forms/tournament",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/tournament/forms/tournament.form.ts",{"_index":1662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/tournament/models/match.model.ts",{"_index":1228,"title":{},"body":{"interfaces/MatchModel.html":{},"coverage.html":{}}}],["src/app/features/tournament/models/tournament",{"_index":1377,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentSearchModel.html":{},"coverage.html":{}}}],["src/app/features/tournament/models/tournament.model.ts",{"_index":1598,"title":{},"body":{"interfaces/TournamentModel.html":{},"coverage.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts",{"_index":169,"title":{},"body":{"components/AddComponent-1.html":{},"coverage.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts:17",{"_index":183,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts:18",{"_index":184,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts:19",{"_index":175,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts:28",{"_index":176,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts:44",{"_index":177,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/features/tournament/pages/add/add.component.ts:64",{"_index":180,"title":{},"body":{"components/AddComponent-1.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts",{"_index":563,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:18",{"_index":590,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:19",{"_index":585,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:20",{"_index":588,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:21",{"_index":583,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:22",{"_index":584,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:23",{"_index":586,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:24",{"_index":577,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:31",{"_index":579,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:59",{"_index":582,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:65",{"_index":581,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/details/details.component.ts:71",{"_index":580,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/tournament/pages/edit/edit.component.ts",{"_index":644,"title":{},"body":{"components/EditComponent.html":{},"coverage.html":{}}}],["src/app/features/tournament/pages/edit/edit.component.ts:11",{"_index":647,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/features/tournament/pages/edit/edit.component.ts:15",{"_index":648,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts",{"_index":986,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:106",{"_index":1022,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:110",{"_index":1011,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:125",{"_index":1020,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:27",{"_index":1038,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:29",{"_index":1027,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:31",{"_index":1039,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:32",{"_index":1034,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:33",{"_index":1040,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:34",{"_index":1036,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:35",{"_index":1028,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:37",{"_index":1035,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:38",{"_index":1005,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:49",{"_index":1012,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:54",{"_index":1013,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:73",{"_index":1015,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:80",{"_index":1008,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:92",{"_index":1018,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pages/index/index.component.ts:99",{"_index":1024,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/features/tournament/pipes/round",{"_index":1405,"title":{},"body":{"pipes/RoundFilterPipe.html":{},"coverage.html":{}}}],["src/app/features/tournament/pipes/status",{"_index":1478,"title":{},"body":{"pipes/StatusToStringPipe.html":{},"coverage.html":{}}}],["src/app/features/tournament/services/inscription.service.ts",{"_index":1105,"title":{},"body":{"injectables/InscriptionService.html":{},"coverage.html":{}}}],["src/app/features/tournament/services/inscription.service.ts:15",{"_index":1110,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/app/features/tournament/services/inscription.service.ts:19",{"_index":1112,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/app/features/tournament/services/inscription.service.ts:9",{"_index":1107,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/app/features/tournament/services/match.service.ts",{"_index":1237,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/features/tournament/services/match.service.ts:15",{"_index":1241,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/features/tournament/services/match.service.ts:9",{"_index":1239,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts",{"_index":1618,"title":{},"body":{"injectables/TournamentService.html":{},"coverage.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:14",{"_index":1621,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:20",{"_index":1627,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:31",{"_index":1629,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:35",{"_index":1623,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:39",{"_index":1625,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:43",{"_index":1633,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/services/tournament.service.ts:47",{"_index":1631,"title":{},"body":{"injectables/TournamentService.html":{}}}],["src/app/features/tournament/states/tournament.reducers.ts",{"_index":1515,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/tournament/states/tournament.reducers.ts:62",{"_index":1537,"title":{},"body":{"injectables/TournamentEffects.html":{}}}],["src/app/features/tournament/states/tournament.reducers.ts:72",{"_index":1540,"title":{},"body":{"injectables/TournamentEffects.html":{}}}],["src/app/features/tournament/states/tournament.reducers.ts:79",{"_index":1543,"title":{},"body":{"injectables/TournamentEffects.html":{}}}],["src/app/features/tournament/states/tournament.reducers.ts:86",{"_index":1529,"title":{},"body":{"injectables/TournamentEffects.html":{}}}],["src/app/features/tournament/states/tournament.reducers.ts:91",{"_index":1519,"title":{},"body":{"injectables/TournamentEffects.html":{}}}],["src/app/features/tournament/tournament",{"_index":1640,"title":{},"body":{"modules/TournamentsRoutingModule.html":{}}}],["src/app/features/tournament/tournament.component.ts",{"_index":1511,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/features/tournament/tournament.component.ts:10",{"_index":1512,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/features/tournament/tournament.component.ts:14",{"_index":1513,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/features/tournament/tournament.module.ts",{"_index":1604,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/layout/components/footer/footer.component.ts",{"_index":706,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/components/footer/footer.component.ts:12",{"_index":711,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layout/components/footer/footer.component.ts:8",{"_index":710,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layout/components/header/header.component.ts",{"_index":811,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layout/components/header/header.component.ts:17",{"_index":821,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/components/header/header.component.ts:26",{"_index":823,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/components/header/header.component.ts:35",{"_index":822,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/components/menu",{"_index":1279,"title":{},"body":{"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{},"coverage.html":{}}}],["src/app/layout/components/menu/menu.component.ts",{"_index":1303,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/layout/components/menu/menu.component.ts:34",{"_index":1306,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/layout/components/menu/menu.component.ts:42",{"_index":1307,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/layout/interfaces/menu",{"_index":1333,"title":{},"body":{"interfaces/MenuItem.html":{},"coverage.html":{}}}],["src/app/layout/layout.module.ts",{"_index":1137,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/app/layout/services/menu.service.ts",{"_index":1358,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/layout/services/menu.service.ts:11",{"_index":1369,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/layout/services/menu.service.ts:15",{"_index":1370,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/layout/services/menu.service.ts:17",{"_index":1361,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/layout/services/menu.service.ts:21",{"_index":1363,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/layout/services/menu.service.ts:25",{"_index":1362,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/layout/services/menu.service.ts:29",{"_index":1364,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/layout/services/menu.service.ts:9",{"_index":1367,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/shared/animations/fade.animation",{"_index":437,"title":{},"body":{"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/MemberComponent.html":{},"components/TournamentComponent.html":{}}}],["src/app/shared/animations/fade.animation.ts",{"_index":1670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/collapse",{"_index":490,"title":{},"body":{"components/CollapsePanelComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/destroyed.component",{"_index":593,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["src/app/shared/components/destroyed.component.ts",{"_index":553,"title":{},"body":{"directives/DestroyedComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/destroyed.component.ts:10",{"_index":555,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["src/app/shared/components/destroyed.component.ts:8",{"_index":556,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["src/app/shared/components/form",{"_index":719,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/in",{"_index":963,"title":{},"body":{"components/InProgressComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/loader/loader.component.ts",{"_index":1146,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/loader/loader.component.ts:14",{"_index":1150,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/components/loader/loader.component.ts:20",{"_index":1151,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/pipes/enum",{"_index":652,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/to",{"_index":1489,"title":{},"body":{"pipes/ToDatePipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/MemberModule.html":{},"modules/TournamentModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1429,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/InscriptionService.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":573,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/SessionState.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["start(id",{"_index":1632,"title":{},"body":{"injectables/TournamentService.html":{}}}],["started",{"_index":1724,"title":{"index.html":{}},"body":{}}],["startstate",{"_index":1672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["starttournament",{"_index":599,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":1546,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["startwith(loadingstart",{"_index":1535,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["state",{"_index":1120,"title":{},"body":{"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["state.loadingstate).pipe",{"_index":1154,"title":{},"body":{"components/LoaderComponent.html":{}}}],["state.searchcriteria",{"_index":1557,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["state.selectedtournament",{"_index":1564,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["state.sessionstate.islogged",{"_index":826,"title":{},"body":{"components/HeaderComponent.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["state.sessionstate.role",{"_index":608,"title":{},"body":{"components/DetailsComponent.html":{},"guards/IsAdminGuard.html":{}}}],["state.sessionstate.role).pipe",{"_index":1058,"title":{},"body":{"components/IndexComponent.html":{},"components/MenuComponent.html":{}}}],["state.sessionstate.token).pipe(first",{"_index":1501,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["state.tournamentfeature.tournamentstate.searchcriteria).pipe",{"_index":1062,"title":{},"body":{"components/IndexComponent.html":{}}}],["state.tournamentfeature.tournamentstate.selectedtab",{"_index":611,"title":{},"body":{"components/DetailsComponent.html":{}}}],["state.tournamentfeature.tournamentstate.selectedtournament",{"_index":614,"title":{},"body":{"components/DetailsComponent.html":{}}}],["statements",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["states/loading.reducer",{"_index":679,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["states/session.reducer",{"_index":1124,"title":{},"body":{"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["states/tournament.reducers",{"_index":602,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MatchComponent.html":{},"modules/TournamentModule.html":{}}}],["static",{"_index":417,"title":{},"body":{"classes/AsyncValidators.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"classes/HttpUtils.html":{}}}],["status",{"_index":1392,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{}}}],["statusenum",{"_index":569,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"interfaces/PlayerScoreModel.html":{},"pipes/StatusToStringPipe.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"miscellaneous/enumerations.html":{}}}],["statusenum.closed",{"_index":1487,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["statusenum.in_progress",{"_index":1485,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["statusenum.waiting_for_players",{"_index":1483,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["statuses",{"_index":1032,"title":{},"body":{"components/IndexComponent.html":{},"interfaces/TournamentSearchModel.html":{},"miscellaneous/variables.html":{}}}],["statustostring",{"_index":1480,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["statustostringpipe",{"_index":1477,"title":{"pipes/StatusToStringPipe.html":{}},"body":{"pipes/StatusToStringPipe.html":{},"modules/TournamentModule.html":{},"coverage.html":{},"overview.html":{}}}],["statut",{"_index":1097,"title":{},"body":{"components/IndexComponent.html":{}}}],["statuts",{"_index":1094,"title":{},"body":{"components/IndexComponent.html":{}}}],["steps",{"_index":570,"title":{},"body":{"components/DetailsComponent.html":{}}}],["stepsmodule",{"_index":1469,"title":{},"body":{"modules/SharedModule.html":{}}}],["stop",{"_index":1421,"title":{},"body":{"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"components/DetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"dependencies.html":{}}}],["storedevtoolsmodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/TournamentModule.html":{}}}],["storemodule.forfeature('tournamentfeature",{"_index":1614,"title":{},"body":{"modules/TournamentModule.html":{}}}],["storemodule.forroot",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["stores",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{}}}],["string",{"_index":536,"title":{},"body":{"classes/CompareValidators.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"interfaces/MatchModel.html":{},"injectables/MemberService.html":{},"interfaces/MenuItem.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/UserModel.html":{}}}],["string.pipe",{"_index":1609,"title":{},"body":{"modules/TournamentModule.html":{}}}],["string.pipe.ts",{"_index":1479,"title":{},"body":{"pipes/StatusToStringPipe.html":{},"coverage.html":{}}}],["string.pipe.ts:9",{"_index":1481,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["string|null",{"_index":540,"title":{},"body":{"classes/CompareValidators.html":{},"injectables/MemberService.html":{},"interfaces/TournamentSearchModel.html":{}}}],["string|string",{"_index":1336,"title":{},"body":{"interfaces/MenuItem.html":{}}}],["style",{"_index":1332,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["style(endstate",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style(startstate",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{}}}],["subject",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["submenu",{"_index":1354,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["submitted.guard",{"_index":1258,"title":{},"body":{"modules/MemberRoutingModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["submitted.guard.ts",{"_index":773,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"coverage.html":{}}}],["submitted.guard.ts:10",{"_index":776,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["submitted.guard.ts:16",{"_index":784,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["subscribe",{"_index":612,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MenuComponent.html":{}}}],["subscribe(isloading",{"_index":1155,"title":{},"body":{"components/LoaderComponent.html":{}}}],["subscribe(islogged",{"_index":827,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(isopen",{"_index":1289,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["subscribe(menuopen",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(role",{"_index":609,"title":{},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MenuComponent.html":{}}}],["subscribe(tournament",{"_index":615,"title":{},"body":{"components/DetailsComponent.html":{}}}],["success",{"_index":93,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/IndexComponent.html":{}}}],["successmessage",{"_index":1010,"title":{},"body":{"components/IndexComponent.html":{}}}],["suffit",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["super",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["suppimer",{"_index":1072,"title":{},"body":{"components/IndexComponent.html":{}}}],["support",{"_index":1725,"title":{},"body":{"modules.html":{}}}],["supprim",{"_index":1078,"title":{},"body":{"components/IndexComponent.html":{}}}],["supérieure",{"_index":758,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["surveur",{"_index":695,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["svg",{"_index":1726,"title":{},"body":{"modules.html":{}}}],["switch(value",{"_index":1482,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["switch(xhr.status",{"_index":683,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["switchmap",{"_index":1042,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["switchmap((criteria",{"_index":1063,"title":{},"body":{"components/IndexComponent.html":{}}}],["switchmap(({id",{"_index":1531,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["switchmap(({match",{"_index":1524,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["sûr",{"_index":795,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["tab",{"_index":629,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":1436,"title":{},"body":{"modules/SharedModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{}}}],["takeuntil(this.destroyed",{"_index":1059,"title":{},"body":{"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{}}}],["tap",{"_index":1311,"title":{},"body":{"components/MenuComponent.html":{}}}],["teapot",{"_index":699,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{}}}],["termin",{"_index":1488,"title":{},"body":{"pipes/StatusToStringPipe.html":{}}}],["tes",{"_index":793,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["text",{"_index":845,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuLinkComponent.html":{}}}],["this._actions$.pipe",{"_index":1522,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["this._authservice.login(this.fg.value).subscribe",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._cd.detectchanges",{"_index":829,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["this._confirmationservice.confirm",{"_index":791,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["this._fb.group",{"_index":193,"title":{},"body":{"components/AddComponent-1.html":{},"components/LoginComponent.html":{}}}],["this._fb.group(registerform",{"_index":74,"title":{},"body":{"components/AddComponent.html":{}}}],["this._fb.group(tournamentsearchform",{"_index":1057,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._http.post(environment.apibaseurl",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._httpclient.delete(environment.apibaseurl",{"_index":1115,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/TournamentService.html":{}}}],["this._httpclient.get(environment.apibaseurl",{"_index":1637,"title":{},"body":{"injectables/TournamentService.html":{}}}],["this._httpclient.head(environment.apibaseurl",{"_index":1275,"title":{},"body":{"injectables/MemberService.html":{}}}],["this._httpclient.patch(environment.apibaseurl",{"_index":1242,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TournamentService.html":{}}}],["this._httpclient.post(environment.apibaseurl",{"_index":1113,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MemberService.html":{},"injectables/TournamentService.html":{}}}],["this._inscriptionservice.register(tournament.id",{"_index":1079,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._inscriptionservice.unregister(tournament.id",{"_index":1081,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._isopen$.asobservable",{"_index":1371,"title":{},"body":{"injectables/MenuService.html":{}}}],["this._isopen$.next(!this._isopen$.value",{"_index":1375,"title":{},"body":{"injectables/MenuService.html":{}}}],["this._isopen$.next(false",{"_index":1374,"title":{},"body":{"injectables/MenuService.html":{}}}],["this._isopen$.next(true",{"_index":1373,"title":{},"body":{"injectables/MenuService.html":{}}}],["this._isopen$.value",{"_index":1372,"title":{},"body":{"injectables/MenuService.html":{}}}],["this._match",{"_index":1223,"title":{},"body":{"components/MatchComponent.html":{}}}],["this._matchservice.updatematch(match.id",{"_index":1525,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["this._memberservice.checkemail(email",{"_index":78,"title":{},"body":{"components/AddComponent.html":{}}}],["this._memberservice.checkusername(username",{"_index":81,"title":{},"body":{"components/AddComponent.html":{}}}],["this._memberservice.register(this.fg.value).subscribe",{"_index":88,"title":{},"body":{"components/AddComponent.html":{}}}],["this._menuservice.close",{"_index":1328,"title":{},"body":{"components/MenuComponent.html":{}}}],["this._menuservice.isopen",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/MenuButtonComponent.html":{}}}],["this._menuservice.toggle",{"_index":1290,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["this._messageservice.add",{"_index":91,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["this._route.snapshot.params",{"_index":605,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this._router.events.pipe",{"_index":1323,"title":{},"body":{"components/MenuComponent.html":{}}}],["this._router.navigate(['/tournament",{"_index":90,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["this._router.navigate(['auth",{"_index":831,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this._router.navigate(['tournament",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._store.dispatch(changecriteria",{"_index":1083,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._store.dispatch(changepage",{"_index":1070,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._store.dispatch(changeresult",{"_index":1224,"title":{},"body":{"components/MatchComponent.html":{}}}],["this._store.dispatch(changetab",{"_index":628,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this._store.dispatch(loadingstart",{"_index":1065,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._store.dispatch(loadingstop",{"_index":682,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/IndexComponent.html":{}}}],["this._store.dispatch(selecttournament({id",{"_index":606,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this._store.dispatch(sessionstart(response",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._store.dispatch(sessionstop",{"_index":830,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this._store.dispatch(starttournament({id",{"_index":625,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this._store.dispatch(validateroundresults({id",{"_index":627,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this._store.select(state",{"_index":607,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["this._tournamentservice.add(this.fg.value).subscribe",{"_index":214,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this._tournamentservice.delete(tournament.id",{"_index":1076,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._tournamentservice.get(criteria",{"_index":1066,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._tournamentservice.get(this.criteria",{"_index":1086,"title":{},"body":{"components/IndexComponent.html":{}}}],["this._tournamentservice.getdetails(id).pipe",{"_index":1532,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["this._tournamentservice.nextround(id).pipe",{"_index":1542,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["this._tournamentservice.start(id).pipe",{"_index":1539,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["this.body.nativeelement.offsetheight",{"_index":516,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["this.body.nativeelement.style.height",{"_index":518,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["this.body.nativeelement.style.opacity",{"_index":519,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["this.bottompaginator.changepage((this.criteria.offset",{"_index":1056,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.control?.errors",{"_index":732,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["this.criteria",{"_index":1091,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.criteria.offset",{"_index":1069,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.destroyed$.complete",{"_index":562,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["this.destroyed$.next(true",{"_index":561,"title":{},"body":{"directives/DestroyedComponent.html":{}}}],["this.fg",{"_index":73,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["this.fg.controls[key].markasdirty",{"_index":83,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/LoginComponent.html":{}}}],["this.fg.get('elomax",{"_index":199,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this.fg.get('elomin",{"_index":197,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this.fg.get('email')?.addasyncvalidators(asyncvalidators.uniquebyid(null",{"_index":75,"title":{},"body":{"components/AddComponent.html":{}}}],["this.fg.get('maxplayers",{"_index":207,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this.fg.get('minplayers",{"_index":205,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this.fg.get('username')?.addasyncvalidators(asyncvalidators.uniquebyid(null",{"_index":79,"title":{},"body":{"components/AddComponent.html":{}}}],["this.fg.markaspristine",{"_index":99,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{}}}],["this.fg.patchvalue(criteria",{"_index":1064,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.fg.value",{"_index":1084,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.fg?.get('endofregistrationdate",{"_index":216,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this.fg?.get('minplayers",{"_index":218,"title":{},"body":{"components/AddComponent-1.html":{}}}],["this.handlethenrefresh",{"_index":1075,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.height",{"_index":515,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["this.isadmin",{"_index":1060,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.isloading",{"_index":86,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{}}}],["this.islogged",{"_index":828,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isopen",{"_index":520,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/MenuButtonComponent.html":{}}}],["this.items",{"_index":1329,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.menuopen",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["this.reload(response",{"_index":1067,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.role",{"_index":610,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selectedtab",{"_index":613,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.steps",{"_index":620,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.toppaginator.changepage((this.criteria.offset",{"_index":1054,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.total",{"_index":1089,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.tournament",{"_index":616,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.tournament.id",{"_index":626,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.tournaments",{"_index":1087,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.validateendofregistration(control",{"_index":194,"title":{},"body":{"components/AddComponent-1.html":{}}}],["throw",{"_index":704,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["title",{"_index":1314,"title":{},"body":{"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["toastmodule",{"_index":1449,"title":{},"body":{"modules/SharedModule.html":{}}}],["todate",{"_index":1491,"title":{},"body":{"pipes/ToDatePipe.html":{}}}],["todatepipe",{"_index":1428,"title":{"pipes/ToDatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ToDatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["toggle",{"_index":499,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{}}}],["toggle(item",{"_index":1343,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["token",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SessionState.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"miscellaneous/variables.html":{}}}],["tokeninterceptor",{"_index":331,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["tokenmodel",{"_index":470,"title":{"interfaces/TokenModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["tooltipmodule",{"_index":1467,"title":{},"body":{"modules/SharedModule.html":{}}}],["top",{"_index":524,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/LoaderComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["toppaginator",{"_index":993,"title":{},"body":{"components/IndexComponent.html":{}}}],["total",{"_index":962,"title":{},"body":{"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"injectables/TournamentService.html":{}}}],["tour",{"_index":622,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tournament",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MenuComponent.html":{},"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["tournament.component",{"_index":1605,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{}}}],["tournament.count",{"_index":619,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tournament.currentround",{"_index":1560,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["tournament.matches.filter(m",{"_index":1566,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["tournament.name",{"_index":630,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tournament?.matches",{"_index":1571,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["tournament?.players.map(p",{"_index":1570,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["tournamentcomponent",{"_index":162,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentdetailsmodel",{"_index":589,"title":{"interfaces/TournamentDetailsModel.html":{}},"body":{"components/DetailsComponent.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentdetailsmodel|null",{"_index":603,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tournamenteffects",{"_index":1514,"title":{"injectables/TournamentEffects.html":{}},"body":{"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["tournamentform",{"_index":190,"title":{},"body":{"components/AddComponent-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentformmodel",{"_index":1596,"title":{"interfaces/TournamentFormModel.html":{}},"body":{"interfaces/TournamentFormModel.html":{},"injectables/TournamentService.html":{},"coverage.html":{}}}],["tournamentid",{"_index":1233,"title":{},"body":{"interfaces/MatchModel.html":{}}}],["tournamentinscription",{"_index":1114,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["tournamentmodel",{"_index":1007,"title":{"interfaces/TournamentModel.html":{}},"body":{"components/IndexComponent.html":{},"interfaces/TournamentModel.html":{},"injectables/TournamentService.html":{},"coverage.html":{}}}],["tournamentmodule",{"_index":1599,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentreducer",{"_index":1555,"title":{},"body":{"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournaments",{"_index":994,"title":{},"body":{"components/IndexComponent.html":{},"injectables/TournamentService.html":{}}}],["tournamentsearchform",{"_index":1046,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentsearchmodel",{"_index":1029,"title":{"interfaces/TournamentSearchModel.html":{}},"body":{"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["tournamentservice",{"_index":174,"title":{"injectables/TournamentService.html":{}},"body":{"components/AddComponent-1.html":{},"components/IndexComponent.html":{},"injectables/TournamentEffects.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["tournamentsroutingmodule",{"_index":1603,"title":{"modules/TournamentsRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentstate",{"_index":600,"title":{"interfaces/TournamentState.html":{}},"body":{"components/DetailsComponent.html":{},"components/IndexComponent.html":{},"components/MatchComponent.html":{},"injectables/TournamentEffects.html":{},"modules/TournamentModule.html":{},"interfaces/TournamentState.html":{},"coverage.html":{}}}],["tournoi",{"_index":228,"title":{},"body":{"components/AddComponent-1.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["tournois",{"_index":1318,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["tout",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["toutes",{"_index":799,"title":{},"body":{"guards/FormSubmittedGuard.html":{}}}],["transform",{"_index":655,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"components/LoaderComponent.html":{},"components/MenuButtonComponent.html":{},"pipes/RoundFilterPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{}}}],["transform(matches",{"_index":1408,"title":{},"body":{"pipes/RoundFilterPipe.html":{}}}],["transform(value",{"_index":656,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{}}}],["transition",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsePanelComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":1298,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["translatey(calc(#{$button",{"_index":1295,"title":{},"body":{"components/MenuButtonComponent.html":{}}}],["transparent",{"_index":1170,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tre",{"_index":747,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["trigger('fadeanimation",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":87,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AsyncValidators.html":{},"guards/FormSubmittedGuard.html":{},"components/LoginComponent.html":{},"interfaces/SessionState.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"injectables/AuthService.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"classes/DateValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FormErrorComponent.html":{},"guards/FormSubmittedGuard.html":{},"interfaces/HasForm.html":{},"components/HeaderComponent.html":{},"classes/HttpUtils.html":{},"components/IndexComponent.html":{},"injectables/InscriptionService.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"components/MatchComponent.html":{},"interfaces/MatchModel.html":{},"injectables/MatchService.html":{},"injectables/MemberService.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"interfaces/PlayerScoreModel.html":{},"pipes/RoundFilterPipe.html":{},"interfaces/SessionState.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"injectables/TournamentService.html":{},"interfaces/TournamentState.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":664,"title":{},"body":{"pipes/EnumToArrayPipe.html":{},"interceptors/ErrorInterceptor.html":{}}}],["ul",{"_index":1330,"title":{},"body":{"components/MenuComponent.html":{}}}],["une",{"_index":738,"title":{},"body":{"components/FormErrorComponent.html":{},"components/HomeComponent.html":{}}}],["unique",{"_index":433,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["uniquebyid",{"_index":418,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["uniquebyid(id",{"_index":419,"title":{},"body":{"classes/AsyncValidators.html":{}}}],["unregister",{"_index":1002,"title":{},"body":{"components/IndexComponent.html":{},"injectables/InscriptionService.html":{}}}],["unregister(id",{"_index":1111,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["unregister(tournament",{"_index":1023,"title":{},"body":{"components/IndexComponent.html":{}}}],["updatematch",{"_index":1238,"title":{},"body":{"injectables/MatchService.html":{}}}],["updatematch(id",{"_index":1240,"title":{},"body":{"injectables/MatchService.html":{}}}],["updateresult",{"_index":1203,"title":{},"body":{"components/MatchComponent.html":{}}}],["updateresult(match",{"_index":1210,"title":{},"body":{"components/MatchComponent.html":{}}}],["urltree",{"_index":787,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"guards/IsAdminGuard.html":{},"guards/IsLoggedGuard.html":{},"guards/IsNotLoggedGuard.html":{}}}],["useclass",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel",{"_index":473,"title":{"interfaces/UserModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["username",{"_index":80,"title":{},"body":{"components/AddComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/LoginModel-1.html":{},"injectables/MemberService.html":{},"interfaces/PlayerScoreModel.html":{},"interfaces/SessionState.html":{},"interfaces/TokenModel.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["utilis",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["utilisée",{"_index":753,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["v",{"_index":631,"title":{},"body":{"components/DetailsComponent.html":{},"components/MatchComponent.html":{}}}],["valeur",{"_index":744,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["validateendofregistration",{"_index":171,"title":{},"body":{"components/AddComponent-1.html":{}}}],["validateendofregistration(control",{"_index":178,"title":{},"body":{"components/AddComponent-1.html":{}}}],["validateroudresult",{"_index":1516,"title":{},"body":{"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{}}}],["validateroundresults",{"_index":601,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":424,"title":{},"body":{"classes/AsyncValidators.html":{},"components/FormErrorComponent.html":{}}}],["validationerrors|null|undefined",{"_index":731,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["validatorfn",{"_index":538,"title":{},"body":{"classes/CompareValidators.html":{},"classes/DateValidators.html":{}}}],["validators",{"_index":186,"title":{},"body":{"components/AddComponent-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["validators.email",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.max(16",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.max(3000",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.maxlength(100",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.min(0",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.min(2",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.minlength(2",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["valide",{"_index":757,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/CollapsePanelComponent.html":{},"classes/CompareValidators.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"pipes/EnumToArrayPipe.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"pipes/StatusToStringPipe.html":{},"pipes/ToDatePipe.html":{},"injectables/TournamentEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value[v",{"_index":662,"title":{},"body":{"pipes/EnumToArrayPipe.html":{}}}],["var",{"_index":121,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["variable",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1739,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1737,"title":{},"body":{"properties.html":{}}}],["veteran",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["videmment",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild",{"_index":514,"title":{},"body":{"components/CollapsePanelComponent.html":{},"components/IndexComponent.html":{}}}],["viewchild('body",{"_index":509,"title":{},"body":{"components/CollapsePanelComponent.html":{}}}],["viewchild('bottompaginator",{"_index":1026,"title":{},"body":{"components/IndexComponent.html":{}}}],["viewchild('toppaginator",{"_index":1037,"title":{},"body":{"components/IndexComponent.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AddComponent.html":{},"components/AddComponent-1.html":{},"components/AppComponent.html":{},"classes/AsyncValidators.html":{},"components/AuthComponent.html":{},"components/ChangePasswordDialogComponent.html":{},"components/CollapsePanelComponent.html":{},"directives/DestroyedComponent.html":{},"components/DetailsComponent.html":{},"components/EditComponent.html":{},"components/FooterComponent.html":{},"components/FormErrorComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/MemberComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"injectables/MenuService.html":{},"components/ProfileComponent.html":{},"components/TournamentComponent.html":{}}}],["vouloir",{"_index":796,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/IndexComponent.html":{}}}],["vous",{"_index":794,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["vs",{"_index":1226,"title":{},"body":{"components/MatchComponent.html":{}}}],["waiting_for_players",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waitingforplayers",{"_index":1718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["weight",{"_index":841,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["white",{"_index":839,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuLinkComponent.html":{}}}],["white_win",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whiteid",{"_index":1234,"title":{},"body":{"interfaces/MatchModel.html":{}}}],["whitename",{"_index":1235,"title":{},"body":{"interfaces/MatchModel.html":{}}}],["whitewin",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["width",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/InProgressComponent.html":{},"components/LoaderComponent.html":{},"components/MatchComponent.html":{},"components/MenuButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["wins",{"_index":1382,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{},"injectables/TournamentEffects.html":{},"interfaces/TournamentState.html":{},"miscellaneous/variables.html":{}}}],["womenonly",{"_index":1033,"title":{},"body":{"components/IndexComponent.html":{},"interfaces/TournamentDetailsModel.html":{},"interfaces/TournamentFormModel.html":{},"interfaces/TournamentModel.html":{},"interfaces/TournamentSearchModel.html":{},"miscellaneous/variables.html":{}}}],["womenonly:boolean",{"_index":1389,"title":{},"body":{"interfaces/PlayerScoreModel.html":{},"interfaces/TournamentDetailsModel.html":{}}}],["working",{"_index":974,"title":{},"body":{"components/InProgressComponent.html":{}}}],["works",{"_index":489,"title":{},"body":{"components/ChangePasswordDialogComponent.html":{}}}],["xhr",{"_index":705,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["xhr.error",{"_index":687,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["yes",{"_index":785,"title":{},"body":{"guards/FormSubmittedGuard.html":{},"pipes/ToDatePipe.html":{}}}],["z",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{}}}],["zone.js",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules/MemberModule.html":{},"modules/SharedModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddComponent.html":{"url":"components/AddComponent.html","title":"component - AddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/member/pages/add/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                    HasForm\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fg\n                            \n                            \n                                GenderEnum\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fb: FormBuilder, _router: Router, _messageService: MessageService, _memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/member/pages/add/add.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/pages/add/add.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/pages/add/add.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/member/pages/add/add.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GenderEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenderEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/member/pages/add/add.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/member/pages/add/add.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService, PrimeIcons } from 'primeng/api';\nimport { HasForm } from 'src/app/core/interfaces/has-form';\nimport { AsyncValidators } from 'src/app/core/validators/async.validators';\nimport { GenderEnum } from '../../enums/gender.enum';\nimport { registerForm } from '../../forms/register.form';\nimport { MemberService } from '../../services/member.service';\n\n@Component({\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit, HasForm {\n\n  fg!: FormGroup;\n  isLoading: boolean = false;\n  GenderEnum = GenderEnum;\n\n  constructor(\n    private readonly _fb: FormBuilder,\n    private readonly _router: Router,\n    private readonly _messageService: MessageService,\n    private readonly _memberService: MemberService,\n  ) { }\n\n  ngOnInit(): void {\n    this.fg = this._fb.group(registerForm);\n\n    this.fg.get('email')?.addAsyncValidators(AsyncValidators.uniqueById(null, (email, id) => this._memberService.checkEmail(email, id)));\n    this.fg.get('username')?.addAsyncValidators(AsyncValidators.uniqueById(null, (username, id) => this._memberService.checkUsername(username, id)));\n  }\n\n  onSubmit() {\n    Object.keys(this.fg.controls).forEach((key) => {\n      this.fg.controls[key].markAsDirty();\n    });\n    if(this.fg.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this._memberService.register(this.fg.value).subscribe({\n      next: () => {\n        this._router.navigate(['/tournament']);\n        this._messageService.add({ severity: 'success', icon: PrimeIcons.CHECK_CIRCLE, detail: 'Données sauvegardées' });\n        this.isLoading = false;\n        this.fg.markAsPristine();\n      }, error: () => {\n        this.isLoading = false;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        Nouveau Membre\n\n    \n        \n            \n                \n                    \n                        \n                        Pseudo\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Email\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        ELO (0-3000)\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Date de naissance\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Genre\n                    \n                    \n                \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./add.component.scss\n                \n                p-inputnumber {\n    display: block;\n    ::ng-deep {\n        .p-inputnumber {\n            display: block;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nouveau Membre                                                                                                            Pseudo                                                                                                                                                                    Email                                                                                                                                                                    ELO (0-3000)                                                                                                                                                                    Date de naissance                                                                                                                                                                    Genre                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddComponent-1.html":{"url":"components/AddComponent-1.html","title":"component - AddComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tournament/pages/add/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                    HasForm\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CategoryEnum\n                            \n                            \n                                fg\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                validateEndOfRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _fb: FormBuilder, _tournamentService: TournamentService, _messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/pages/add/add.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/add/add.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/add/add.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEndOfRegistration\n                        \n                    \n                \n            \n            \n                \nvalidateEndOfRegistration(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/add/add.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { invalidEndOfRegistrationDate: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CategoryEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CategoryEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/add/add.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/add/add.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/add/add.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService, PrimeIcons } from 'primeng/api';\nimport { HasForm } from 'src/app/core/interfaces/has-form';\nimport { CompareValidators } from 'src/app/core/validators/compare.validators';\nimport { CategoryEnum } from '../../enums/category.enum';\nimport { tournamentForm } from '../../forms/tournament.form';\nimport { TournamentService } from '../../services/tournament.service';\n\n@Component({\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit, HasForm {\n\n  fg!: FormGroup;\n  isLoading: boolean = false;\n  CategoryEnum = CategoryEnum;\n\n  constructor(\n    private readonly _router: Router,\n    private readonly _fb: FormBuilder,\n    private readonly _tournamentService: TournamentService,\n    private readonly _messageService: MessageService\n  ) { }\n\n  ngOnInit(): void {\n    this.fg = this._fb.group({ ...tournamentForm }, { validators: (control) => this.validateEndOfRegistration(control) });\n    const eloMinControl = this.fg.get('eloMin'); \n    const eloMaxControl = this.fg.get('eloMax'); \n\n    eloMaxControl?.addValidators(CompareValidators.greaterOrEqualThan(eloMinControl, 'Elo Minimum'));\n    eloMinControl?.valueChanges.subscribe(() => eloMaxControl?.updateValueAndValidity());\n\n    const minPlayerControl = this.fg.get('minPlayers'); \n    const maxPlayerControl = this.fg.get('maxPlayers'); \n\n    maxPlayerControl?.addValidators(CompareValidators.greaterOrEqualThan(minPlayerControl, 'Nombre de joueurs minimums'));\n    minPlayerControl?.valueChanges.subscribe(() => maxPlayerControl?.updateValueAndValidity());\n  }\n\n\n  onSubmit() {\n    Object.keys(this.fg.controls).forEach((key) => {\n      this.fg.controls[key].markAsDirty();\n    });\n    if(this.fg.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this._tournamentService.add(this.fg.value).subscribe({\n      next: () => {\n        this._router.navigate(['/tournament']);\n        this._messageService.add({ severity: 'success', icon: PrimeIcons.CHECK_CIRCLE, detail: 'Données sauvegardées' });\n        this.isLoading = false;\n        this.fg.markAsPristine();\n      }, error: () => {\n        this.isLoading = false;\n      }\n    });\n  }\n\n  validateEndOfRegistration(control: AbstractControl) {\n    const dateControl = this.fg?.get('endOfRegistrationDate');\n    const minPlayersControl = this.fg?.get('minPlayers');\n\n    if(!dateControl || !minPlayersControl || !dateControl.value || !minPlayersControl.value) {\n      return null;\n    }\n\n    let need = new Date().getTime() + 86400000 * minPlayersControl.value;\n\n    if(dateControl.value.getTime() \n    \n\n    \n        \n    \n\nNouveau Tournoi\n\n    \n        \n            \n                \n                    \n                        \n                        Nom\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Lieu\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Nombre minimum de joueurs (2-16)\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Nombre maximum de joueurs (2-16)\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        ELO minimum (0-3000)\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        ELO maximum (0-3000)\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Catégories\n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                        Date de fin des inscriptions\n                    \n                    \n                    \n                        La date est invalide\n                    \n                \n            \n            \n                \n                    \n                        Réservé aux filles\n                    \n                    \n                    \n                \n            \n        \n        \n            \n        \n    \n\n    \n\n    \n                \n                    ./add.component.scss\n                \n                p-inputnumber {\n    display: block;\n    ::ng-deep {\n        .p-inputnumber {\n            display: block;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Nouveau Tournoi                                                                                                            Nom                                                                                                                                                                    Lieu                                                                                                                                                                    Nombre minimum de joueurs (2-16)                                                                                                                                                                    Nombre maximum de joueurs (2-16)                                                                                                                                                                    ELO minimum (0-3000)                                                                                                                                                                    ELO maximum (0-3000)                                                                                                                                                                    Catégories                                                                                                                                                                    Date de fin des inscriptions                                                                                    La date est invalide                                                                                                                        Réservé aux filles                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuOpen\n                            \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { MenuService } from './layout/services/menu.service';\nimport { fadeAnimation } from './shared/animations/fade.animation';\nimport { DestroyedComponent } from './shared/components/destroyed.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [fadeAnimation],\n})\nexport class AppComponent extends DestroyedComponent implements OnInit\n{\n  menuOpen: boolean = true;\n\n  constructor(\n    private readonly _menuService: MenuService\n  ) { super(); }\n\n  ngOnInit(): void {\n    this._menuService.isOpen$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(menuOpen => this.menuOpen = menuOpen);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n    \n    \n        \n            \n            \n        \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    >.flex-container {\n        flex-grow: 1;\n        display: flex;\n        >nav {\n            width: 300px;\n            background-color: var(--bluegray-900);\n            transition: margin-left .3s ease;\n            &.closed {\n                margin-left: -300px;\n            }\n        }\n        >.container {\n            flex-grow: 1;\n            display: flex;\n            justify-content: space-between;\n            flex-direction: column;\n            >main {\n                padding: 20px;\n                flex-grow: 1;\n                position: relative;\n            }\n        }\n    }\n}\n\n@media screen and (max-width: 768px) {\n    :host {\n        >.flex-container {\n            >nav {\n                position: fixed;\n                width: 100%;\n                height: 100%;\n                z-index: 1000;\n                &.closed {\n                    margin-left: -100%;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LayoutModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LayoutModule } from './layout/layout.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from 'src/environments/environment';\nimport { SessionReducer } from './core/states/session.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingReducer } from './core/states/loading.reducer';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { TokenInterceptor } from './core/interceptors/token.interceptor';\n\n\nexport function localStorageSyncReducer(reducer: ActionReducer): ActionReducer {\n  return localStorageSync({\n    keys: ['sessionState'],\n    rehydrate: true,\n  })(reducer);\n}\nconst metaReducers: Array> = [localStorageSyncReducer];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    LayoutModule,\n    CoreModule,\n    StoreModule.forRoot({\n      sessionState: SessionReducer,\n      loadingState: LoadingReducer,\n    }, { metaReducers }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, \n      logOnly: environment.production,\n      autoPause: true,\n    }),\n    EffectsModule.forRoot([])\n  ],\n  providers: [\n    ConfirmationService,\n    MessageService,\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', loadChildren: () => \"import('./features/home/home.module').then(m => m.HomeModule)\" },\n  { path: 'auth', loadChildren: () => \"import('./features/auth/auth.module').then(m => m.AuthModule)\" },\n  { path: 'tournament', loadChildren: () => \"import('./features/tournament/tournament.module').then(m => m.TournamentModule)\" },\n  { path: 'member', loadChildren: () => \"import('./features/member/member.module').then(m => m.MemberModule)\" },\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AsyncValidators.html":{"url":"classes/AsyncValidators.html","title":"class - AsyncValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AsyncValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/async.validators.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                uniqueById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        uniqueById\n                        \n                    \n                \n            \n            \n                \n                    \n                    uniqueById(id: any, cb: (value: any,id: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/async.validators.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\nimport { catchError, map, of } from \"rxjs\";\nimport { Observable } from \"rxjs/internal/Observable\";\n\nexport class AsyncValidators {\n    static uniqueById(id: any, cb: (value: any, id: any) => Observable): AsyncValidatorFn {\n        return (control: AbstractControl): Observable => {\n            if(!control.value) {\n                return of(null);\n            }\n            return cb(control.value, id).pipe(\n                map(() => ({ unique: true })),\n                catchError(() => of(null)),\n            );\n        } \n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                    \n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/auth.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/auth/auth.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { fadeAnimation } from 'src/app/shared/animations/fade.animation';\n\n@Component({\n  template: `\n    \n  `,\n  animations: [fadeAnimation],\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IsNotLoggedGuard } from 'src/app/core/guards/is-not-logged.guard';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './pages/login/login.component';\n\nconst routes: Routes = [{ path: '', component: AuthComponent, children: [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent, canActivate: [ IsNotLoggedGuard ] }\n] }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(model: LoginModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/auth/services/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                LoginModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable } from 'rxjs';\nimport { TokenModel } from 'src/app/core/models/token.model';\nimport { environment } from 'src/environments/environment';\nimport { LoginModel } from '../models/login.model';\nimport { UserModel } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private readonly _http: HttpClient\n  ) { }\n\n  login(model: LoginModel) : Observable {\n    return this._http.post(environment.apiBaseUrl + '/login', model).pipe(\n      map(({token, user}) => ({ \n        token: token,\n        ...user\n      }))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordDialogComponent.html":{"url":"components/ChangePasswordDialogComponent.html","title":"component - ChangePasswordDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/member/components/change-password-dialog/change-password-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password-dialog\n            \n\n\n\n            \n                styleUrls\n                ./change-password-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/member/components/change-password-dialog/change-password-dialog.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/components/change-password-dialog/change-password-dialog.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-password-dialog',\n  templateUrl: './change-password-dialog.component.html',\n  styleUrls: ['./change-password-dialog.component.scss']\n})\nexport class ChangePasswordDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        change-password-dialog works!\n\n    \n\n    \n                \n                    ./change-password-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'change-password-dialog works!'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsePanelComponent.html":{"url":"components/CollapsePanelComponent.html","title":"component - CollapsePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CollapsePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/collapse-panel/collapse-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapse-panel\n            \n\n\n\n            \n                styleUrls\n                ./collapse-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapse-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                body\n                            \n                            \n                                height\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('body')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/collapse-panel/collapse-panel.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterContentInit, AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-collapse-panel',\n  templateUrl: './collapse-panel.component.html',\n  styleUrls: ['./collapse-panel.component.scss']\n})\nexport class CollapsePanelComponent implements OnInit, AfterViewInit {\n\n  @Input()\n  isOpen: boolean = false;\n\n  @ViewChild('body')\n  body!: ElementRef;\n\n  height: number = 0;\n\n  constructor() { }\n\n  ngAfterViewInit(): void {\n    this.height = this.body.nativeElement.offsetHeight;\n    if(!this.isOpen) {\n      this.body.nativeElement.style.height = 0;\n      this.body.nativeElement.style.opacity = 0;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n    if(!this.isOpen) {\n      this.body.nativeElement.style.height = 0;\n      this.body.nativeElement.style.opacity = 0;\n    } else {\n      this.body.nativeElement.style.height = this.height + 'px';\n      this.body.nativeElement.style.opacity = 1;\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./collapse-panel.component.scss\n                \n                :host {\n    display: block;\n    margin-bottom: 10px;\n    >.collapse-panel {\n        >.body {\n            margin-top: 20px;\n            transition: all .5s ease;\n            >.padding {\n                padding: 20px 10px;\n                border-radius: 6px;\n                background-color: var(--bluegray-100);\n                border: 1px solid var(--bluegray-300);\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'CollapsePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompareValidators.html":{"url":"classes/CompareValidators.html","title":"class - CompareValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompareValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/compare.validators.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                greaterOrEqualThan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        greaterOrEqualThan\n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterOrEqualThan(other: AbstractControl | null, propName: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/compare.validators.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                            AbstractControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    propName\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\nexport class CompareValidators {\n    static greaterOrEqualThan(other: AbstractControl|null, propName: string|null = null) : ValidatorFn { \n        return (control: AbstractControl) => {\n            if(!control || !other || !control?.value || !other?.value) {\n                return null;\n            }\n            if(control.value >= other.value) {\n                return null;\n            } else {\n                return { greaterOrEqualThan: { smallProp: propName??'' } };\n            }\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateValidators.html":{"url":"classes/DateValidators.html","title":"class - DateValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/date.validators.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                notBefore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        notBefore\n                        \n                    \n                \n            \n            \n                \n                    \n                    notBefore(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/date.validators.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from \"@angular/forms\";\n\nexport class DateValidators {\n    static notBefore(date: Date) : ValidatorFn { \n        return (control: AbstractControl) => {\n            if(!control.value) {\n                return null;\n            }\n            return date \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DestroyedComponent.html":{"url":"directives/DestroyedComponent.html","title":"directive - DestroyedComponent","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DestroyedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/destroyed.component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/destroyed.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/destroyed.component.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, OnDestroy } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n\n// parent component class should have empty directive decorator \n@Directive()\nexport abstract class DestroyedComponent implements OnDestroy {\n\n    protected destroyed$: Subject = new Subject();\n\n    ngOnDestroy(): void {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tournament/pages/details/details.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                RoleEnum\n                            \n                            \n                                selectedTab\n                            \n                            \n                                StatusEnum\n                            \n                            \n                                steps\n                            \n                            \n                                tournament\n                            \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onTabChange\n                            \n                            \n                                save\n                            \n                            \n                                start\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: ActivatedRoute, _store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/details/details.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTabChange\n                        \n                    \n                \n            \n            \n                \nonTabChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/details/details.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/details/details.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/details/details.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RoleEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RoleEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StatusEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : StatusEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournament\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TournamentDetailsModel | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/details/details.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { takeUntil } from 'rxjs';\nimport { RoleEnum } from 'src/app/core/enums/role.enum';\nimport { SessionState } from 'src/app/core/states/session.reducer';\nimport { DestroyedComponent } from 'src/app/shared/components/destroyed.component';\nimport { StatusEnum } from '../../enums/status.enum';\nimport { TournamentDetailsModel } from '../../models/tournament-details.model';\nimport { changeTab, selectTournament, startTournament, TournamentState, validateRoundResults } from '../../states/tournament.reducers';\n\n@Component({\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent extends DestroyedComponent implements OnInit {\n\n  tournament: TournamentDetailsModel|null = null;\n  selectedTab!: number;\n  steps: { label: string }[] = [];\n  isLoading: boolean = false;\n  role?: RoleEnum;\n  StatusEnum = StatusEnum;\n  RoleEnum = RoleEnum;\n\n  constructor(\n    private readonly _route: ActivatedRoute,\n    private readonly _store: Store,\n  ) { super(); }\n\n  ngOnInit(): void {\n    const {id} = this._route.snapshot.params;\n\n    this._store.dispatch(selectTournament({id}));\n\n    this._store.select(state => state.sessionState.role)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(role => this.role = role);\n\n    this._store.select(state => state.tournamentFeature.tournamentState.selectedTab)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe( selectedTab => {\n        this.selectedTab = selectedTab;\n      });\n\n    this._store.select(state => state.tournamentFeature.tournamentState.selectedTournament)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(tournament => {\n        this.tournament = tournament;\n        if(tournament.count > 0) {\n          const count = tournament.count % 2 == 0 ? (tournament.count - 1)  * 2 : tournament.count * 2;\n          this.steps = [...Array(count).keys()].map(item => ({\n            label: `Tour ${item+1}`\n          }));\n        }\n      });\n  }\n\n  start() {\n    if(!this.tournament)\n      return;\n    this._store.dispatch(startTournament({id: this.tournament.id}));\n  }\n\n  save() {\n    if(!this.tournament)\n      return;\n    this._store.dispatch(validateRoundResults({id: this.tournament.id}));\n  }\n\n  onTabChange() {\n    this._store.dispatch(changeTab({ tab: this.selectedTab }));\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    {{ tournament.name }}\n\n    \n        \n            \n        \n    \n    \n        \n            \n                \n                    \n                        \n                            Position\n                            Nom\n                            P\n                            V\n                            D\n                            N\n                            Score\n                        \n                    \n                    \n                        \n                            {{item.position}}\n                            {{item.username}}\n                            {{item.matchPlayed}}\n                            {{item.wins}}\n                            {{item.defeats}}\n                            {{item.draws}}\n                            {{item.score}}\n                        \n                    \n                \n            \n        \n        \n            \n                \n                    \n                 \n            \n        \n        \n            \n                \n                \n                                    \n            \n        \n    \n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                :host {\n    .actions {\n        display: flex;\n        justify-content: flex-end;\n        width: 100%;\n    }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ tournament.name }}                                                                                                                                                    Position                            Nom                            P                            V                            D                            N                            Score                                                                                                                    {{item.position}}                            {{item.username}}                            {{item.matchPlayed}}                            {{item.wins}}                            {{item.defeats}}                            {{item.draws}}                            {{item.score}}                                                                                                                                                                                                                                                                                             '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditComponent.html":{"url":"components/EditComponent.html","title":"component - EditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tournament/pages/edit/edit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                    HasForm\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/pages/edit/edit.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/edit/edit.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/edit/edit.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HasForm } from 'src/app/core/interfaces/has-form';\n\n@Component({\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit, HasForm {\n\n  fg!: FormGroup;\n  \n  constructor() { }\n  \n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./edit.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'EditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EnumToArrayPipe.html":{"url":"pipes/EnumToArrayPipe.html","title":"pipe - EnumToArrayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EnumToArrayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/enum-to-array.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        enumToArray\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, emptyLine: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/enum-to-array.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    emptyLine\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enumToArray'\n})\nexport class EnumToArrayPipe implements PipeTransform {\n\n  transform(value: any, emptyLine: boolean = false): string[] {\n    if(emptyLine) {\n      return [null, ...Object.keys(value).map(v => value[v as keyof typeof value])];\n    }\n    return [...Object.keys(value).map(v => value[v as keyof typeof value])];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store, _messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/error.interceptor.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { catchError, Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { MessageService, PrimeIcons } from 'primeng/api';\nimport { loadingStop } from '../states/loading.reducer';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(\n    private readonly _store: Store,\n    private readonly _messageService: MessageService\n  ) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    \n    return next.handle(request).pipe(\n      catchError(xhr => {\n        this._store.dispatch(loadingStop());\n        switch(xhr.status) {\n          case 400:\n            this._messageService.add({ severity: 'error', icon: PrimeIcons.EXCLAMATION_TRIANGLE, detail: typeof xhr.error === 'string' ? xhr.error : Object.values(xhr.error.errors).join(', ') });\n            break;\n          case 401:\n          case 403:\n            this._messageService.add({ severity: 'error', icon: PrimeIcons.EXCLAMATION_TRIANGLE, detail: xhr.error });\n            break;\n          case 404:\n            this._messageService.add({ severity: 'error', icon: PrimeIcons.EXCLAMATION_TRIANGLE, detail: 'L\\'adresse du surveur est introuvable' });\n            break;\n          case 418:\n            this._messageService.add({ severity: 'error', icon: PrimeIcons.EXCLAMATION_TRIANGLE, detail: 'I\\'m a teapot !!' });\n            break;\n          default:\n            this._messageService.add({ severity: 'error', icon: PrimeIcons.EXCLAMATION_TRIANGLE, detail: 'La connexion au serveur à échoué' });\n            break;\n        }\n        throw xhr;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        &copy; 2022 - BSTORM\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                :host {\n    >footer {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 50px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '© 2022 - BSTORM'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormErrorComponent.html":{"url":"components/FormErrorComponent.html","title":"component - FormErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/form-error/form-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-error\n            \n\n\n\n            \n                styleUrls\n                ./form-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/form-error/form-error.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     AbstractControl | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/form-error/form-error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/form-error/form-error.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/form-error/form-error.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-error',\n  templateUrl: './form-error.component.html',\n  styleUrls: ['./form-error.component.scss']\n})\nexport class FormErrorComponent implements OnInit {\n\n  @Input()\n  control!: AbstractControl|null;\n\n  get errors(): ValidationErrors|null|undefined{\n    return this.control?.errors;\n  } \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Ce champs est requis\n    Ce champs doit avoir une longeur minimale de {{ errors['minlength'].requiredLength }}\n    Ce champs doit avoir une longeur maximale de {{ errors['maxlength'].requiredLength }}\n    Ce champs doit avoir une valeur minimale de {{ errors['min'].min }}\n    Ce champs doit avoir une valeur maximale de {{ errors['max'].max }}\n    La date doit être inférieure à {{ errors['notBefore'].requiredDate | date: 'dd/MM/yyyy' }}\n    Cette valeur est déjà utilisée\n    Cette valeur n'est pas une adresse email valide\n    Cette valeur doit être supérieure ou égale à {{ errors['greaterOrEqualThan'].smallProp}}\n\n\n    \n\n    \n                \n                    ./form-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Ce champs est requis    Ce champs doit avoir une longeur minimale de {{ errors[\\'minlength\\'].requiredLength }}    Ce champs doit avoir une longeur maximale de {{ errors[\\'maxlength\\'].requiredLength }}    Ce champs doit avoir une valeur minimale de {{ errors[\\'min\\'].min }}    Ce champs doit avoir une valeur maximale de {{ errors[\\'max\\'].max }}    La date doit être inférieure à {{ errors[\\'notBefore\\'].requiredDate | date: \\'dd/MM/yyyy\\' }}    Cette valeur est déjà utilisée    Cette valeur n\\'est pas une adresse email valide    Cette valeur doit être supérieure ou égale à {{ errors[\\'greaterOrEqualThan\\'].smallProp}}'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FormSubmittedGuard.html":{"url":"guards/FormSubmittedGuard.html","title":"guard - FormSubmittedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FormSubmittedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/form-submitted.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/form-submitted.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: HasForm, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/form-submitted.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                HasForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentRoute\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentState\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nextState\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { Observable } from 'rxjs';\nimport { HasForm } from '../interfaces/has-form';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormSubmittedGuard implements CanDeactivate {\n\n  constructor(\n    private readonly _confirmationService: ConfirmationService\n  ) {}\n\n  canDeactivate(\n    component: HasForm,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      if(component.fg?.dirty) {\n        return new Promise(resolve => {\n          this._confirmationService.confirm({\n              message: 'Êtes-vous sûr de vouloir quitter cette page, toutes les données non sauvegardées seront perdues?',\n              accept: () => {\n                resolve(true);\n              },\n              reject: () => {\n                resolve(false);\n              }\n          });\n        });\n      }\n      return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasForm.html":{"url":"interfaces/HasForm.html","title":"interface - HasForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/has-form.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fg:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from \"@angular/forms\";\n\nexport interface HasForm {\n    fg: FormGroup;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/components/header/header.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLogged\n                            \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store, _router: Router, _cd: ChangeDetectorRef, _messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/components/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/header/header.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/header/header.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/components/header/header.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { MessageService, PrimeIcons } from 'primeng/api';\nimport { takeUntil } from 'rxjs';\nimport { SessionState, sessionStop } from 'src/app/core/states/session.reducer';\nimport { DestroyedComponent } from 'src/app/shared/components/destroyed.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent extends DestroyedComponent implements OnInit {\n\n  isLogged!: boolean;\n\n  constructor(\n    private readonly _store: Store,\n    private readonly _router: Router,\n    private readonly _cd: ChangeDetectorRef,\n    private readonly _messageService: MessageService,\n  ) { super(); }\n\n  ngOnInit(): void {\n    this._store.select(state => state.sessionState.isLogged)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(isLogged => {\n        this.isLogged = isLogged;\n        this._cd.detectChanges();\n      });\n  }\n\n  logout() {\n    this._store.dispatch(sessionStop());\n    this._router.navigate(['auth']);\n    this._messageService.add({ severity: 'info', icon: PrimeIcons.INFO_CIRCLE, detail: 'A bientôt' });\n  }\n}\n\n    \n\n    \n        \n    \n    Gestion Tournoi\n    \n        \n            Se Connecter\n        \n        \n            \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n    background-color: var(--blue-600);\n    color: white;\n    font-weight: bolder;\n    font-size: 20px;\n    header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 20px;\n        height: 70px;\n        a {\n            color: white;\n            text-decoration: none;\n            font-size: 15px;\n            &:hover {\n                color: var(--bluegray-100);\n            }\n            >i {\n                font-weight: bolder;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Gestion Tournoi                        Se Connecter                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { fadeAnimation } from 'src/app/shared/animations/fade.animation';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [fadeAnimation]\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Correction du labo: Gestion de tournoi (client en angular)\n\n    Pour installer le projet, il suffit d'exécuter la commande\n    npm install\n    Pour lancer le projet (N'oubliez pas de lancer l'api avant)\n    ng serve -o\n\n    Certaines fonctionnalités ne sont accessibles que lorsque l'on est connecté\n    Admin\n    \n        username\n        checkmate\n        password\n        1234\n        \n    \n    Members\n    \n        username\n        sarah\n        password\n        1234\n        \n    \n    \n        username\n        john\n        password\n        1234\n        \n    \n\n    Vous pouvez bien évidemment créer d'autres compte une fois connecté avec le compte de Mr Checkmate\n\n\n    Cette correction reprend les points: \n    \n        Composants\n        Directives\n        Pipes\n        Routing\n        Modules\n        Services\n        Observables\n        Formulaires\n        Validators\n        AsyncValidators\n        Resolvers\n        Interceptors\n        Guards\n        Animations\n        Stores (ngrx)\n    \n\n    J'ai utilisé la bibliothèque de Composants Primeng (pour rendre le tout moins moche ^^)\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n    color: var(--bluegray-600);\n    code {\n        display: block;\n        background-color: var(--bluegray-600);\n        color: var(--bluegray-100);\n        padding: 20px 10px;\n        margin: 5px;\n        font-weight: bloder;\n    }\n    dt {\n        float: left;\n        clear: left;\n        width: 110px;\n        font-weight: bolder;\n        color: var(--green-400);\n    }\n\n    dt::after {\n        content: \":\";\n    }\n\n    dd {\n        margin: 0 0 0 80px;\n        padding: 0 0 0.5em 0;\n        font-weight: bolder;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Correction du labo: Gestion de tournoi (client en angular)    Pour installer le projet, il suffit d\\'exécuter la commande    npm install    Pour lancer le projet (N\\'oubliez pas de lancer l\\'api avant)    ng serve -o    Certaines fonctionnalités ne sont accessibles que lorsque l\\'on est connecté    Admin            username        checkmate        password        1234                Members            username        sarah        password        1234                        username        john        password        1234                Vous pouvez bien évidemment créer d\\'autres compte une fois connecté avec le compte de Mr Checkmate    Cette correction reprend les points:             Composants        Directives        Pipes        Routing        Modules        Services        Observables        Formulaires        Validators        AsyncValidators        Resolvers        Interceptors        Guards        Animations        Stores (ngrx)        J\\'ai utilisé la bibliothèque de Composants Primeng (pour rendre le tout moins moche ^^)'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    SharedModule,\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpUtils.html":{"url":"classes/HttpUtils.html","title":"class - HttpUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/http.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createHttpParams\n                            \n                            \n                                    Static\n                                getTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createHttpParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    createHttpParams(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/http.utils.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getTotal\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotal(headers: HttpHeaders)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/utils/http.utils.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n                                    \n                                            HttpHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from \"@angular/common/http\";\n\nexport class HttpUtils {\n    static createHttpParams(obj: any): HttpParams {\n        let params = new HttpParams();\n        for(let key in obj) {\n            if(Array.isArray(obj[key])) {\n                for(let item of obj[key]) {\n                    params = params.append(key, item);\n                }\n            } else if (obj[key] != null) {\n                params = params.append(key, obj[key]);\n            }\n        }\n        return params;\n    }\n    \n    static getTotal(headers: HttpHeaders): number {\n        return parseInt(headers.get('X-Total-Count') ?? '0');\n    } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InProgressComponent.html":{"url":"components/InProgressComponent.html","title":"component - InProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/in-progress/in-progress.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-in-progress\n            \n\n\n\n            \n                styleUrls\n                ./in-progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./in-progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/in-progress/in-progress.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/in-progress/in-progress.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-in-progress',\n  templateUrl: './in-progress.component.html',\n  styleUrls: ['./in-progress.component.scss']\n})\nexport class InProgressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    This feature doesn't exist yet,\n    We are working on it! ☺\n    \n        \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./in-progress.component.scss\n                \n                :host {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.5rem;\n    color: var(--bluegray-600);\n    >div {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        >div {\n            width: 250px;\n            height: 250px;\n            .pi:nth-child(1) {\n                font-size: 9rem;\n            }\n            .pi:nth-child(2) {\n                font-size: 5rem;\n            }\n            .pi:nth-child(3) {\n                font-size: 7rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    This feature doesn\\'t exist yet,    We are working on it! ☺                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'InProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tournament/pages/index/index.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./index.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bottomPaginator\n                            \n                            \n                                CategoryEnum\n                            \n                            \n                                criteria\n                            \n                            \n                                fg\n                            \n                            \n                                isAdmin\n                            \n                            \n                                StatusEnum\n                            \n                            \n                                    \n                                topPaginator\n                            \n                            \n                                total\n                            \n                            \n                                tournaments\n                            \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Private\n                                handleThenRefresh\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                paginate\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                reload\n                            \n                            \n                                search\n                            \n                            \n                                unregister\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store, _tournamentService: TournamentService, _inscriptionService: InscriptionService, _confirmationService: ConfirmationService, _messageService: MessageService, _fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _inscriptionService\n                                                  \n                                                        \n                                                                        InscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(tournament: TournamentModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                TournamentModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleThenRefresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleThenRefresh(observable: Observable, successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginate\n                        \n                    \n                \n            \n            \n                \npaginate($event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(tournament: TournamentModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                TournamentModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reload\n                        \n                    \n                \n            \n            \n                \n                    \n                    reload(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(tournament: TournamentModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pages/index/index.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                TournamentModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bottomPaginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bottomPaginator')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CategoryEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CategoryEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        criteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TournamentSearchModel\n\n                    \n                \n                \n                    \n                        Default value : { offset: 0, name: null, category: null, statuses: [], womenOnly: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StatusEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : StatusEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topPaginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Paginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topPaginator')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tournaments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TournamentModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/pages/index/index.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewChecked, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { ConfirmationService, MessageService, PrimeIcons } from 'primeng/api';\nimport { Paginator } from 'primeng/paginator';\nimport { takeUntil, switchMap, mergeMap, catchError, Observable } from 'rxjs';\nimport { RoleEnum } from 'src/app/core/enums/role.enum';\nimport { loadingStart, loadingStop } from 'src/app/core/states/loading.reducer';\nimport { SessionState } from 'src/app/core/states/session.reducer';\nimport { DestroyedComponent } from 'src/app/shared/components/destroyed.component';\nimport { CategoryEnum } from '../../enums/category.enum';\nimport { StatusEnum } from '../../enums/status.enum';\nimport { tournamentSearchForm } from '../../forms/tournament-search.form';\nimport { TournamentSearchModel } from '../../models/tournament-search.model';\nimport { TournamentModel } from '../../models/tournament.model';\nimport { InscriptionService } from '../../services/inscription.service';\nimport { TournamentService } from '../../services/tournament.service';\nimport { changeCriteria, changePage, TournamentState } from '../../states/tournament.reducers';\n\n@Component({\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent extends DestroyedComponent implements OnInit, AfterViewChecked {\n\n  @ViewChild('topPaginator') \n  topPaginator!: Paginator\n  @ViewChild('bottomPaginator') \n  bottomPaginator!: Paginator\n\n  total: number = 0;\n  criteria: TournamentSearchModel = { offset: 0, name: null, category: null, statuses: [], womenOnly: false };\n  tournaments: TournamentModel[] = [];\n  StatusEnum = StatusEnum;\n  CategoryEnum = CategoryEnum;\n\n  isAdmin: boolean = false;\n  fg!: FormGroup;\n\n  constructor(\n    private readonly _store: Store,\n    private readonly _tournamentService: TournamentService,\n    private readonly _inscriptionService: InscriptionService,\n    private readonly _confirmationService: ConfirmationService,\n    private readonly _messageService: MessageService,\n    private readonly _fb: FormBuilder,\n  ) { super(); }\n\n  ngAfterViewChecked(): void {\n    this.topPaginator.changePage((this.criteria.offset / 10));\n    this.bottomPaginator.changePage((this.criteria.offset / 10));\n  }\n\n  ngOnInit(): void {\n    this.fg = this._fb.group(tournamentSearchForm);\n    \n    this._store.select(state => state.sessionState.role).pipe(\n      takeUntil(this.destroyed$)\n      ).subscribe(role => this.isAdmin = role === RoleEnum.ADMIN);\n      \n    this._store.select(state => state.tournamentFeature.tournamentState.searchCriteria).pipe(\n      takeUntil(this.destroyed$),\n      switchMap((criteria) => {\n        this.fg.patchValue(criteria);\n        this._store.dispatch(loadingStart());\n        return this._tournamentService.get(criteria);\n      }),\n    ).subscribe({\n      next: response => this.reload(response),\n    });\n  }\n\n  paginate($event: any) {\n    if($event.page * 10 === this.criteria.offset) {\n      return;\n    }\n    this._store.dispatch(changePage({ offset: ($event.page) * 10 }));\n  }\n\n  delete(tournament: TournamentModel) {\n    this._confirmationService.confirm({\n      message: 'Êtes vous sûr de vouloir suppimer cet élément ?',\n      accept: () => {\n        this.handleThenRefresh(\n          this._tournamentService.delete(tournament.id),\n          'Le tournoi a eté supprimé'\n        );\n      }\n    })\n  }\n\n  register(tournament: TournamentModel) {\n    this.handleThenRefresh(\n      this._inscriptionService.register(tournament.id),\n      'Vous êtes inscrit au tournoi'\n    );\n  }\n\n  unregister(tournament: TournamentModel) {\n    this.handleThenRefresh(\n      this._inscriptionService.unregister(tournament.id),\n      'Vous vous êtes désinscrit du tournoi'\n    );\n  }\n\n  search() {\n    this._store.dispatch(changeCriteria({ criteria: this.fg.value }));\n  }\n\n  private handleThenRefresh(observable: Observable, successMessage: string) {\n    this._store.dispatch(loadingStart());\n    observable.pipe(\n      mergeMap(() => {\n        this._messageService.add({ severity: 'success', icon: PrimeIcons.CHECK_CIRCLE, detail: successMessage });\n        return this._tournamentService.get(this.criteria);\n      }),\n      catchError(() => this._tournamentService.get(this.criteria)),\n    ).subscribe({\n      next: response => {\n        this.reload(response);\n      },\n    });\n  }\n\n  private reload(response: any) {\n    this.tournaments = response.tournaments;\n    this.total = response.total;\n    this.criteria = response.criteria;\n    this._store.dispatch(loadingStop());\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n            \n                \n                    \n                        \n                            \n                            Nom\n                        \n                        \n                    \n                \n                \n                    \n                        \n                            \n                            Catégorie\n                        \n                        \n                    \n                \n                \n                    \n                        \n                            \n                            Statuts\n                        \n                        \n                    \n                \n                \n                    \n                        \n                            Réservé aux filles\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                \n            \n        \n    \n    \n    \n        \n            \n                Nom\n                Location\n                Categories\n                Elo\n                Statut\n                Fin des inscriptions\n                Joueurs\n                \n            \n        \n        \n            \n                {{item.name}}\n                {{item.location}}\n                \n                {{item.eloMin??0}} - {{item.eloMax??3000}}\n                {{item.status|statusToString}}\n                {{item.endOfRegistrationDate|toDate|date: 'dd/MM/yyyy'}}\n                {{item.count}}/{{item.maxPlayers}}\n                \n                    \n                    \n                    \n                    \n                    \n                \n            \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./index.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                Nom                                                                                                                                                                                                        Catégorie                                                                                                                                                                                                        Statuts                                                                                                                                                                            Réservé aux filles                                                                                                                                                                                                                                        Nom                Location                Categories                Elo                Statut                Fin des inscriptions                Joueurs                                                                        {{item.name}}                {{item.location}}                                {{item.eloMin??0}} - {{item.eloMax??3000}}                {{item.status|statusToString}}                {{item.endOfRegistrationDate|toDate|date: \\'dd/MM/yyyy\\'}}                {{item.count}}/{{item.maxPlayers}}                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InscriptionService.html":{"url":"injectables/InscriptionService.html","title":"injectable - InscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/services/inscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/services/inscription.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/inscription.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/inscription.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InscriptionService {\n\n  constructor(\n    private readonly _httpClient: HttpClient\n  ) { }\n\n  register(id: string): Observable {\n    return this._httpClient.post(environment.apiBaseUrl + '/tournamentInscription/' + id, null);\n  }\n\n  unregister(id: string): Observable {\n    return this._httpClient.delete(environment.apiBaseUrl + '/tournamentInscription/' + id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAdminGuard.html":{"url":"guards/IsAdminGuard.html","title":"guard - IsAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/is-admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/is-admin.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/is-admin.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { map, Observable } from 'rxjs';\nimport { RoleEnum } from '../enums/role.enum';\nimport { SessionState } from '../states/session.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsAdminGuard implements CanActivate {\n\n  constructor(\n    private readonly _store: Store\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      return this._store.select(state => state.sessionState.role)\n        .pipe(map(r => r === RoleEnum.ADMIN));\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsLoggedGuard.html":{"url":"guards/IsLoggedGuard.html","title":"guard - IsLoggedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsLoggedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/is-logged.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/is-logged.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/is-logged.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { SessionState } from '../states/session.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoggedGuard implements CanActivate {\n\n  constructor(\n    private readonly _store: Store\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return this._store.select(state => state.sessionState.isLogged);\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsNotLoggedGuard.html":{"url":"guards/IsNotLoggedGuard.html","title":"guard - IsNotLoggedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsNotLoggedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/is-not-logged.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/is-not-logged.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/is-not-logged.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { SessionState } from '../states/session.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsNotLoggedGuard implements CanActivate {\n  constructor(\n    private readonly _store: Store\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return this._store.select(state => !state.sessionState.isLogged);\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_LayoutModule_imports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nFooterComponent->LayoutModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nMenuButtonComponent\n\nMenuButtonComponent\n\nLayoutModule -->\n\nMenuButtonComponent->LayoutModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nLayoutModule -->\n\nMenuComponent->LayoutModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nLayoutModule -->\n\nMenuLinkComponent->LayoutModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nLayoutModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nLayoutModule->HeaderComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nLayoutModule->MenuComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLayoutModule -->\n\nSharedModule->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MenuButtonComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            MenuLinkComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            MenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { RouterModule } from '@angular/router';\nimport { MenuButtonComponent } from './components/menu-button/menu-button.component';\nimport { MenuLinkComponent } from './components/menu-link/menu-link.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    MenuComponent,\n    MenuButtonComponent,\n    MenuLinkComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent,\n    MenuComponent,\n  ]\n})\nexport class LayoutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loader/loader.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n\n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loader/loader.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/loader/loader.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { takeUntil } from 'rxjs';\nimport { DestroyedComponent } from '../destroyed.component';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent extends DestroyedComponent implements OnInit {\n\n  @Input()\n  isLoading:boolean = false;\n\n  constructor(\n    private readonly _store: Store\n  ) { super(); }\n\n  ngOnInit(): void {\n    this._store.select(state => state.loadingState).pipe(\n      takeUntil(this.destroyed$)\n    ).subscribe(isLoading => this.isLoading = isLoading);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                :host {\n    @keyframes lds-dual-ring {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    .loader-backdrop {\n        position: absolute;\n        z-index: 1000;\n        height: 100%;\n        width: 100%;\n        top: 0;\n        left: 0;\n        background-color: rgba(0,0,0,.5);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        .lds-dual-ring {\n            display: inline-block;\n            width: 80px;\n            height: 80px;\n            &:after {\n                content: \" \";\n                display: block;\n                width: 64px;\n                height: 64px;\n                margin: 8px;\n                border-radius: 50%;\n                border: 6px solid #fff;\n                border-color: #fff transparent #fff transparent;\n                animation: lds-dual-ring 1.2s linear infinite;\n              }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/pages/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fg\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fb: FormBuilder, _authService: AuthService, _store: Store, _messageService: MessageService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/pages/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/auth/pages/login/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/auth/pages/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/pages/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/pages/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { MessageService, PrimeIcons } from 'primeng/api';\nimport { sessionStart } from 'src/app/core/states/session.reducer';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  fg!: FormGroup;\n  isLoading: boolean = false;\n\n  constructor(\n    private readonly _fb: FormBuilder,\n    private readonly _authService: AuthService,\n    private readonly _store: Store,\n    private readonly _messageService: MessageService,\n    private readonly _router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.fg = this._fb.group({\n      username: [null, [Validators.required, Validators.minLength(2)]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    Object.keys(this.fg.controls).forEach((key) => {\n      this.fg.controls[key].markAsDirty();\n    });\n    if(this.fg.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this._authService.login(this.fg.value).subscribe({\n      next: response => {\n        this._store.dispatch(sessionStart(response));\n        this._messageService.add({ severity: 'info', icon: PrimeIcons.INFO_CIRCLE, detail: `Bienvenue ${response.username}` });\n        this._router.navigate(['tournament']);\n        this.isLoading = false;\n      }, error: () => {\n        this._messageService.add({ severity: 'error', icon: PrimeIcons.TIMES_CIRCLE, detail: `Connection Impossible` });\n        this.isLoading = false;\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \nConnexion\n\n\n    \n        \n            \n                \n                    \n                        \n                        Username\n                    \n                    \n                \n                \n                    \n                        \n                        Password\n                    \n                    \n                           \n                \n                    \n                \n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Connexion                                                                                                            Username                                                                                                                                            Password                                                                                                                                                   '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginModel.html":{"url":"interfaces/LoginModel.html","title":"interface - LoginModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/login.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginModel-1.html":{"url":"interfaces/LoginModel-1.html","title":"interface - LoginModel-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/login.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tournament/components/match/match.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n\n\n            \n                styleUrls\n                ./match.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _match\n                            \n                            \n                                ResultEnum\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                match\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    match\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/components/match/match.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tournament/components/match/match.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :         MatchModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tournament/components/match/match.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/components/match/match.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResult\n                        \n                    \n                \n            \n            \n                \nupdateResult(match: MatchModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/components/match/match.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                                MatchModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchModel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/components/match/match.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResultEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ResultEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/components/match/match.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n\n                \n                    \n                        getmatch()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/tournament/components/match/match.component.ts:21\n                                \n                            \n\n                \n                    \n                        setmatch(v: MatchModel)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/tournament/components/match/match.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            MatchModel\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ResultEnum } from '../../enums/result.enum';\nimport { MatchModel } from '../../models/match.model';\nimport { changeResult, TournamentState } from '../../states/tournament.reducers';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.scss']\n})\nexport class MatchComponent implements OnInit {\n\n  private _match!: MatchModel;\n\n  @Input()\n  set match(v: MatchModel) {\n    this._match = {...v};\n  }\n\n  get match(): MatchModel {\n    return this._match;\n  }\n\n  @Input()\n  disabled!: boolean;\n\n  ResultEnum = ResultEnum;\n\n  constructor(\n    private readonly _store: Store,\n  ) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  updateResult(match: MatchModel) {\n    this._store.dispatch(changeResult({ match }));\n  }\n\n}\n\n    \n\n    \n        \n    {{ match.whiteName }}\n    VS\n    {{ match.blackName }}\n    \n    \n\n\n    \n\n    \n                \n                    ./match.component.scss\n                \n                :host {\n    width: 100%;\n    display: block;\n    .match {\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ match.whiteName }}    VS    {{ match.blackName }}        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchModel.html":{"url":"interfaces/MatchModel.html","title":"interface - MatchModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MatchModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/models/match.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blackId\n                                        \n                                \n                                \n                                        \n                                            blackName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            round\n                                        \n                                \n                                \n                                        \n                                            tournamentId\n                                        \n                                \n                                \n                                        \n                                            whiteId\n                                        \n                                \n                                \n                                        \n                                            whiteName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blackId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blackId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blackName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blackName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         ResultEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResultEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whiteId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whiteId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whiteName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whiteName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResultEnum } from \"../enums/result.enum\";\n\nexport interface MatchModel {\n    id: number;\n    tournamentId: string;\n    whiteId: string\n    blackId: string;\n    whiteName: string;\n    blackName: string;\n    result: ResultEnum;\n    round: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/services/match.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/services/match.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMatch\n                        \n                    \n                \n            \n            \n                \nupdateMatch(id: number, result: ResultEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/match.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    result\n                                    \n                                                ResultEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ResultEnum } from '../enums/result.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  constructor(\n    private readonly _httpClient: HttpClient\n  ) { }\n\n  updateMatch(id: number, result: ResultEnum) {\n    return this._httpClient.patch(environment.apiBaseUrl + '/match/' + id + '/result', {result})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberComponent.html":{"url":"components/MemberComponent.html","title":"component - MemberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/member/member.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                    \n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/member/member.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/member.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { fadeAnimation } from 'src/app/shared/animations/fade.animation';\n\n@Component({\n  template: `\n    \n  `,\n  animations: [fadeAnimation],\n})\nexport class MemberComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'MemberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberModule.html":{"url":"modules/MemberModule.html","title":"module - MemberModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MemberModule\n\n\n\ncluster_MemberModule_declarations\n\n\n\ncluster_MemberModule_imports\n\n\n\n\nAddComponent\n\nAddComponent\n\n\n\nMemberModule\n\nMemberModule\n\nMemberModule -->\n\nAddComponent->MemberModule\n\n\n\n\n\nChangePasswordDialogComponent\n\nChangePasswordDialogComponent\n\nMemberModule -->\n\nChangePasswordDialogComponent->MemberModule\n\n\n\n\n\nMemberComponent\n\nMemberComponent\n\nMemberModule -->\n\nMemberComponent->MemberModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nMemberModule -->\n\nProfileComponent->MemberModule\n\n\n\n\n\nMemberRoutingModule\n\nMemberRoutingModule\n\nMemberModule -->\n\nMemberRoutingModule->MemberModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMemberModule -->\n\nSharedModule->MemberModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/member/member.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddComponent\n                        \n                        \n                            ChangePasswordDialogComponent\n                        \n                        \n                            MemberComponent\n                        \n                        \n                            ProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MemberRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MemberRoutingModule } from './member-routing.module';\nimport { MemberComponent } from './member.component';\nimport { AddComponent } from './pages/add/add.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ChangePasswordDialogComponent } from './components/change-password-dialog/change-password-dialog.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    MemberComponent,\n    AddComponent,\n    ProfileComponent,\n    ChangePasswordDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MemberRoutingModule,\n    SharedModule,\n  ]\n})\nexport class MemberModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberRoutingModule.html":{"url":"modules/MemberRoutingModule.html","title":"module - MemberRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/member/member-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormSubmittedGuard } from 'src/app/core/guards/form-submitted.guard';\nimport { IsAdminGuard } from 'src/app/core/guards/is-admin.guard';\nimport { IsLoggedGuard } from 'src/app/core/guards/is-logged.guard';\nimport { MemberComponent } from './member.component';\nimport { AddComponent } from './pages/add/add.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\n\nconst routes: Routes = [{ path: '', component: MemberComponent, children: [\n  { path: '', redirectTo: 'profile', pathMatch: 'full' },\n  { path: 'profile', component: ProfileComponent, canActivate: [ IsLoggedGuard ] },\n  { path: 'add', component: AddComponent, canActivate: [ IsLoggedGuard, IsAdminGuard ], canDeactivate: [ FormSubmittedGuard ] },\n] }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MemberRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/member/services/member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkUsername\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/member/services/member.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string, id: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/services/member.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkUsername\n                        \n                    \n                \n            \n            \n                \ncheckUsername(username: string, id: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/services/member.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(form: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/services/member.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  constructor(\n    private readonly _httpClient: HttpClient\n  ) { }\n\n  checkUsername(username: string, id: string|null): Observable {\n    let params = new HttpParams();\n    params = params.append('username', username);\n    if(id) {\n      params = params.append('id', id);\n    }\n    return this._httpClient.head(environment.apiBaseUrl + '/member/existsUsername', {params});\n  }\n\n  checkEmail(email: string, id: string|null): Observable {\n    let params = new HttpParams();\n    params = params.append('email', email);\n    if(id) {\n      params = params.append('id', id);\n    }\n    return this._httpClient.head(environment.apiBaseUrl + '/member/existsEmail', {params});\n  }\n\n  register(form: any): Observable {\n    return this._httpClient.post(environment.apiBaseUrl + '/member', form);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuButtonComponent.html":{"url":"components/MenuButtonComponent.html","title":"component - MenuButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/components/menu-button/menu-button.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-button\n            \n\n\n\n            \n                styleUrls\n                ./menu-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_menuService: MenuService, _cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/components/menu-button/menu-button.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/menu-button/menu-button.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/menu-button/menu-button.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/components/menu-button/menu-button.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { DestroyedComponent } from 'src/app/shared/components/destroyed.component';\nimport { MenuService } from '../../services/menu.service';\n\n@Component({\n  selector: 'app-menu-button',\n  templateUrl: './menu-button.component.html',\n  styleUrls: ['./menu-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuButtonComponent extends DestroyedComponent implements OnInit {\n\n  isOpen!: boolean;\n\n  constructor(\n    private readonly _menuService: MenuService,\n    private readonly _cd: ChangeDetectorRef,\n  ) { super(); }\n\n  ngOnInit(): void {\n    this._menuService.isOpen$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(isOpen => {\n        this.isOpen = isOpen;\n        this._cd.detectChanges();\n      });\n  }\n\n  onClick() {\n    this._menuService.toggle();\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./menu-button.component.scss\n                \n                :host {\n    $button-size: 20px;\n    .menu {\n        height: $button-size;\n        width: $button-size;\n        display: flex;\n        align-items: center;\n        position: relative;\n        transition: all .3s linear;\n        &:hover>div {\n            background-color: var(--bluegray-100);\n        }\n        >div {\n            position: absolute;\n            background-color: white;\n            height: calc(#{$button-size}/5);\n            width: 100%;\n            transition: transform .3s linear;\n            &:nth-child(1) {\n                transform: translateY(calc(#{$button-size}/5*-2));\n            }\n            &:nth-child(3) {\n                transform: translateY(calc(#{$button-size}/5*2));\n            }\n        }\n        &.closed {\n            transform: rotate(180deg);\n            >div {\n                &:nth-child(1) {\n                    transform: translateY(0) rotate(45deg);\n                }\n                &:nth-child(2) {\n                    opacity: 0;\n                }\n                &:nth-child(3) {\n                    transform: translateY(0) rotate(-45deg);\n                }\n            }\n        }\n    }\n    \n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'MenuButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/components/menu/menu.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                DestroyedComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n\n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Protected\n                                destroyed$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store, _menuService: MenuService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/components/menu/menu.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/menu/menu.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DestroyedComponent\n\n                \n            \n            \n                \n                        Defined in         DestroyedComponent:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/components/menu/menu.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         DestroyedComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         DestroyedComponent:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { PrimeIcons } from 'primeng/api';\nimport { filter, takeUntil, tap } from 'rxjs';\nimport { RoleEnum } from 'src/app/core/enums/role.enum';\nimport { SessionState } from 'src/app/core/states/session.reducer';\nimport { DestroyedComponent } from 'src/app/shared/components/destroyed.component';\nimport { MenuItem } from '../../interfaces/menu-item';\nimport { MenuService } from '../../services/menu.service';\n\n\nconst baseMenu: MenuItem[] = [\n  { title: 'Accueil', link: ['home'], icon: PrimeIcons.HOME },\n  { title: 'Tournois', link: ['tournament', 'index'], icon: PrimeIcons.LIST },\n];\n\nconst adminMenu: MenuItem[] = [\n  { title: 'Accueil', link: ['home'], icon: PrimeIcons.HOME },\n  { title: 'Tournois', icon: PrimeIcons.CALENDAR, children: [\n    { title: 'Index', link: ['tournament', 'index'] },\n    { title: 'Nouveau', link: ['tournament', 'add'] },\n  ] },\n  { title: 'Nouveau membre', icon: PrimeIcons.USER_PLUS, link: ['member', 'add'] },\n]\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent extends DestroyedComponent implements OnInit {\n\n  items!: MenuItem[];\n  \n  constructor(\n    private readonly _store: Store, \n    private readonly _menuService: MenuService,\n    private readonly _router: Router,\n  ) { super(); }\n\n  ngOnInit(): void {\n    this._router.events.pipe(\n      takeUntil(this.destroyed$),\n      filter(event => event instanceof NavigationStart),\n    ).subscribe(() => {\n      if(window.innerWidth > 768)\n        return;\n      this._menuService.close()\n    });\n\n    this._store.select(state => state.sessionState.role).pipe(\n      takeUntil(this.destroyed$),\n    ).subscribe(role => this.items = role === RoleEnum.ADMIN ? adminMenu : baseMenu)\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                :host {\n    display: block;\n    width: 300px;\n    >ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n}\n\n@media screen and (max-width: 768px) {\n    :host {\n        width: 100%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/interfaces/menu-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItem {\n    title: string;\n    link?: string|string[];\n    icon?: string;\n    children?: MenuItem[];\n    open?: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuLinkComponent.html":{"url":"components/MenuLinkComponent.html","title":"component - MenuLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/components/menu-link/menu-link.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                li[app-menu-link]\n            \n\n\n\n            \n                styleUrls\n                ./menu-link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/components/menu-link/menu-link.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/components/menu-link/menu-link.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/menu-link/menu-link.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(item: MenuItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/components/menu-link/menu-link.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                MenuItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { MenuItem } from '../../interfaces/menu-item';\n\n@Component({\n  selector: 'li[app-menu-link]',\n  templateUrl: './menu-link.component.html',\n  styleUrls: ['./menu-link.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuLinkComponent implements OnInit {\n\n  @Input()\n  item!: any;\n\n  constructor(\n    private readonly _cd: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  toggle(item: MenuItem) {\n    if(item.children){\n      item.open = !item.open;\n      this._cd.detectChanges();\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    {{ item.title }}\n\n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./menu-link.component.scss\n                \n                :host {\n    $link-height: 50px;\n    $border-style: 2px solid var(--bluegray-300);\n    $link-color: var(--gray-900);\n    .link {\n        height: $link-height;\n        display: flex;\n        align-items: center;\n        color: white;\n        text-decoration: none;\n        position: relative;\n        background-color: $link-color;\n        cursor: pointer;\n        &:hover {\n            background-color: var(--bluegray-600);\n        }\n        &.active::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            right: 0;\n            width: 8px;\n            height: 100%;\n            background-color: var(--blue-600);\n        }\n        >.icon {\n            width: $link-height;\n            display: flex;\n            justify-content: center;\n        }\n        >.link-title {\n            display: flex;\n            justify-content: space-between;\n            padding: 0 20px;\n            flex-grow: 1;\n        }\n    }\n    >.submenu {\n        list-style: none;\n        padding: 0;\n        margin-left: $link-height;\n        &.open {\n            > li {\n                >.link {\n                    opacity: 1;\n                    height: $link-height;\n                }\n            }\n        }\n        >li {\n            >.link {\n                overflow: hidden;\n                transition: all .3s ease;\n                opacity: 0;\n                height: 0;\n                border-left: $border-style;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ item.title }}                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'MenuLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/services/menu.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isOpen$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOpen$\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/services/menu.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/services/menu.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/services/menu.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/services/menu.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/layout/services/menu.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpen$\n                    \n                \n\n                \n                    \n                        getisOpen$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/services/menu.service.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/services/menu.service.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  private _isOpen$: BehaviorSubject = new BehaviorSubject(false);\n\n  get isOpen$(): Observable {\n    return this._isOpen$.asObservable();\n  }\n\n  get isOpen(): boolean {\n    return this._isOpen$.value;\n  }\n\n  constructor() { }\n\n  open() {\n    this._isOpen$.next(true);\n  }\n\n  close() {\n    this._isOpen$.next(false);\n  }\n\n  toggle() {\n    this._isOpen$.next(!this._isOpen$.value)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerScoreModel.html":{"url":"interfaces/PlayerScoreModel.html","title":"interface - PlayerScoreModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerScoreModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/models/tournament-details.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            defeats\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draws\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            matchPlayed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            wins\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defeats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defeats:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draws\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draws:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchPlayed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchPlayed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryEnum } from \"../enums/category.enum\";\nimport { StatusEnum } from \"../enums/status.enum\";\nimport { MatchModel } from \"./match.model\";\n\nexport interface TournamentDetailsModel {\n    id:\tstring;\n    name: string;\n    location: string;\n    minPlayers: number;\n    maxPlayers: number;\n    eloMin: number|null;\n    eloMax: number|null;\n    categories: CategoryEnum[];\n    womenOnly:boolean;\n    endOfRegistrationDate: string;\n    count:\tnumber;\n    currentRound: number;\n    status: StatusEnum;\n    canRegister: boolean;\n    isRegistered: boolean;\n    canStart: boolean;\n    canValidateRound: boolean;\n    players: PlayerScoreModel[];\n    matches: MatchModel[];\n}\n\nexport interface PlayerScoreModel {\n    id: string;\n    username: string;\n    position?: number;\n    matchPlayed?: number;\n    wins?: number;\n    defeats?: number;\n    draws?: number;\n    score?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/member/pages/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/member/pages/profile/profile.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/member/pages/profile/profile.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RoundFilterPipe.html":{"url":"pipes/RoundFilterPipe.html","title":"pipe - RoundFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RoundFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tournament/pipes/round-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        roundFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(matches: MatchModel[], round: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pipes/round-filter.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                                MatchModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MatchModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { MatchModel } from '../models/match.model';\n\n@Pipe({\n  name: 'roundFilter'\n})\nexport class RoundFilterPipe implements PipeTransform {\n\n  transform(matches: MatchModel[], round: number): MatchModel[] {\n    return matches?.filter(m => m.round === round);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionState.html":{"url":"interfaces/SessionState.html","title":"interface - SessionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/states/session.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            connectedUserName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isLogged\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectedUserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectedUserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLogged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLogged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         RoleEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleEnum\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createAction, createReducer, on, props } from \"@ngrx/store\";\nimport { RowToggler } from \"primeng/table\";\nimport { RoleEnum } from \"../enums/role.enum\";\nimport { TokenModel } from \"../models/token.model\";\n\nexport interface SessionState {\n    id?: string;\n    connectedUserName?: string;\n    token?: string;\n    isLogged: boolean;\n    role?: RoleEnum;\n}\n\nexport const sessionStart = createAction('[session] start', props());\nexport const sessionStop = createAction('[session] stop');\n\nconst initialState = { isLogged: false }\n\nexport const SessionReducer = createReducer(\n    initialState,\n    on(sessionStart, ({}, {id, username, token, role}) => ({ \n        id,\n        username, \n        token,\n        role,\n        isLogged: true \n    })),\n    on(sessionStop, () => initialState)\n);\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nCollapsePanelComponent\n\nCollapsePanelComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCollapsePanelComponent->SharedModule\n\n\n\n\n\nEnumToArrayPipe\n\nEnumToArrayPipe\n\nSharedModule -->\n\nEnumToArrayPipe->SharedModule\n\n\n\n\n\nFormErrorComponent\n\nFormErrorComponent\n\nSharedModule -->\n\nFormErrorComponent->SharedModule\n\n\n\n\n\nInProgressComponent\n\nInProgressComponent\n\nSharedModule -->\n\nInProgressComponent->SharedModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedModule -->\n\nLoaderComponent->SharedModule\n\n\n\n\n\nToDatePipe\n\nToDatePipe\n\nSharedModule -->\n\nToDatePipe->SharedModule\n\n\n\n\n\nCollapsePanelComponent \n\nCollapsePanelComponent \n\nCollapsePanelComponent  -->\n\nSharedModule->CollapsePanelComponent \n\n\n\n\n\nEnumToArrayPipe \n\nEnumToArrayPipe \n\nEnumToArrayPipe  -->\n\nSharedModule->EnumToArrayPipe \n\n\n\n\n\nFormErrorComponent \n\nFormErrorComponent \n\nFormErrorComponent  -->\n\nSharedModule->FormErrorComponent \n\n\n\n\n\nInProgressComponent \n\nInProgressComponent \n\nInProgressComponent  -->\n\nSharedModule->InProgressComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedModule->LoaderComponent \n\n\n\n\n\nToDatePipe \n\nToDatePipe \n\nToDatePipe  -->\n\nSharedModule->ToDatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsePanelComponent\n                        \n                        \n                            EnumToArrayPipe\n                        \n                        \n                            FormErrorComponent\n                        \n                        \n                            InProgressComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            ToDatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsePanelComponent\n                        \n                        \n                            EnumToArrayPipe\n                        \n                        \n                            FormErrorComponent\n                        \n                        \n                            InProgressComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            ToDatePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport { ButtonModule } from 'primeng/button';\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { DialogModule } from 'primeng/dialog';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ToastModule } from 'primeng/toast';\nimport { FormErrorComponent } from './components/form-error/form-error.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { ChipModule } from 'primeng/chip';\nimport { ToDatePipe } from './pipes/to-date.pipe';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { CalendarModule } from 'primeng/calendar';\nimport { SliderModule } from 'primeng/slider';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { StepsModule } from 'primeng/steps';\nimport { InProgressComponent } from './components/in-progress/in-progress.component';\nimport { EnumToArrayPipe } from './pipes/enum-to-array.pipe';\nimport { CollapsePanelComponent } from './components/collapse-panel/collapse-panel.component';\n\n\n\n@NgModule({\n  declarations: [\n    FormErrorComponent,\n    LoaderComponent,\n    ToDatePipe,\n    InProgressComponent,\n    EnumToArrayPipe,\n    CollapsePanelComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CardModule,\n    ButtonModule,\n    TableModule,\n    InputTextModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputSwitchModule,\n    DialogModule,\n    ConfirmDialogModule,\n    ToastModule,\n    ChipModule,\n    PaginatorModule,\n    DropdownModule,\n    MultiSelectModule,\n    CalendarModule,\n    SliderModule,\n    TooltipModule,\n    StepsModule,\n  ],\n  exports: [\n    // modules\n    FormsModule,\n    ReactiveFormsModule,\n    CardModule,\n    ButtonModule,\n    TableModule,\n    InputTextModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputSwitchModule,\n    DialogModule,\n    ConfirmDialogModule,\n    ToastModule,\n    ChipModule,\n    PaginatorModule,\n    DropdownModule,\n    MultiSelectModule,\n    CalendarModule,\n    SliderModule,\n    TooltipModule,\n    StepsModule,\n    // components\n    FormErrorComponent,\n    LoaderComponent,\n    InProgressComponent,\n    CollapsePanelComponent,\n    // directives\n    \n    // pipes\n    ToDatePipe,\n    EnumToArrayPipe,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StatusToStringPipe.html":{"url":"pipes/StatusToStringPipe.html","title":"pipe - StatusToStringPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StatusToStringPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tournament/pipes/status-to-string.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        statusToString\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: StatusEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/pipes/status-to-string.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                StatusEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { StatusEnum } from '../enums/status.enum';\n\n@Pipe({\n  name: 'statusToString'\n})\nexport class StatusToStringPipe implements PipeTransform {\n\n  transform(value: StatusEnum): string {\n    switch(value) {\n      case StatusEnum.WAITING_FOR_PLAYERS:\n        return 'En Attente';\n      case StatusEnum.IN_PROGRESS:\n        return 'En Cours';\n      case StatusEnum.CLOSED:\n        return 'Terminé';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToDatePipe.html":{"url":"pipes/ToDatePipe.html","title":"pipe - ToDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/to-date.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toDate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/to-date.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Date | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toDate'\n})\nexport class ToDatePipe implements PipeTransform {\n\n  transform(value?: string): Date|null {\n    if(!value)\n      return null;\n    return new Date(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/token.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/token.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/token.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { exhaustMap, first, Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { SessionState } from '../states/session.reducer';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(\n    private readonly _store: Store\n  ) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return this._store.select(state => state.sessionState.token).pipe(first(), exhaustMap(token => {\n      if(token) {\n        const clone = request.clone({setHeaders: { Authorization: 'Bearer ' + token }});\n        return next.handle(clone);\n      }\n      return next.handle(request);\n    }))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenModel.html":{"url":"interfaces/TokenModel.html","title":"interface - TokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/token.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         RoleEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RoleEnum } from \"../enums/role.enum\";\n\nexport interface TokenModel {\n    token: string;\n    id: string;\n    username: string;\n    role: RoleEnum;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tournament/tournament.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                    \n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/tournament.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/tournament.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { fadeAnimation } from 'src/app/shared/animations/fade.animation';\n\n@Component({\n  template: `\n    \n  `,\n  animations: [fadeAnimation],\n})\nexport class TournamentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': ''},{'name': 'AddComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': ''},{'name': 'ChangePasswordDialogComponent', 'selector': 'app-change-password-dialog'},{'name': 'CollapsePanelComponent', 'selector': 'app-collapse-panel'},{'name': 'DetailsComponent', 'selector': ''},{'name': 'EditComponent', 'selector': ''},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormErrorComponent', 'selector': 'app-form-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': ''},{'name': 'IndexComponent', 'selector': ''},{'name': 'InProgressComponent', 'selector': 'app-in-progress'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MemberComponent', 'selector': ''},{'name': 'MenuButtonComponent', 'selector': 'app-menu-button'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuLinkComponent', 'selector': 'li[app-menu-link]'},{'name': 'ProfileComponent', 'selector': ''},{'name': 'TournamentComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DestroyedComponent', 'selector': ''}];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TournamentDetailsModel.html":{"url":"interfaces/TournamentDetailsModel.html","title":"interface - TournamentDetailsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TournamentDetailsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/models/tournament-details.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canRegister\n                                        \n                                \n                                \n                                        \n                                            canStart\n                                        \n                                \n                                \n                                        \n                                            canValidateRound\n                                        \n                                \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            currentRound\n                                        \n                                \n                                \n                                        \n                                            eloMax\n                                        \n                                \n                                \n                                        \n                                            eloMin\n                                        \n                                \n                                \n                                        \n                                            endOfRegistrationDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isRegistered\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            matches\n                                        \n                                \n                                \n                                        \n                                            maxPlayers\n                                        \n                                \n                                \n                                        \n                                            minPlayers\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            players\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            womenOnly\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canRegister\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRegister:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canStart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canValidateRound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canValidateRound:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         CategoryEnum[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CategoryEnum[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentRound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentRound:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eloMax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eloMax:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eloMin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eloMin:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endOfRegistrationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endOfRegistrationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRegistered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRegistered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches:         MatchModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MatchModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        players\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        players:         PlayerScoreModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlayerScoreModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StatusEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StatusEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        womenOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        womenOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryEnum } from \"../enums/category.enum\";\nimport { StatusEnum } from \"../enums/status.enum\";\nimport { MatchModel } from \"./match.model\";\n\nexport interface TournamentDetailsModel {\n    id:\tstring;\n    name: string;\n    location: string;\n    minPlayers: number;\n    maxPlayers: number;\n    eloMin: number|null;\n    eloMax: number|null;\n    categories: CategoryEnum[];\n    womenOnly:boolean;\n    endOfRegistrationDate: string;\n    count:\tnumber;\n    currentRound: number;\n    status: StatusEnum;\n    canRegister: boolean;\n    isRegistered: boolean;\n    canStart: boolean;\n    canValidateRound: boolean;\n    players: PlayerScoreModel[];\n    matches: MatchModel[];\n}\n\nexport interface PlayerScoreModel {\n    id: string;\n    username: string;\n    position?: number;\n    matchPlayed?: number;\n    wins?: number;\n    defeats?: number;\n    draws?: number;\n    score?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentEffects.html":{"url":"injectables/TournamentEffects.html","title":"injectable - TournamentEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TournamentEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/states/tournament.reducers.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeResult$\n                            \n                            \n                                selectTournament\n                            \n                            \n                                startTournament$\n                            \n                            \n                                validateRoudResult$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_actions$: Actions, _tournamentService: TournamentService, _matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/states/tournament.reducers.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tournamentService\n                                                  \n                                                        \n                                                                        TournamentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeResult$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this._actions$.pipe(\n        ofType(changeResult),\n        switchMap(({match}) => this._matchService.updateMatch(match.id, match.result).pipe(\n            map(() => selectTournament({id: match.tournamentId}))\n        )),\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/states/tournament.reducers.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTournament\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this._actions$.pipe(\n        ofType(selectTournament),\n        switchMap(({id}) => this._tournamentService.getDetails(id).pipe(\n            map(tournament => loadSelectedTournament({tournament})),\n            catchError(() => EMPTY),\n            startWith(loadingStart()),\n            endWith(loadingStop()),\n        )),\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/states/tournament.reducers.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTournament$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this._actions$.pipe(\n        ofType(startTournament),\n        switchMap(({id}) => this._tournamentService.start(id).pipe(\n            map(() => selectTournament({id}))\n        )),\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/states/tournament.reducers.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRoudResult$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this._actions$.pipe(\n        ofType(validateRoundResults),\n        switchMap(({id}) => this._tournamentService.nextRound(id).pipe(\n            map(() => selectTournament({id}))\n        )),\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/tournament/states/tournament.reducers.ts:79\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { createAction, createReducer, on, props, Store } from \"@ngrx/store\";\nimport { catchError, EMPTY, endWith, map, startWith, switchMap } from \"rxjs\";\nimport { loadingStart, loadingStop } from \"src/app/core/states/loading.reducer\";\nimport { ResultEnum } from \"../enums/result.enum\";\nimport { MatchModel } from \"../models/match.model\";\nimport { TournamentDetailsModel } from \"../models/tournament-details.model\";\nimport { TournamentSearchModel } from \"../models/tournament-search.model\";\nimport { MatchService } from \"../services/match.service\";\nimport { TournamentService } from \"../services/tournament.service\";\n\nexport interface TournamentState {\n    searchCriteria: TournamentSearchModel,\n    selectedTournament: TournamentDetailsModel,\n    selectedTab: number;\n}\n\nexport const changeCriteria = createAction('[tournament] change criteria', props());\nexport const changePage = createAction('[tournament] change page', props());\n\n\nexport const selectTournament = createAction('[tournament] select tournament', props());\nexport const startTournament = createAction('[tournament] start', props());\nexport const changeResult = createAction('[tournament] change result', props());\nexport const validateRoundResults = createAction('[tournament] validateRoundResults', props());\n\nexport const loadSelectedTournament = createAction('[tournament] load selected', props());\nexport const changeTab = createAction('[tournament] change tab', props());\n\nconst initialState = { \n    searchCriteria: { offset: 0, name: null },\n    selectedTournament: {},\n    selectedTab: -1,\n};\n\nexport const TournamentReducer = createReducer(\n    initialState,\n    on(changeCriteria, (state, {criteria}) => ({ \n        ...state,\n        searchCriteria: { ...state.searchCriteria, ...criteria },\n    })),\n    on(changePage, (state, {offset}) => ({ \n        ...state,\n        searchCriteria: { ...state.searchCriteria, offset: offset },\n    })),\n    on(loadSelectedTournament, (state, {tournament}) => ({\n        ...state,\n        selectedTab: tournament.currentRound - 1,\n        selectedTournament:  calculateTournamentScore(tournament.currentRound, tournament)\n    })),\n    on(changeTab, (state, {tab}) => ({\n        ...state,\n        selectedTab: tab,\n        selectedTournament:  calculateTournamentScore(tab + 1, state.selectedTournament)\n    })),\n);\n\n@Injectable()\nexport class TournamentEffects {\n\n    selectTournament = createEffect(() => this._actions$.pipe(\n        ofType(selectTournament),\n        switchMap(({id}) => this._tournamentService.getDetails(id).pipe(\n            map(tournament => loadSelectedTournament({tournament})),\n            catchError(() => EMPTY),\n            startWith(loadingStart()),\n            endWith(loadingStop()),\n        )),\n    ));\n\n    startTournament$ = createEffect(() => this._actions$.pipe(\n        ofType(startTournament),\n        switchMap(({id}) => this._tournamentService.start(id).pipe(\n            map(() => selectTournament({id}))\n        )),\n    ));\n\n    validateRoudResult$ = createEffect(() => this._actions$.pipe(\n        ofType(validateRoundResults),\n        switchMap(({id}) => this._tournamentService.nextRound(id).pipe(\n            map(() => selectTournament({id}))\n        )),\n    ));\n\n    changeResult$ = createEffect(() => this._actions$.pipe(\n        ofType(changeResult),\n        switchMap(({match}) => this._matchService.updateMatch(match.id, match.result).pipe(\n            map(() => selectTournament({id: match.tournamentId}))\n        )),\n    ));\n\n    constructor(\n        private readonly _actions$: Actions,\n        private readonly _tournamentService: TournamentService,\n        private readonly _matchService: MatchService,\n    ) {}\n}\n\n\nconst calculateTournamentScore = (round: number, tournament: TournamentDetailsModel) => ({ \n    ...tournament,\n    canValidateRound: tournament.matches.filter(m => m.round === round).every(m => m.result !== ResultEnum.NOT_PLAYED),\n    players :([ ...tournament?.players.map(p => ({\n        ...p,\n        matchPlayed: tournament?.matches\n            .filter(m => m.round  prev + 1, 0),\n        wins: tournament?.matches\n            .filter(m => m.round  (m.blackId === p.id && m.result === ResultEnum.BLACK_WIN) || (m.whiteId === p.id && m.result === ResultEnum.WHITE_WIN))\n            .reduce((prev, current) => prev + 1, 0),\n        defeats: tournament?.matches\n            .filter(m => m.round  (m.blackId === p.id && m.result === ResultEnum.WHITE_WIN) || (m.whiteId === p.id && m.result === ResultEnum.BLACK_WIN))\n            .reduce((prev, current) => prev + 1, 0),\n        draws: tournament?.matches\n            .filter(m => m.round  m.result === ResultEnum.DRAW)\n            .reduce((prev, current) => prev + 1, 0)\n    })) ]\n    .sort((p1, p2) => (p2.wins + p2.draws * 0.5) - (p1.wins + p1.draws * 0.5))\n    .reduce((prev: any[], current, index) => {\n        current.score = current.wins + current.draws * 0.5;\n        current.position = prev[prev.length-1]?.score === current.score ? prev[prev.length-1]?.position : (index + 1);\n        return [...prev, current];\n    }, [])\n)});\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TournamentFormModel.html":{"url":"interfaces/TournamentFormModel.html","title":"interface - TournamentFormModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TournamentFormModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/models/tournament-form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            eloMax\n                                        \n                                \n                                \n                                        \n                                            eloMin\n                                        \n                                \n                                \n                                        \n                                            endOfRegistrationDate\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            maxPlayers\n                                        \n                                \n                                \n                                        \n                                            minPlayers\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            womenOnly\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         CategoryEnum[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CategoryEnum[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eloMax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eloMax:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eloMin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eloMin:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endOfRegistrationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endOfRegistrationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        womenOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        womenOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryEnum } from \"../enums/category.enum\";\n\nexport interface TournamentFormModel {\n    name: string;\n    location: string;\n    minPlayers: number;\n    maxPlayers: number;\n    eloMin:\tnumber|null;\n    eloMax: number|null\n    categories: CategoryEnum[];\n    womenOnly: boolean\n    endOfRegistrationDate: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TournamentModel.html":{"url":"interfaces/TournamentModel.html","title":"interface - TournamentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TournamentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/models/tournament.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canRegister\n                                        \n                                \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            currentRound\n                                        \n                                \n                                \n                                        \n                                            eloMax\n                                        \n                                \n                                \n                                        \n                                            eloMin\n                                        \n                                \n                                \n                                        \n                                            endOfRegistrationDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isRegistered\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            maxPlayers\n                                        \n                                \n                                \n                                        \n                                            minPlayers\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            womenOnly\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canRegister\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRegister:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         CategoryEnum[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CategoryEnum[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentRound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentRound:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eloMax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eloMax:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eloMin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eloMin:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endOfRegistrationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endOfRegistrationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRegistered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRegistered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StatusEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StatusEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        womenOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        womenOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryEnum } from \"../enums/category.enum\";\nimport { StatusEnum } from \"../enums/status.enum\";\n\nexport interface TournamentModel {\n    id:\tstring;\n    name: string;\n    location: string;\n    minPlayers: number;\n    maxPlayers: number;\n    eloMin: number|null;\n    eloMax: number|null;\n    categories: CategoryEnum[];\n    womenOnly: boolean;\n    endOfRegistrationDate: string;\n    count:\tnumber;\n    currentRound: number;\n    status: StatusEnum;\n    canRegister: boolean;\n    isRegistered: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nDetailsComponent->TournamentModule\n\n\n\n\n\nEditComponent\n\nEditComponent\n\nTournamentModule -->\n\nEditComponent->TournamentModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nTournamentModule -->\n\nIndexComponent->TournamentModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nTournamentModule -->\n\nMatchComponent->TournamentModule\n\n\n\n\n\nRoundFilterPipe\n\nRoundFilterPipe\n\nTournamentModule -->\n\nRoundFilterPipe->TournamentModule\n\n\n\n\n\nStatusToStringPipe\n\nStatusToStringPipe\n\nTournamentModule -->\n\nStatusToStringPipe->TournamentModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentsRoutingModule\n\nTournamentsRoutingModule\n\nTournamentModule -->\n\nTournamentsRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tournament/tournament.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsComponent\n                        \n                        \n                            EditComponent\n                        \n                        \n                            IndexComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            RoundFilterPipe\n                        \n                        \n                            StatusToStringPipe\n                        \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TournamentsRoutingModule } from './tournament-routing.module';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { IndexComponent } from './pages/index/index.component';\nimport { AddComponent } from './pages/add/add.component';\nimport { EditComponent } from './pages/edit/edit.component';\nimport { StoreModule } from '@ngrx/store';\nimport { TournamentEffects, TournamentReducer } from './states/tournament.reducers';\nimport { StatusToStringPipe } from './pipes/status-to-string.pipe';\nimport { DetailsComponent } from './pages/details/details.component';\nimport { MatchComponent } from './components/match/match.component';\nimport { RoundFilterPipe } from './pipes/round-filter.pipe';\nimport { EffectsModule } from '@ngrx/effects';\n\n\n@NgModule({\n  declarations: [\n    TournamentComponent,\n    IndexComponent,\n    AddComponent,\n    EditComponent,\n    StatusToStringPipe,\n    DetailsComponent,\n    MatchComponent,\n    RoundFilterPipe,\n  ],\n  imports: [\n    CommonModule,\n    TournamentsRoutingModule,\n    SharedModule,\n    StoreModule.forFeature('tournamentFeature', { tournamentState: TournamentReducer }),\n    EffectsModule.forFeature([TournamentEffects]),\n  ]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TournamentSearchModel.html":{"url":"interfaces/TournamentSearchModel.html","title":"interface - TournamentSearchModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TournamentSearchModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/models/tournament-search.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            offset\n                                        \n                                \n                                \n                                        \n                                            statuses\n                                        \n                                \n                                \n                                        \n                                            womenOnly\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         CategoryEnum | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CategoryEnum | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statuses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statuses:         StatusEnum[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StatusEnum[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        womenOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        womenOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryEnum } from \"../enums/category.enum\";\nimport { StatusEnum } from \"../enums/status.enum\";\n\nexport interface TournamentSearchModel {\n    offset: number;\n    name: string|null;\n    category: CategoryEnum|null;\n    statuses: StatusEnum[];\n    womenOnly: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentService.html":{"url":"injectables/TournamentService.html","title":"injectable - TournamentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TournamentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/services/tournament.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getDetails\n                            \n                            \n                                nextRound\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tournament/services/tournament.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(tournament: TournamentFormModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/tournament.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournament\n                                    \n                                                TournamentFormModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/tournament.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(criteria: TournamentSearchModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/tournament.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                TournamentSearchModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/tournament.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRound\n                        \n                    \n                \n            \n            \n                \nnextRound(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/tournament.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/tournament/services/tournament.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { HttpUtils } from 'src/app/core/utils/http.utils';\nimport { environment } from 'src/environments/environment';\nimport { TournamentSearchModel } from '../models/tournament-search.model';\nimport { TournamentFormModel } from '../models/tournament-form.model';\nimport { TournamentModel } from '../models/tournament.model';\nimport { TournamentDetailsModel } from '../models/tournament-details.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TournamentService {\n\n  constructor(\n    private readonly _httpClient: HttpClient\n  ) { }\n\n  get(criteria: TournamentSearchModel): Observable {\n    const params = HttpUtils.createHttpParams(criteria);\n    return this._httpClient.get(environment.apiBaseUrl + '/tournament', {params}).pipe(\n      map(({total, results}) => ({\n        tournaments: results,\n        total: total,\n        criteria\n      }))\n    );\n  }\n\n  getDetails(id: string): Observable {\n    return this._httpClient.get(environment.apiBaseUrl + '/tournament/' + id);\n  }\n\n  add(tournament: TournamentFormModel): Observable {\n    return this._httpClient.post(environment.apiBaseUrl + '/tournament', tournament);\n  }\n\n  delete(id: string): Observable {\n    return this._httpClient.delete(environment.apiBaseUrl + '/tournament/' + id);\n  }\n\n  start(id: string) : Observable {\n    return this._httpClient.patch(environment.apiBaseUrl + '/tournament/' + id + '/start', null);\n  }\n\n  nextRound(id: string): Observable {\n    return this._httpClient.patch(environment.apiBaseUrl + '/tournament/' + id + '/nextRound', null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TournamentState.html":{"url":"interfaces/TournamentState.html","title":"interface - TournamentState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TournamentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tournament/states/tournament.reducers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            searchCriteria\n                                        \n                                \n                                \n                                        \n                                            selectedTab\n                                        \n                                \n                                \n                                        \n                                            selectedTournament\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        searchCriteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchCriteria:         TournamentSearchModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TournamentSearchModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedTab:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedTournament\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedTournament:         TournamentDetailsModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TournamentDetailsModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { createAction, createReducer, on, props, Store } from \"@ngrx/store\";\nimport { catchError, EMPTY, endWith, map, startWith, switchMap } from \"rxjs\";\nimport { loadingStart, loadingStop } from \"src/app/core/states/loading.reducer\";\nimport { ResultEnum } from \"../enums/result.enum\";\nimport { MatchModel } from \"../models/match.model\";\nimport { TournamentDetailsModel } from \"../models/tournament-details.model\";\nimport { TournamentSearchModel } from \"../models/tournament-search.model\";\nimport { MatchService } from \"../services/match.service\";\nimport { TournamentService } from \"../services/tournament.service\";\n\nexport interface TournamentState {\n    searchCriteria: TournamentSearchModel,\n    selectedTournament: TournamentDetailsModel,\n    selectedTab: number;\n}\n\nexport const changeCriteria = createAction('[tournament] change criteria', props());\nexport const changePage = createAction('[tournament] change page', props());\n\n\nexport const selectTournament = createAction('[tournament] select tournament', props());\nexport const startTournament = createAction('[tournament] start', props());\nexport const changeResult = createAction('[tournament] change result', props());\nexport const validateRoundResults = createAction('[tournament] validateRoundResults', props());\n\nexport const loadSelectedTournament = createAction('[tournament] load selected', props());\nexport const changeTab = createAction('[tournament] change tab', props());\n\nconst initialState = { \n    searchCriteria: { offset: 0, name: null },\n    selectedTournament: {},\n    selectedTab: -1,\n};\n\nexport const TournamentReducer = createReducer(\n    initialState,\n    on(changeCriteria, (state, {criteria}) => ({ \n        ...state,\n        searchCriteria: { ...state.searchCriteria, ...criteria },\n    })),\n    on(changePage, (state, {offset}) => ({ \n        ...state,\n        searchCriteria: { ...state.searchCriteria, offset: offset },\n    })),\n    on(loadSelectedTournament, (state, {tournament}) => ({\n        ...state,\n        selectedTab: tournament.currentRound - 1,\n        selectedTournament:  calculateTournamentScore(tournament.currentRound, tournament)\n    })),\n    on(changeTab, (state, {tab}) => ({\n        ...state,\n        selectedTab: tab,\n        selectedTournament:  calculateTournamentScore(tab + 1, state.selectedTournament)\n    })),\n);\n\n@Injectable()\nexport class TournamentEffects {\n\n    selectTournament = createEffect(() => this._actions$.pipe(\n        ofType(selectTournament),\n        switchMap(({id}) => this._tournamentService.getDetails(id).pipe(\n            map(tournament => loadSelectedTournament({tournament})),\n            catchError(() => EMPTY),\n            startWith(loadingStart()),\n            endWith(loadingStop()),\n        )),\n    ));\n\n    startTournament$ = createEffect(() => this._actions$.pipe(\n        ofType(startTournament),\n        switchMap(({id}) => this._tournamentService.start(id).pipe(\n            map(() => selectTournament({id}))\n        )),\n    ));\n\n    validateRoudResult$ = createEffect(() => this._actions$.pipe(\n        ofType(validateRoundResults),\n        switchMap(({id}) => this._tournamentService.nextRound(id).pipe(\n            map(() => selectTournament({id}))\n        )),\n    ));\n\n    changeResult$ = createEffect(() => this._actions$.pipe(\n        ofType(changeResult),\n        switchMap(({match}) => this._matchService.updateMatch(match.id, match.result).pipe(\n            map(() => selectTournament({id: match.tournamentId}))\n        )),\n    ));\n\n    constructor(\n        private readonly _actions$: Actions,\n        private readonly _tournamentService: TournamentService,\n        private readonly _matchService: MatchService,\n    ) {}\n}\n\n\nconst calculateTournamentScore = (round: number, tournament: TournamentDetailsModel) => ({ \n    ...tournament,\n    canValidateRound: tournament.matches.filter(m => m.round === round).every(m => m.result !== ResultEnum.NOT_PLAYED),\n    players :([ ...tournament?.players.map(p => ({\n        ...p,\n        matchPlayed: tournament?.matches\n            .filter(m => m.round  prev + 1, 0),\n        wins: tournament?.matches\n            .filter(m => m.round  (m.blackId === p.id && m.result === ResultEnum.BLACK_WIN) || (m.whiteId === p.id && m.result === ResultEnum.WHITE_WIN))\n            .reduce((prev, current) => prev + 1, 0),\n        defeats: tournament?.matches\n            .filter(m => m.round  (m.blackId === p.id && m.result === ResultEnum.WHITE_WIN) || (m.whiteId === p.id && m.result === ResultEnum.BLACK_WIN))\n            .reduce((prev, current) => prev + 1, 0),\n        draws: tournament?.matches\n            .filter(m => m.round  m.result === ResultEnum.DRAW)\n            .reduce((prev, current) => prev + 1, 0)\n    })) ]\n    .sort((p1, p2) => (p2.wins + p2.draws * 0.5) - (p1.wins + p1.draws * 0.5))\n    .reduce((prev: any[], current, index) => {\n        current.score = current.wins + current.draws * 0.5;\n        current.position = prev[prev.length-1]?.score === current.score ? prev[prev.length-1]?.position : (index + 1);\n        return [...prev, current];\n    }, [])\n)});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentsRoutingModule.html":{"url":"modules/TournamentsRoutingModule.html","title":"module - TournamentsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tournament/tournament-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormSubmittedGuard } from 'src/app/core/guards/form-submitted.guard';\nimport { IsAdminGuard } from 'src/app/core/guards/is-admin.guard';\nimport { AddComponent } from './pages/add/add.component';\nimport { DetailsComponent } from './pages/details/details.component';\nimport { EditComponent } from './pages/edit/edit.component';\nimport { IndexComponent } from './pages/index/index.component';\nimport { TournamentComponent } from './tournament.component';\n\nconst routes: Routes = [{ path: '', component: TournamentComponent, children: [\n  { path: '', redirectTo: 'index', pathMatch: 'full' },\n  { path: 'index', component: IndexComponent },\n  { path: 'add', component: AddComponent, canActivate: [ IsAdminGuard ], canDeactivate: [ FormSubmittedGuard ] },\n  { path: 'edit/:id', component: EditComponent, canActivate: [ IsAdminGuard ], canDeactivate: [ FormSubmittedGuard ] },\n  { path: 'details/:id', component: DetailsComponent },\n] }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TournamentsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            elo\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n    id: string;\n    username: string;\n    email: string;\n    birthDate: Date;\n    elo: number;\n    gender: string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            localStorageSyncReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/form-submitted.guard.ts\n            \n            guard\n            FormSubmittedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/is-admin.guard.ts\n            \n            guard\n            IsAdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/is-logged.guard.ts\n            \n            guard\n            IsLoggedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/is-not-logged.guard.ts\n            \n            guard\n            IsNotLoggedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/has-form.ts\n            \n            interface\n            HasForm\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/login.model.ts\n            \n            interface\n            LoginModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/token.model.ts\n            \n            interface\n            TokenModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/states/loading.reducer.ts\n            \n            variable\n            LoadingReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/states/loading.reducer.ts\n            \n            variable\n            loadingStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/states/loading.reducer.ts\n            \n            variable\n            loadingStop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/states/session.reducer.ts\n            \n            interface\n            SessionState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/states/session.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/states/session.reducer.ts\n            \n            variable\n            SessionReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/states/session.reducer.ts\n            \n            variable\n            sessionStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/states/session.reducer.ts\n            \n            variable\n            sessionStop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/http.utils.ts\n            \n            class\n            HttpUtils\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/async.validators.ts\n            \n            class\n            AsyncValidators\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/compare.validators.ts\n            \n            class\n            CompareValidators\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/date.validators.ts\n            \n            class\n            DateValidators\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/auth/models/login.model.ts\n            \n            interface\n            LoginModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/auth/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/features/auth/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/member/components/change-password-dialog/change-password-dialog.component.ts\n            \n            component\n            ChangePasswordDialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/member/forms/register.form.ts\n            \n            variable\n            registerForm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/member/member.component.ts\n            \n            component\n            MemberComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/member/pages/add/add.component.ts\n            \n            component\n            AddComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/member/pages/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/member/services/member.service.ts\n            \n            injectable\n            MemberService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/tournament/components/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/features/tournament/forms/tournament-search.form.ts\n            \n            variable\n            tournamentSearchForm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/forms/tournament.form.ts\n            \n            variable\n            tournamentForm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/models/match.model.ts\n            \n            interface\n            MatchModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/tournament/models/tournament-details.model.ts\n            \n            interface\n            PlayerScoreModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/tournament/models/tournament-details.model.ts\n            \n            interface\n            TournamentDetailsModel\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/features/tournament/models/tournament-form.model.ts\n            \n            interface\n            TournamentFormModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/features/tournament/models/tournament-search.model.ts\n            \n            interface\n            TournamentSearchModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/tournament/models/tournament.model.ts\n            \n            interface\n            TournamentModel\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/features/tournament/pages/add/add.component.ts\n            \n            component\n            AddComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/features/tournament/pages/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/tournament/pages/edit/edit.component.ts\n            \n            component\n            EditComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/tournament/pages/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/features/tournament/pipes/round-filter.pipe.ts\n            \n            pipe\n            RoundFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/pipes/status-to-string.pipe.ts\n            \n            pipe\n            StatusToStringPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/services/inscription.service.ts\n            \n            injectable\n            InscriptionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/tournament/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/tournament/services/tournament.service.ts\n            \n            injectable\n            TournamentService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            injectable\n            TournamentEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            interface\n            TournamentState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            calculateTournamentScore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            changeCriteria\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            changePage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            changeResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            changeTab\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            loadSelectedTournament\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            selectTournament\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            startTournament\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            TournamentReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/states/tournament.reducers.ts\n            \n            variable\n            validateRoundResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/layout/components/menu-button/menu-button.component.ts\n            \n            component\n            MenuButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/layout/components/menu-link/menu-link.component.ts\n            \n            component\n            MenuLinkComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layout/components/menu/menu.component.ts\n            \n            variable\n            adminMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/components/menu/menu.component.ts\n            \n            variable\n            baseMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/interfaces/menu-item.ts\n            \n            interface\n            MenuItem\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layout/services/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/animations/fade.animation.ts\n            \n            variable\n            endState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/animations/fade.animation.ts\n            \n            variable\n            fadeAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/animations/fade.animation.ts\n            \n            variable\n            startState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/collapse-panel/collapse-panel.component.ts\n            \n            component\n            CollapsePanelComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/destroyed.component.ts\n            \n            directive\n            DestroyedComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/form-error/form-error.component.ts\n            \n            component\n            FormErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/in-progress/in-progress.component.ts\n            \n            component\n            InProgressComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/enum-to-array.pipe.ts\n            \n            pipe\n            EnumToArrayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/to-date.pipe.ts\n            \n            pipe\n            ToDatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.1.0\n        \n            @angular/common : ~14.1.0\n        \n            @angular/compiler : ~14.1.0\n        \n            @angular/core : ~14.1.0\n        \n            @angular/forms : ~14.1.0\n        \n            @angular/platform-browser : ~14.1.0\n        \n            @angular/platform-browser-dynamic : ~14.1.0\n        \n            @angular/router : ~14.1.0\n        \n            @ngrx/effects : ^14.0.2\n        \n            @ngrx/store : ^14.0.2\n        \n            @ngrx/store-devtools : ^14.0.2\n        \n            ngrx-store-localstorage : ^14.0.0\n        \n            primeflex : ^3.2.1\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^14.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryEnum   (src/.../category.enum.ts)\n                        \n                        \n                            GenderEnum   (src/.../gender.enum.ts)\n                        \n                        \n                            ResultEnum   (src/.../result.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../role.enum.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/features/tournament/enums/category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CategoryEnum\n                    \n                \n                        \n                            \n                                 JUNIOR\n                            \n                        \n                        \n                            \n                                Value : Junior\n                            \n                        \n                        \n                            \n                                 SENIOR\n                            \n                        \n                        \n                            \n                                Value : Senior\n                            \n                        \n                        \n                            \n                                 VETERAN\n                            \n                        \n                        \n                            \n                                Value : Veteran\n                            \n                        \n            \n        \n\n    src/app/features/member/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GenderEnum\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : Male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : Female\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n    src/app/features/tournament/enums/result.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResultEnum\n                    \n                \n                        \n                            \n                                 NOT_PLAYED\n                            \n                        \n                        \n                            \n                                Value : NotPlayed\n                            \n                        \n                        \n                            \n                                 WHITE_WIN\n                            \n                        \n                        \n                            \n                                Value : WhiteWin\n                            \n                        \n                        \n                            \n                                 BLACK_WIN\n                            \n                        \n                        \n                            \n                                Value : BlackWin\n                            \n                        \n                        \n                            \n                                 DRAW\n                            \n                        \n                        \n                            \n                                Value : Draw\n                            \n                        \n            \n        \n\n    src/app/core/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n                        \n                            \n                                 PLAYER\n                            \n                        \n                        \n                            \n                                Value : Player\n                            \n                        \n            \n        \n\n    src/app/features/tournament/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 WAITING_FOR_PLAYERS\n                            \n                        \n                        \n                            \n                                Value : WaitingForPlayers\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : InProgress\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                Value : Closed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            localStorageSyncReducer   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_MemberModule\n\n\n\ncluster_MemberModule_declarations\n\n\n\ncluster_MemberModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nLayoutModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nLayoutModule->HeaderComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nLayoutModule->MenuComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nLayoutModule -->\n\nSharedModule->LayoutModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nMemberModule\n\nMemberModule\n\nMemberModule -->\n\nSharedModule->MemberModule\n\n\n\n\n\nCollapsePanelComponent \n\nCollapsePanelComponent \n\nCollapsePanelComponent  -->\n\nSharedModule->CollapsePanelComponent \n\n\n\n\n\nEnumToArrayPipe \n\nEnumToArrayPipe \n\nEnumToArrayPipe  -->\n\nSharedModule->EnumToArrayPipe \n\n\n\n\n\nFormErrorComponent \n\nFormErrorComponent \n\nFormErrorComponent  -->\n\nSharedModule->FormErrorComponent \n\n\n\n\n\nInProgressComponent \n\nInProgressComponent \n\nInProgressComponent  -->\n\nSharedModule->InProgressComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedModule->LoaderComponent \n\n\n\n\n\nToDatePipe \n\nToDatePipe \n\nToDatePipe  -->\n\nSharedModule->ToDatePipe \n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nLayoutModule -->\n\nFooterComponent->LayoutModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nMenuButtonComponent\n\nMenuButtonComponent\n\nLayoutModule -->\n\nMenuButtonComponent->LayoutModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nLayoutModule -->\n\nMenuComponent->LayoutModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nLayoutModule -->\n\nMenuLinkComponent->LayoutModule\n\n\n\n\n\nAddComponent\n\nAddComponent\n\nMemberModule -->\n\nAddComponent->MemberModule\n\n\n\n\n\nChangePasswordDialogComponent\n\nChangePasswordDialogComponent\n\nMemberModule -->\n\nChangePasswordDialogComponent->MemberModule\n\n\n\n\n\nMemberComponent\n\nMemberComponent\n\nMemberModule -->\n\nMemberComponent->MemberModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nMemberModule -->\n\nProfileComponent->MemberModule\n\n\n\n\n\nMemberRoutingModule\n\nMemberRoutingModule\n\nMemberModule -->\n\nMemberRoutingModule->MemberModule\n\n\n\n\n\nCollapsePanelComponent\n\nCollapsePanelComponent\n\nSharedModule -->\n\nCollapsePanelComponent->SharedModule\n\n\n\n\n\nEnumToArrayPipe\n\nEnumToArrayPipe\n\nSharedModule -->\n\nEnumToArrayPipe->SharedModule\n\n\n\n\n\nFormErrorComponent\n\nFormErrorComponent\n\nSharedModule -->\n\nFormErrorComponent->SharedModule\n\n\n\n\n\nInProgressComponent\n\nInProgressComponent\n\nSharedModule -->\n\nInProgressComponent->SharedModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedModule -->\n\nLoaderComponent->SharedModule\n\n\n\n\n\nToDatePipe\n\nToDatePipe\n\nSharedModule -->\n\nToDatePipe->SharedModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nTournamentModule -->\n\nDetailsComponent->TournamentModule\n\n\n\n\n\nEditComponent\n\nEditComponent\n\nTournamentModule -->\n\nEditComponent->TournamentModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nTournamentModule -->\n\nIndexComponent->TournamentModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nTournamentModule -->\n\nMatchComponent->TournamentModule\n\n\n\n\n\nRoundFilterPipe\n\nRoundFilterPipe\n\nTournamentModule -->\n\nRoundFilterPipe->TournamentModule\n\n\n\n\n\nStatusToStringPipe\n\nStatusToStringPipe\n\nTournamentModule -->\n\nStatusToStringPipe->TournamentModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentsRoutingModule\n\nTournamentsRoutingModule\n\nTournamentModule -->\n\nTournamentsRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        34 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminMenu   (src/.../menu.component.ts)\n                        \n                        \n                            baseMenu   (src/.../menu.component.ts)\n                        \n                        \n                            calculateTournamentScore   (src/.../tournament.reducers.ts)\n                        \n                        \n                            changeCriteria   (src/.../tournament.reducers.ts)\n                        \n                        \n                            changePage   (src/.../tournament.reducers.ts)\n                        \n                        \n                            changeResult   (src/.../tournament.reducers.ts)\n                        \n                        \n                            changeTab   (src/.../tournament.reducers.ts)\n                        \n                        \n                            endState   (src/.../fade.animation.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            fadeAnimation   (src/.../fade.animation.ts)\n                        \n                        \n                            initialState   (src/.../session.reducer.ts)\n                        \n                        \n                            initialState   (src/.../tournament.reducers.ts)\n                        \n                        \n                            LoadingReducer   (src/.../loading.reducer.ts)\n                        \n                        \n                            loadingStart   (src/.../loading.reducer.ts)\n                        \n                        \n                            loadingStop   (src/.../loading.reducer.ts)\n                        \n                        \n                            loadSelectedTournament   (src/.../tournament.reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../app.module.ts)\n                        \n                        \n                            registerForm   (src/.../register.form.ts)\n                        \n                        \n                            selectTournament   (src/.../tournament.reducers.ts)\n                        \n                        \n                            SessionReducer   (src/.../session.reducer.ts)\n                        \n                        \n                            sessionStart   (src/.../session.reducer.ts)\n                        \n                        \n                            sessionStop   (src/.../session.reducer.ts)\n                        \n                        \n                            startState   (src/.../fade.animation.ts)\n                        \n                        \n                            startTournament   (src/.../tournament.reducers.ts)\n                        \n                        \n                            tournamentForm   (src/.../tournament.form.ts)\n                        \n                        \n                            TournamentReducer   (src/.../tournament.reducers.ts)\n                        \n                        \n                            tournamentSearchForm   (src/.../tournament-search.form.ts)\n                        \n                        \n                            validateRoundResults   (src/.../tournament.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/layout/components/menu/menu.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { title: 'Accueil', link: ['home'], icon: PrimeIcons.HOME },\n  { title: 'Tournois', icon: PrimeIcons.CALENDAR, children: [\n    { title: 'Index', link: ['tournament', 'index'] },\n    { title: 'Nouveau', link: ['tournament', 'add'] },\n  ] },\n  { title: 'Nouveau membre', icon: PrimeIcons.USER_PLUS, link: ['member', 'add'] },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { title: 'Accueil', link: ['home'], icon: PrimeIcons.HOME },\n  { title: 'Tournois', link: ['tournament', 'index'], icon: PrimeIcons.LIST },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/features/tournament/states/tournament.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateTournamentScore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (round: number, tournament: TournamentDetailsModel) => ({ \n    ...tournament,\n    canValidateRound: tournament.matches.filter(m => m.round === round).every(m => m.result !== ResultEnum.NOT_PLAYED),\n    players :([ ...tournament?.players.map(p => ({\n        ...p,\n        matchPlayed: tournament?.matches\n            .filter(m => m.round  prev + 1, 0),\n        wins: tournament?.matches\n            .filter(m => m.round  (m.blackId === p.id && m.result === ResultEnum.BLACK_WIN) || (m.whiteId === p.id && m.result === ResultEnum.WHITE_WIN))\n            .reduce((prev, current) => prev + 1, 0),\n        defeats: tournament?.matches\n            .filter(m => m.round  (m.blackId === p.id && m.result === ResultEnum.WHITE_WIN) || (m.whiteId === p.id && m.result === ResultEnum.BLACK_WIN))\n            .reduce((prev, current) => prev + 1, 0),\n        draws: tournament?.matches\n            .filter(m => m.round  m.result === ResultEnum.DRAW)\n            .reduce((prev, current) => prev + 1, 0)\n    })) ]\n    .sort((p1, p2) => (p2.wins + p2.draws * 0.5) - (p1.wins + p1.draws * 0.5))\n    .reduce((prev: any[], current, index) => {\n        current.score = current.wins + current.draws * 0.5;\n        current.position = prev[prev.length-1]?.score === current.score ? prev[prev.length-1]?.position : (index + 1);\n        return [...prev, current];\n    }, [])\n)})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeCriteria\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] change criteria', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] change page', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeResult\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] change result', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTab\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] change tab', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : { \n    searchCriteria: { offset: 0, name: null },\n    selectedTournament: {},\n    selectedTab: -1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSelectedTournament\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] load selected', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTournament\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] select tournament', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTournament\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] start', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TournamentReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    initialState,\n    on(changeCriteria, (state, {criteria}) => ({ \n        ...state,\n        searchCriteria: { ...state.searchCriteria, ...criteria },\n    })),\n    on(changePage, (state, {offset}) => ({ \n        ...state,\n        searchCriteria: { ...state.searchCriteria, offset: offset },\n    })),\n    on(loadSelectedTournament, (state, {tournament}) => ({\n        ...state,\n        selectedTab: tournament.currentRound - 1,\n        selectedTournament:  calculateTournamentScore(tournament.currentRound, tournament)\n    })),\n    on(changeTab, (state, {tab}) => ({\n        ...state,\n        selectedTab: tab,\n        selectedTournament:  calculateTournamentScore(tab + 1, state.selectedTournament)\n    })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRoundResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[tournament] validateRoundResults', props())\n                    \n                \n\n\n        \n    \n\n    src/app/shared/animations/fade.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        endState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { opacity: 1 }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fadeAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('fadeAnimation', [\n    transition('* => *', [\n        query(':enter', [\n            style(startState)\n            ], { optional: true }\n        ),\n        query(':leave', [\n            style({ ...endState, position: 'absolute', width: 'calc(100% - 40px)', top: '20px' }),\n            animate('0.3s', style({ ...startState })),\n            ], { optional: true }\n        ),\n        query(':enter', [\n            style(startState),\n            animate('0.3s', style(endState)),\n            ], { optional: true }\n        ),\n    ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { opacity: 0 }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiBaseUrl: 'https://khun.somee.com/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiBaseUrl: 'http://khun.somee.com/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/states/session.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : { isLogged: false }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SessionReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    initialState,\n    on(sessionStart, ({}, {id, username, token, role}) => ({ \n        id,\n        username, \n        token,\n        role,\n        isLogged: true \n    })),\n    on(sessionStop, () => initialState)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionStart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[session] start', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionStop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[session] stop')\n                    \n                \n\n\n        \n    \n\n    src/app/core/states/loading.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoadingReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    false,\n    on(loadingStart, () => true),\n    on(loadingStop, () => false)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[loading] start')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[loading] stop')\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                \n                    \n                        Default value : [localStorageSyncReducer]\n                    \n                \n\n\n        \n    \n\n    src/app/features/member/forms/register.form.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    username: [null, [\n        Validators.required,\n        Validators.maxLength(100),\n    ]],\n    email: [null, [\n        Validators.required,\n        Validators.email,\n    ]],\n    elo: [null, [\n        Validators.min(0),\n        Validators.max(3000),\n    ]],\n    birthDate: [null, [\n        Validators.required,\n        DateValidators.notBefore(new Date()),\n    ]],\n    gender: [null, [\n        Validators.required,\n    ]],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/features/tournament/forms/tournament.form.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tournamentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: [null, [Validators.required, Validators.maxLength(100)]],\n    location: [null, [Validators.maxLength(100)]],\n    minPlayers: [2, [Validators.required, Validators.min(2), Validators.max(16)]],\n    maxPlayers: [2, [Validators.required, Validators.min(2), Validators.max(16)]],\n    eloMin:\t[null, [Validators.min(0), Validators.max(3000)]],\n    eloMax: [null, [Validators.min(0), Validators.max(3000)]],\n    categories: [null, [Validators.required]],\n    womenOnly: [false],\n    endOfRegistrationDate: [new Date(), Validators.required, ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/features/tournament/forms/tournament-search.form.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tournamentSearchForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: [],\n    category: [],\n    statuses: [],\n    womenOnly: [],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
